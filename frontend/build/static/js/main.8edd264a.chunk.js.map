{"version":3,"sources":["utilities/blockchain.js","actions/networkActions.js","constants/NetworkActionTypes.js","constants/TokenActionTypes.js","contractComponents/stage0/MintTokens.js","actions/tokenActions.js","contractComponents/stage0/SellTokens.js","components/Status.js","constants/UserActionTypes.js","actions/userActions.js","containers/Status.js","components/shared/Map.js","components/shared/ProjectHeader.js","contractComponents/stage1/StakeProject.js","contractComponents/stage1/UnstakeProject.js","contractComponents/stage1/CheckStaked.js","components/project/1Stake.js","containers/project/1Stake.js","containers/1Stake.js","utilities/hashing.js","contractComponents/stage2/SubmitTaskList.js","contractComponents/stage2/CheckActive.js","contractComponents/stage2/RewardProposer.js","components/shared/DraggableTable.js","components/project/2Add.js","containers/project/2Add.js","containers/2Add.js","constants/TaskActionTypes.js","actions/taskActions.js","contractComponents/stage3/SubmitFinalTaskList.js","contractComponents/stage3/CheckValidate.js","components/project/3Claim.js","contractComponents/stage3/ClaimTask.js","contractComponents/stage3/TaskComplete.js","containers/project/3Claim.js","containers/3Claim.js","contractComponents/stage4/CheckVoting.js","components/project/4Validate.js","components/task/4Validate.js","containers/task/4Validate.js","contractComponents/stage4/ValidateTask.js","containers/project/4Validate.js","containers/4Validate.js","contractComponents/stage5/CheckFinal.js","components/project/5Vote.js","contractComponents/stage5/RewardValidator.js","contractComponents/stage5/RewardTask.js","contractComponents/stage5/CommitVote.js","contractComponents/stage5/RevealVote.js","containers/project/5Vote.js","containers/5Vote.js","components/project/Finished.js","contractComponents/stage5/RescueVote.js","containers/project/Finished.js","containers/finished/Complete.js","containers/finished/Failed.js","components/project/Expired.js","containers/finished/Expired.js","utilities/uport.js","containers/Landing.js","containers/Main.js","App.js","registerServiceWorker.js","reducers/NavigationReducer.js","constants/PollActionTypes.js","reducers/userReducer.js","reducers/pollReducer.js","reducers/networkReducer.js","reducers/projectReducer.js","reducers/index.js","epics/network.js","epics/user.js","epics/token.js","epics/task.js","actions/pollActions.js","epics/index.js","epics/project.js","store/store.js","index.js","constants/ProjectActionTypes.js","actions/projectActions.js","abi/TokenRegistry.js","abi/ReputationRegistry.js","abi/ProjectRegistry.js","abi/DistributeToken.js","abi/ProjectLibrary.js","utilities/ipfs.js","components/shared/Sidebar.js","abi/Project.js","abi/Task.js","containers/0Propose.js","components/Propose.js"],"names":["__webpack_require__","d","__webpack_exports__","web3","eth","tr","rr","pr","dt","P","T","web3init","_abi_TokenRegistry__WEBPACK_IMPORTED_MODULE_0__","_abi_ReputationRegistry__WEBPACK_IMPORTED_MODULE_1__","_abi_ProjectRegistry__WEBPACK_IMPORTED_MODULE_2__","_abi_DistributeToken__WEBPACK_IMPORTED_MODULE_3__","_abi_Project__WEBPACK_IMPORTED_MODULE_4__","_abi_Task__WEBPACK_IMPORTED_MODULE_5__","_abi_ProjectLibrary__WEBPACK_IMPORTED_MODULE_6__","web3__WEBPACK_IMPORTED_MODULE_7__","web3__WEBPACK_IMPORTED_MODULE_7___default","n","ethjs__WEBPACK_IMPORTED_MODULE_8__","ethjs__WEBPACK_IMPORTED_MODULE_8___default","truffle_contract__WEBPACK_IMPORTED_MODULE_9__","truffle_contract__WEBPACK_IMPORTED_MODULE_9___default","Web3","window","currentProvider","TR","Eth","contract","abi","JSON","parse","TokenRegistryABI","setProvider","at","TokenRegistryAddress","RR","ReputationRegistryABI","ReputationRegistryAddress","PR","ProjectRegistryABI","ProjectRegistryAddress","DT","DistributeTokenABI","DistributeTokenAddress","PL","ProjectLibraryABI","ProjectLibraryAddress","ProjectABI","TaskABI","getNetworkStatus","networkStatusReceived","_constants_NetworkActionTypes__WEBPACK_IMPORTED_MODULE_0__","type","GET_NETWORK_STATUS","responseDetails","NETWORK_STATUS_RECEIVED","MINT_TOKENS","TOKENS_MINTED","SELL_TOKENS","TOKENS_SOLD","connect","dispatch","mintTokens","amount","txObj","props","react_default","a","createElement","es_button","icon","color","onClick","tokensToBuy","value","toWei","Math","ceil","ethToSend","from","user","sellTokens","ButtonGroup","Button","Group","components_Status","_ref","totalTokenSupply","balance","marketPercentage","ethPool","capitalEquivalent","currentPrice","currentPriceUSD","totalReputationSupply","reputationBalance","ethToRefund","input","notRegistered","register","openFaucet","faucet","onChange","Sidebar","style","marginLeft","flexDirection","display","justifyContent","alignItems","className","marginTop","concat","backgroundColor","padding","width","MintTokens","SellTokens","REGISTER_USER","REGISTERED_USER","LOGIN_USER","LOGGED_IN_USER","LOGOUT_USER","GET_USER_STATUS","USER_STATUS_RECEIVED","GET_USER_VOTES","USER_VOTES_RECEIVED","getUserVotes","account","Status","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","getPriceData","_this2","registering","getAccounts","asyncToGenerator","regenerator_default","mark","_callee","err","accounts","wrap","_context","prev","next","length","setState","alert","stop","_x","_x2","apply","arguments","price","getCryptoPrice","ethPrice","weiBal","toNumber","fromWei","_this3","_ref2","_callee3","_context3","getUserStatus","_x3","_x4","val","weiRequired","then","result","ethRequired","totalSupply","refund","Error","_context4","t0","_this4","network","totalTokens","userTokens","round","parseFloat","toFixed","totalReputation","userReputation","ref","placeholder","e","React","Component","userAccount","payload","mapboxgl","accessToken","Map","lngLat","map","container","mapContainer","interactive","setCenter","setZoom","np","marker","Marker","setLngLat","addTo","undefined","remove","id","height","el","ProjectHeader","name","address","photo","summary","location","cost","reputationCost","wordWrap","src","alt","shared_Map","stakeProject","unstakeProject","checkStakedStatus","_1Stake","tokensLeft","totalReputationStaked","date","stakeInput","tokens","reputation","paddingTop","_1Stake_ButtonGroup","stage1_StakeProject","UnstakeProject","CheckStaked","StakeProject","stake","error","nextDeadline","project","weiCost","BigNumber","toString","Date","parseInt","minus","div","toLocaleString","stakedValue","marginRight","ownProps","projects","projQuery","gql","_templateObject","Stake","description","tempProject","currPrice","getProjects","sent","console","log","keys","i","project_1Stake","key","index","paddingLeft","paddingRight","keccakHashes","types","bytesarray","objArray","push","t","v","soliditySha3","hashTasks","taskArray","taskHashArray","args","thisTask","fromAscii","percentage","taskList","submitHashedTaskList","tasks","taskHash","projectAddress","reduce","curr","hashList","arr","slice","numArgs","repeat","split","hashTasksArray","task","checkActiveStatus","proposer","proposerRewarded","rewardProposer","disabled","BodyRow","isOver","connectDragSource","connectDropTarget","dragRow","moveRow","clientOffset","sourceClientOffset","initialClientOffset","restProps","objectWithoutProperties","objectSpread","cursor","direction","dragIndex","hoverIndex","hoverMiddleY","y","hoverClientY","dragDirection","omittedIndex","_","assign","DropTarget","drop","monitor","getItem","dropTarget","getSourceClientOffset","DragSource","beginDrag","dragSource","getClientOffset","getInitialClientOffset","DragSortingTable","components","body","row","data","columns","table","dataSource","onRow","record","pagination","DragDropContext","HTML5Backend","title","dataIndex","submissionColumns","_2Add","submission","submissionTasks","marginBottom","RewardProposer","DraggableTable","SubmitTaskList","CheckActive","AddProject","tempTask","handleTaskInput","getVerifiedTaskLists","getNextDeadline","temp","defineProperty","newState","update","$splice","setTaskList","newTaskList","splice","tempTaskList","verifiedSubmissions","ethReward","usdReward","deleteTask","deleteElement","percentages","submissions","submitter","content","weighting","submittedTasks","taskDetails","_2Add_templateObject","Add","setEthPrice","project_2Add","FINAL_TASK_LIST_SUBMITTED","SUBMIT_FINAL_TASK_LIST","CLAIM_TASK","TASK_CLAIMED","SUBMIT_TASK_COMPLETE","TASK_COMPLETED","VALIDATE_TASK","TASK_VALIDATED","GET_VALIDATIONS","VALIDATIONS_RECEIVED","REWARD_VALIDATOR","VALIDATOR_REWARDED","REWARD_TASK","TASK_REWARDED","GET_USER_VALIDATIONS","USER_VALIDATIONS_RECEIVED","COMMIT_VOTE","REVEAL_VOTE","RESCUE_VOTE","getUserValidations","submitFinalTaskList","listSubmitted","checkValidateStatus","_3Claim","margin","SubmitFinalTaskList","CheckValidate","claimTask","claimed","submitTaskComplete","complete","ClaimProject","weiReward","floor","repClaim","buttons","_3Claim_ButtonGroup","ClaimTask","TaskComplete","_3Claim_templateObject","Claim","project_3Claim","checkVotingStatus","_4Validate","CheckVoting","task_4Validate","validations","ValidateTasks","getValidations","validation","validateTask","taskIndex","validationState","target","returnInput","ValidateTask","containers_task_4Validate","sort","b","_4Validate_templateObject","Validate","project_4Validate","checkFinalStatus","_5Vote","votes","CheckFinal","rewardValidator","valRewarded","rewarded","rewardTask","claimer","workerRewarded","commitVote","collateralType","secretHash","vote","salt","pollID","_commitVote","status","taskAddr","random","utils","solidityKeccak256","pollId","revealVote","VoteTasks","rewardVal","rewardWork","needsVote","validationRewardClaimable","workerRewardClaimable","RewardValidator","RewardTask","revealed","RevealVote","CommitVote","rewardWorker","taskNeedsVote","_5Vote_templateObject","Vote","getVotes","numTokens","pollInfo","users","currPollID","currNumTokens","project_5Vote","Finished","rescueVote","FinishedProject","rescued","RescueVote","Complete_templateObject","Complete","project_Finished","Failed_templateObject","Failed","project_Expired","Expired_templateObject","Expired","uport","Connect","Landing","metamask","getUport","checkMetamaskConnected","checkMetamask","ethereum","_metamask","isEnabled","enable","setTimeout","requestDisclosure","requested","notifications","onResponse","res","loginUser","href","credentials","Main","Switch","Route","exact","path","component","Propose","App","containers_Main","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialState","route","navigationReducer","VOTE_COMMITTED","VOTE_REVEALED","VOTE_RESCUED","allUsers","Nemo","combineReducers","navigation","NavigationReducer","action","userObj","tokenBalance","receipt","amountMinted","amountWithdrawn","voteDetails","txReceipt","logs","PROJECTS_RECEIVED","object","obj","item","TASK_LIST_SET","2","HASHED_TASK_LIST_SUBMITTED","oldSubmissions","newSubmissions","overwrite","findIndex","element","submitterAddress","PROJECT_STAKED","weiChange","repBalance","repStaked","1","PROJECT_UNSTAKED","VERIFIED_TASK_LISTS_RECEIVED","PROPOSER_REWARDED","3","4","valFee","validator","polls","voter","_action$voteDetails","poll","updateAllUsers","router","routerReducer","networkQuery","network_templateObject","getUserEpic","action$","ofType","pipe","mergeMap","query","user_templateObject","client","variables","flatMap","iif","of","registerUser","registerUserEpic","mutation","user_templateObject2","mutate","getUserStatusEpic","user_templateObject3","getUserVotesEpic","user_templateObject4","userVoteRecords","mintTokensEpic","mint","tokensMinted","sellTokensEpic","sell","tokensSold","submitFinalTaskListEpic","task_templateObject","task_templateObject2","topTaskHash","findFinalTaskHash","submitHashList","finalTaskListSubmitted","claimTaskEpic","task_templateObject3","findTaskByIndex","taskClaimed","submitTaskCompleteEpic","taskCompleted","validateTaskEpic","validationEntryFee","taskValidated","getValidationsEpic","concatMap","task_templateObject4","validationsReceived","getUserValidationsEpic","_templateObject5","userValidationsReceived","getUserValidationsinProject","rewardValidatorEpic","validatorRewarded","rewardTaskEpic","taskRewarded","commitVoteEpic","_templateObject6","voteCommit","getPrevPollID","_templateObject7","revealVoteEpic","voteReveal","rescueVoteEpic","rescueTokens","combineEpics","store","merge","GET_PROJECTS","projectsReceived","allProjectsinState","getProjectsEpic","PROPOSE_PROJECT","proposeProject","projObj","stakingEndDate","multiHash","stakeResult","STAKE_PROJECT","stakeTokens","stakeReputation","staked","projectStaked","UNSTAKE_PROJECT","unstakeTokens","unstakeReputation","projectUnstaked","firstResult","CHECK_STAKED_STATUS","checkStaked","EMPTY","CHECK_ACTIVE_STATUS","checkActive","active","REWARD_PROPOSER","_templateObject4","proposerType","refundProposer","SUBMIT_HASHED_TASK_LIST","stringify","taskListHash","_templateObject2","addTaskHash","hashedTaskListSubmitted","pow","SET_TASK_LIST","project_templateObject","taskListSet","addTaskList","GET_VERIFIED_TASK_LISTS","_templateObject3","verifiedTaskListsReceived","verifiedPrelimTaskLists","getVerifiedTaskListsEpic","CHECK_VALIDATE_STATUS","checkValidate","CHECK_VOTING_STATUS","checkVoting","CHECK_FINAL_STATUS","checkEnd","end","history","createHistory","routeMiddleware","routerMiddleware","epicMiddleware","createEpicMiddleware","createStore","reducers","compose","applyMiddleware","run","epics","configureStore","ApolloClient","uri","ReactDOM","render","es","react_router_redux_es","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","PROJECT_PROPOSED","ACTIVE_STATUS_CHECKED","VALIDATE_STATUS_CHECKED","VOTING_STATUS_CHECKED","STAKED_STATUS_CHECKED","FINAL_STATUS_CHECKED","_constants_ProjectActionTypes__WEBPACK_IMPORTED_MODULE_0__","require","networks","TokenRegistryBytecode","bytecode","module","exports","ReputationRegistryBytecode","ProjectRegistryBytecode","DistributeTokenBytecode","ProjectLibraryBytecode","deployedBytecode","ipfs_api__WEBPACK_IMPORTED_MODULE_0__","ipfs","ipfsAPI","titleStyle","fontSize","fontFamily","titleBarStyle","fontWeight","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","actions","toggleShow","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_7___default","position","borderRadius","avatar","textAlign","ProjectBytecode","TaskBytecode","MapboxClient","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","loading","imageUrl","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","getContractValues","handlePhotoUpload","handlePriceChange","handleLocationChange","handlePhotoChange","triggerMapChange","timer","geolocation","getCurrentPosition","pos","ll","LngLat","coords","longitude","latitude","addControl","NavigationControl","on","values","valueOf","Data","Links","put","enc","node","toJSON","multihash","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_jessicamarshall_distribute_dogfood_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_callee2","_context2","info","file","originFileObj","getBase64","photoObj","_this5","reader","FileReader","onloadend","buf","Buffer","files","add","url","hash","readAsArrayBuffer","img","callback","readAsDataURL","clearTimeout","_this6","geocodeForward","features","geometry","coordinates","_this7","react__WEBPACK_IMPORTED_MODULE_8___default","_components_shared_Sidebar__WEBPACK_IMPORTED_MODULE_14__","_components_Propose__WEBPACK_IMPORTED_MODULE_13__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","antd__WEBPACK_IMPORTED_MODULE_4__","antd__WEBPACK_IMPORTED_MODULE_5__","antd__WEBPACK_IMPORTED_MODULE_6__","TextArea","Input","FormItem","Form","Item","create","submitHandler","form","getFieldsValue","resetFields","uploadButton","getFieldDecorator","layout","label","listType","showUploadList","rows"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAA,IAYIC,EAZJC,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAA,KAAAiB,EAAAjB,EAAA,KAAAkB,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAA,KAAAoB,EAAApB,EAAAqB,EAAAF,GAAAG,EAAAtB,EAAA,KAAAuB,EAAAvB,EAAAqB,EAAAC,GAAAE,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAAqB,EAAAG,GAsBarB,EARXQ,EAAW,IAAIe,IAAKC,OAAOxB,KAAKyB,iBASrBxB,EAAMO,EAASP,IAKtByB,GAFe,IAAIC,IAAIH,OAAOxB,KAAKyB,iBAE9BG,IAAS,CAACC,IAAKC,KAAKC,MAAMC,uBACrCN,EAAGO,YAAYT,OAAOxB,KAAKyB,iBACpB,IAAMvB,EAAKwB,EAAGQ,GAAGC,wBAElBC,EAAKR,IAAS,CAACC,IAAKC,KAAKC,MAAMM,2BACrCD,EAAGH,YAAYT,OAAOxB,KAAKyB,iBACpB,IAAMtB,EAAKiC,EAAGF,GAAGI,6BAElBC,EAAKX,IAAS,CAACC,IAAKC,KAAKC,MAAMS,wBACrCD,EAAGN,YAAYT,OAAOxB,KAAKyB,iBACpB,IAAMrB,EAAKmC,EAAGL,GAAGO,0BAElBC,EAAKd,IAAS,CAACC,IAAKC,KAAKC,MAAMY,wBACrCD,EAAGT,YAAYT,OAAOxB,KAAKyB,iBACpB,IAAMpB,EAAKqC,EAAGR,GAAGU,0BAElBC,EAAKjB,IAAS,CAACC,IAAKC,KAAKC,MAAMe,uBACrCD,EAAGZ,YAAYT,OAAOxB,KAAKyB,iBACToB,EAAGX,GAAGa,yBAAjB,IAEMzC,EAAIsB,IAAS,CAACC,IAAKC,KAAKC,MAAMiB,gBAC3C1C,EAAE2B,YAAYT,OAAOxB,KAAKyB,iBAEnB,IAAMlB,EAAIqB,IAAS,CAACC,IAAKC,KAAKC,MAAMkB,aAC3C1C,EAAE0B,YAAYT,OAAOxB,KAAKyB,uICpD1B5B,EAAAC,EAAAC,EAAA,sBAAAmD,IAAArD,EAAAC,EAAAC,EAAA,sBAAAoD,IAAA,IAAAC,EAAAvD,EAAA,KAEO,SAASqD,IACd,MAAO,CACLG,KAAMC,KAIH,SAASH,EAAuBI,GACrC,MAAO,CACLF,KAAMG,IACND,+JCXJ1D,EAAAC,EAAAC,EAAA,sBAAAuD,IAAAzD,EAAAC,EAAAC,EAAA,sBAAAyD,IAAO,IAAMF,EAAqB,qBACrBE,EAA0B,0WCD1BC,EAAc,cACdC,EAAgB,gBAChBC,EAAc,cACdC,EAAc,cCG3B,IAeeC,cAAQ,KANI,SAACC,GAC1B,MAAO,CACLC,WAAY,SAACC,EAAQC,GAAT,OAAmBH,ECf5B,SAAqBE,EAAQC,GAClC,MAAO,CACLZ,KAAMI,EACNO,SACAC,SDWwCF,CAAWC,EAAQC,OAIhDJ,CAfU,SAACK,GACxB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNC,KAAK,gBACLC,MAAM,UACNC,QAAS,kBAAMP,EAAMH,WAAWG,EAAMQ,YAAa,CAACC,MAAO3E,IAAK4E,MAAMC,KAAKC,KAAKZ,EAAMa,WAAY,SAAUC,KAAMd,EAAMe,SAHlH,SEaKpB,cAAQ,KANI,SAACC,GAC1B,MAAO,CACLoB,WAAY,SAAClB,EAAQC,GAAT,OAAmBH,EDC5B,SAAqBE,EAAQC,GAClC,MAAO,CACLZ,KAAMM,EACNK,SACAC,SCLwCiB,CAAWlB,EAAQC,OAIhDJ,CAfU,SAACK,GACxB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNC,KAAK,gBACLC,MAAM,UACNC,QAAS,kBAAMP,EAAMgB,WAAWhB,EAAMQ,YAAa,CAACM,KAAMd,EAAMe,SAH1D,UCDJE,EAAcC,IAAOC,MACZC,EAAA,SAAAC,GAoBT,IAnBJC,EAmBID,EAnBJC,iBACAC,EAkBIF,EAlBJE,QACAC,EAiBIH,EAjBJG,iBACAC,EAgBIJ,EAhBJI,QACAC,EAeIL,EAfJK,kBACAC,EAcIN,EAdJM,aACAC,EAaIP,EAbJO,gBACAC,EAYIR,EAZJQ,sBACAC,EAWIT,EAXJS,kBACAjB,EAUIQ,EAVJR,UACAkB,EASIV,EATJU,YACAC,EAQIX,EARJW,MACAjB,EAOIM,EAPJN,KACAP,EAMIa,EANJb,YAMIa,EALJY,cAKIZ,EAJJa,SAIIb,EAHJc,WAGId,EAFJe,OAEIf,EADJgB,SAEA,OACEpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAKC,cAAe,SAAUC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,kBACnH3C,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,cAAd,mBAEF5C,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,GAAIM,UAAW,GAAIJ,QAAS,OAAQC,eAAgB,eAC3E1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UAAKmB,GACLrB,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,UAAKoB,GACLtB,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,aAAA4C,OAAQvB,EAAR,MACAvB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,aAAA4C,OAAQtB,EAAR,SACAxB,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,cAAA4C,OAASrB,IACTzB,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,aAAA4C,OAAQpB,EAAR,SACA1B,EAAAC,EAAAC,cAAA,cAAA4C,OAASnB,KAEX3B,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,KACvBvC,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,UAAK0B,GACL5B,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,UAAK2B,KAGT7B,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,MAAOK,UAAW,KAC7D7C,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWC,QAAS,GAAIC,MAAO,MAC3DjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACC6B,GAEH/B,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACO,UAAW,KACtB7C,EAAAC,EAAAC,cAAA,0BAAA4C,OAAqBlC,EAArB,UAEFZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BAAA4C,OAAuBhB,EAAvB,UAEF9B,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACO,UAAW,KACtB7C,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAACgD,EAAD,CACEpC,KAAMA,EACNF,UAAWA,EACXL,YAAaA,IAEfP,EAAAC,EAAAC,cAACiD,EAAD,CACErC,KAAMA,EACNP,YAAaA,oBC9ElB6C,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAa,aACbC,EAAiB,iBACjBC,EAAc,cACdC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAAiB,iBACjBC,EAAsB,sBCoD5B,SAASC,EAAcC,GAC5B,MAAO,CACL5E,KAAMyE,EACNG,eCrDEC,cACJ,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXhE,YAAa,IAEfyD,EAAKjF,iBAAmBiF,EAAKjF,iBAAiByF,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKU,aAAeV,EAAKU,aAAaF,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KANPA,oFASO,IAAAW,EAAAR,MACgB,IAAhCA,KAAKpE,MAAMe,KAAK8D,aAClB9I,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAKC,GAAZ,OAAAJ,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,IACCC,EAASK,OAEXb,EAAKc,SAAS,CAAC3E,KAAMqE,EAAS,KAE9BO,MAAM,2BANI,wBAAAL,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,IAUA5B,KAAKO,gBAELP,KAAKpF,uEAKPoF,KAAKO,wLAIgBsB,IAAMC,eAAe,MAAO,qBAA7CC,kBACgBhK,IAAGiK,uBAAnBA,SAA6BC,oBACPlK,IAAGwF,sBAAzBA,SAAyC0E,WAC7CjC,KAAKsB,SAAS,CACZS,SAAUA,EAASF,MACnBG,SACAzE,aAAc7F,IAAKwK,QAAQ3E,EAAc,yJAIzB,IAAA4E,EAAAnC,KAClBA,KAAKpE,MAAMhB,mBACXoF,KAAKO,eACL5I,IAAI+I,YAAJ,eAAA0B,EAAAtC,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAwB,EAAOtB,EAAKC,GAAZ,OAAAJ,EAAA9E,EAAAmF,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACTL,IACCC,EAASK,QAEXc,EAAKvG,MAAM2G,cAAcvB,EAAS,IAClCmB,EAAKb,SAAS,CAAC3E,KAAMqE,EAAS,MAE9BO,MAAM,2BAPI,wBAAAe,EAAAd,SAAAa,EAAArC,SAAhB,gBAAAwC,EAAAC,GAAA,OAAAL,EAAAT,MAAA3B,KAAA4B,YAAA,6EAacc,8EACd1C,KAAKsB,SAAS,CAAClF,YAAasG,MACxBA,EAAM,6CAGA3K,IAAG4K,YAAYD,GAAKE,KAAK,SAAAC,GAC7BC,EAAcpL,IAAKwK,QAAQW,EAAOZ,WAAY,qBAEjB,IAA3BjC,KAAKpE,MAAMmH,4BACbC,EAASF,0CAEH/K,IAAGwF,eAAeqF,KAAK,SAAAC,GAC3BG,EAAStL,IAAKwK,QAASW,EAAOZ,WAAaS,EAAM,mBAGrD1C,KAAKsB,SAAS,CAAC7E,UAAWqG,EAAanF,YAAaqF,4DAE9C,IAAIC,MAAJC,EAAAC,kJAKF,IAAAC,EAAApD,KACR,OACEnE,EAAAC,EAAAC,cAACiB,EAAD,CACEE,iBAAkB8C,KAAKpE,MAAMyH,QAAQC,YACrCnG,QAAS6C,KAAKpE,MAAMe,KAAK4G,WACzBnG,iBAAkB4C,KAAKpE,MAAMe,KAAK4G,WAC9BhH,KAAKiH,MAAMxD,KAAKpE,MAAMe,KAAK4G,WAAavD,KAAKpE,MAAMyH,QAAQC,YAAc,KAAS,IAClF,EACJjG,QAAS3F,IAAKwK,QAAQlC,KAAKI,MAAM4B,OAAQ,SACzC1E,kBAAmB0C,KAAKI,MAAM2B,SAC1B0B,WAAWzD,KAAKI,MAAM2B,SAAWrK,IAAKwK,QAAQlC,KAAKI,MAAM4B,OAAQ,UAAU0B,QAAQ,GACnF,EACJnG,aAAcyC,KAAKI,MAAM7C,aACzBC,gBAAiBwC,KAAKI,MAAM7C,aACxBkG,WAAWzD,KAAKI,MAAM7C,aAAe7F,IAAKwK,QAAQlC,KAAKI,MAAM4B,OAAQ,UAAU0B,QAAQ,GACvF,EACJjG,sBAAuBuC,KAAKpE,MAAMyH,QAAQM,gBAC1CjG,kBAAmBsC,KAAKpE,MAAMe,KAAKiH,eACnCnH,UAA2C,qBAAzBuD,KAAKI,MAAM3D,UACzB,MACAF,KAAKiH,MAA6B,IAAvBxD,KAAKI,MAAM3D,WAAsB,IAChDkB,YAA+C,qBAA3BqC,KAAKI,MAAMzC,YAC3B,MACApB,KAAKiH,MAA+B,IAAzBxD,KAAKI,MAAMzC,aAAwB,IAClDvB,YAAa4D,KAAKI,MAAMhE,YACxBO,KAAMqD,KAAKI,MAAMzD,KACjBiB,MACE/B,EAAAC,EAAAC,cAAA,SAAO8H,IAAK,SAACjG,GAAD,OAAYwF,EAAKhH,YAAcwB,GACzCkG,YAAY,mBACZ7F,SAAU,SAAC8F,GAAD,OAAOX,EAAKnF,SAASmF,EAAKhH,YAAYC,QAChDA,MAAO2D,KAAKI,MAAMhE,YAClBrB,KAAK,oBAhHIiJ,IAAMC,WAqIZ1I,cAdS,SAAC6E,GACvB,MAAO,CACLzD,KAAMyD,EAAMzD,MAAQ,GACpB0G,QAASjD,EAAMiD,UAIQ,SAAC7H,GAC1B,MAAO,CACLZ,iBAAkB,kBAAMY,EAASZ,gBACjC2H,cAAe,SAAC2B,GAAD,OAAiB1I,ED5F3B,CACLT,KAAMuE,EACN6E,QC0FuDD,OAI5C3I,CAA6CqE,qCC7I5DwE,IAASC,YAAc,mGA6CRC,cA1Cb,SAAAA,IAAe,IAAAzE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACbzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,QACKI,MAAQ,GAFAP,mFAKb,GAAIG,KAAKpE,MAAM2I,OAAOlD,OAAS,EAAG,CAChC,IAAMmD,EAAM,IAAIJ,IAASE,IAAI,CAC3BG,UAAWzE,KAAK0E,aAChBvG,MAAO,qCACPwG,aAAa,IAEfH,EAAII,UAAU,CAAC5E,KAAKpE,MAAM2I,OAAO,GAAIvE,KAAKpE,MAAM2I,OAAO,KACvDC,EAAIK,QAAQ,IACZ7E,KAAKsB,SAAS,CAACkD,IAAKA,uDAIGM,GACzB,GAAyB,qBAAdA,EAAGP,QAA0BO,EAAGP,OAAOlD,OAAS,IACzDrB,KAAKI,MAAMoE,IAAII,UAAUE,EAAGP,QACK,qBAAtBvE,KAAKI,MAAM2E,QAAwB,CAC5C,IAAMA,GAAS,IAAIX,IAASY,QACzBC,UAAUH,EAAGP,QACbW,MAAMlF,KAAKI,MAAMoE,KACpBxE,KAAKsB,SAAS,CAACyD,gEAMII,IAAnBnF,KAAKI,MAAMoE,KACbxE,KAAKI,MAAMoE,IAAIY,0CAIT,IAAA5E,EAAAR,KACR,OAAOA,KAAKpE,MAAM2I,OAAOlD,OAAS,EAC9BxF,EAAAC,EAAAC,cAAA,OAAKsJ,GAAG,MAAMlH,MAAO,CAACW,MAAO,IAAKwG,OAAQ,KAAMzB,IAAK,SAAA0B,GAAQ/E,EAAKkE,aAAea,KACjF1J,EAAAC,EAAAC,cAAA,iBAvCUiI,IAAMC,WCFTuB,EAAA,SAAAvI,GAQT,IAPJwI,EAOIxI,EAPJwI,KACAC,EAMIzI,EANJyI,QACAC,EAKI1I,EALJ0I,MACAC,EAII3I,EAJJ2I,QACAC,EAGI5I,EAHJ4I,SACAC,EAEI7I,EAFJ6I,KACAC,EACI9I,EADJ8I,eAEA,OACElK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACU,QAAS,KACpBhD,EAAAC,EAAAC,cAAA,UAAK0J,IAEP5J,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACU,QAAS,KACpBhD,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAAC6H,SAAU,eAAvB,YAA+CnK,EAAAC,EAAAC,cAAA,iBAAA4C,OAAY+G,KAExC,qBAAVC,EACL9J,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACmH,OAAQ,IAAKxG,MAAO,KAAMmH,IAAKN,EAAOO,IAAI,qBACvD,KAEJrK,EAAAC,EAAAC,cAAA,0BAAA4C,OAAkBiH,IACjB/J,EAAAC,EAAAC,cAACoK,EAAD,CAAK5B,OAAQsB,IAEdhK,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,iBAAA4C,OAAYmH,GAAZ,SACXjK,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,iBAAA4C,OAAYoH,gBCF3BxK,eAAQ,KANI,SAACC,GAC1B,MAAO,CACL4K,aAAc,SAACrL,EAAM2K,EAAShD,EAAK/G,GAArB,OAA+BH,EAAS4K,YAAarL,EAAM2K,EAAShD,EAAK/G,OAI5EJ,CApBY,SAACK,GAC1B,IAAIuC,EAIJ,OAFIA,EADW,WAAfvC,EAAMb,KACM,CAAC6D,gBAAiB,UAAW1C,MAAO,SACpC,CAAC0C,gBAAiB,UAAW1C,MAAO,SACxCL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNmC,MAAOA,EACPlC,KAAK,cACLC,MAAM,UACNC,QAAS,kBAAMP,EAAMwK,aAAaxK,EAAMb,KAAMa,EAAM8J,QAAS9J,EAAM8G,IAAK,CAAChG,KAAMd,EAAMe,SAJ/E,GAAAgC,OAKF/C,EAAMb,SCUCQ,eAAQ,KANI,SAACC,GAC1B,MAAO,CACL6K,eAAgB,SAACtL,EAAM2K,EAAShD,EAAK/G,GAArB,OAA+BH,EAAS6K,YAAetL,EAAM2K,EAAShD,EAAK/G,OAIhFJ,CApBc,SAACK,GAC5B,IAAIuC,EAIJ,OAFIA,EADW,WAAfvC,EAAMb,KACM,CAAC6D,gBAAiB,UAAW1C,MAAO,SACpC,CAAC0C,gBAAiB,UAAW1C,MAAO,SACxCL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNmC,MAAOA,EACPlC,KAAK,gBACLC,MAAM,UACNC,QAAS,kBAAMP,EAAMyK,eAAezK,EAAMb,KAAMa,EAAM8J,QAAS9J,EAAM8G,IAAK,CAAChG,KAAMd,EAAMe,SAJjF,GAAAgC,OAKF/C,EAAMb,SCICQ,eAAQ,KANI,SAACC,GAC1B,MAAO,CACL8K,kBAAmB,SAACvL,EAAM2K,EAAShD,EAAK/G,GAArB,OAA+BH,EAAS8K,YAAkBvL,EAAM2K,EAAShD,EAAK/G,OAItFJ,CAdW,SAACK,GACzB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNmC,MAAO,CAACO,UAAW,IACnBvC,QAAS,kBAAMP,EAAM0K,kBAAkB1K,EAAM8J,QAAS,CAAChJ,KAAMd,EAAMe,SAF7D,kBCAJE,GAAcC,IAAOC,MAEZwJ,GAAA,SAAAtJ,GAgBT,IAfJwI,EAeIxI,EAfJwI,KACAC,EAcIzI,EAdJyI,QACAC,EAaI1I,EAbJ0I,MACAC,EAYI3I,EAZJ2I,QACAC,EAWI5I,EAXJ4I,SACAC,EAUI7I,EAVJ6I,KACAU,EASIvJ,EATJuJ,WACAT,EAQI9I,EARJ8I,eACAU,EAOIxJ,EAPJwJ,sBACAC,EAMIzJ,EANJyJ,KACAC,EAKI1J,EALJ0J,WACAhK,EAIIM,EAJJN,KACAN,EAGIY,EAHJZ,MAGIY,EAFJ2J,OAEI3J,EADJ4J,WAEA,OACEhL,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWF,UAAW,KAClD7C,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVC,KAAMA,EACNC,eAAgBA,IAElBlK,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACU,QAAS,GAAIiI,WAAY,IACpCjL,EAAAC,EAAAC,cAAA,gCAAA4C,OAA2B6H,IAC3B3K,EAAAC,EAAAC,cAAA,uCAAA4C,OAA+BoH,EAAiBU,IAChD5K,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,kBAA0B,qBAAT2K,EAAP,GAAA/H,OAAiC+H,GAAS,QAC1E7K,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,MAAOK,UAAW,KAC5DiI,EACD9K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgL,GAAD,KACElL,EAAAC,EAAAC,cAACiL,GAAD,CACEtB,QAASA,EACT3K,KAAK,SACL4B,KAAMA,EACN+F,IAAKrG,IAEPR,EAAAC,EAAAC,cAACiL,GAAD,CACEtB,QAASA,EACT3K,KAAK,aACL4B,KAAMA,EACN+F,IAAKrG,MAIXR,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACO,UAAW,IACtB7C,EAAAC,EAAAC,cAACgL,GAAD,KACElL,EAAAC,EAAAC,cAACkL,GAAD,CACEvB,QAASA,EACT3K,KAAK,SACL4B,KAAMA,EACN+F,IAAKrG,IAEPR,EAAAC,EAAAC,cAACkL,GAAD,CACEvB,QAASA,EACT3K,KAAK,aACL4B,KAAMA,EACN+F,IAAKrG,QAMfR,EAAAC,EAAAC,cAACmL,GAAD,CACExB,QAASA,EACT/I,KAAMA,iBCzEVwK,eACJ,SAAAA,IAAe,IAAAtH,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,IACbtH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAhH,KAAAH,QACKI,MAAQ,CACXgH,MAAO,IAHIvH,wEAOL6C,GACR,IACE1C,KAAKsB,SAAS,CAAC8F,MAAO1E,IACtB,MAAO2E,GACP,MAAM,IAAIpE,MAAMoE,qCAIV,IACJb,EAAYjJ,EAAc+J,EADtB9G,EAAAR,KAER,GAAI,qBAAOA,KAAKpE,MAAM2L,QAAyB,CAC7C,IAAIC,EAAU,IAAIC,aAAUzH,KAAKpE,MAAM2L,QAAQC,QAAQE,YACnD1F,EAAS,IAAIyF,aAAUzH,KAAKpE,MAAM2L,QAAQvF,OAAO0F,YAEjDnK,EADJ,qBAAOyC,KAAKpE,MAAM2L,QAAQhK,aACPyC,KAAKpE,MAAM2B,aACXyC,KAAKpE,MAAM2L,QAAQhK,aAElC+J,EADJ,qBAAOtH,KAAKpE,MAAM2L,QAAQD,aACP,IAAIK,KAAKC,SAAS5H,KAAKpE,MAAM2L,QAAQD,eACrC,iBACnBd,EAAajK,KAAKC,KAAMgL,EAASK,MAAM7F,GAAQ8F,IAAIvK,SAEnDiJ,EAAa,iBAEf,OACE3K,EAAAC,EAAAC,cAACwK,GAAD,CACEd,KAAMzF,KAAKpE,MAAM2L,QAAQ9B,KACzBC,QAAS1F,KAAKpE,MAAM8J,QACpBC,MAAO3F,KAAKpE,MAAM2L,QAAQ5B,MAC1BC,QAAS5F,KAAKpE,MAAM2L,QAAQ3B,QAC5BC,SAAU7F,KAAKpE,MAAM2L,QAAQ1B,SAC7BC,KAAMpO,IAAKwK,QAAQ3F,KAAKC,KAAKwD,KAAKpE,MAAM2L,QAAQC,QAAU,MAAO,SACjEhB,WAAYA,EACZT,eAAgB/F,KAAKpE,MAAM2L,QAAQxB,eACnCU,sBAAuBzG,KAAKpE,MAAM2L,QAAQ7J,kBAC1CgJ,KAAMY,EAAaS,iBACnBpB,WACE9K,EAAAC,EAAAC,cAAA,SACE8H,IAAK,SAACjG,GAAD,OAAY4C,EAAKwH,YAAcpK,GACpCkG,YAAY,SACZ/I,KAAK,SACLkD,SAAU,kBAAMuC,EAAKvC,SAASuC,EAAKwH,YAAY3L,QAC/CA,MAAO2D,KAAKI,MAAMgH,MAClBjJ,MAAO,CAACmH,OAAQ,GAAI2C,YAAa,MAGrCtL,KAAMqD,KAAKpE,MAAMe,KACjBN,MAAO2D,KAAKI,MAAMgH,eAtDCpD,IAAMC,WAkElB1I,eANS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAAS,GAAGD,EAASxC,WAIzBnK,CAAyB4L,8WChExC,IAAIiB,GAAYC,KAAHC,MAkBPC,eACJ,SAAAA,IAAe,IAAA1I,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuI,IACb1I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyI,GAAApI,KAAAH,QACKI,MAAQ,CACX/D,MAAO,EACPmM,YAAa,GACbL,SAAU,GACVM,YAAa,GACbC,UAAW,GAPA7I,oFAYbG,KAAK2I,uKAILhR,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAK8B,GAAZ,IAAAtF,EAAA,OAAAqD,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTL,EADS,CAAAG,EAAAE,KAAA,aAERyB,EAAOxB,OAFC,CAAAH,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGgBrJ,IAAGwF,eAHnB,OAGNA,EAHM2D,EAAA0H,KAGmC3G,WAC7CzB,EAAK5E,MAAM+M,cACXnI,EAAKc,SAAS,CAAC/D,eAAcZ,KAAMkG,EAAO,KALhC3B,EAAAE,KAAA,gBAOVyH,QAAQC,IAAI,0BAPF,yBAAA5H,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,uIAaQ,IAAAO,EAAAnC,KACFmI,EAAW,qBAAOnI,KAAKpE,MAAMuM,SAC/BrI,OAAOiJ,KAAK/I,KAAKpE,MAAMuM,UAAU3D,IAAI,SAACkB,EAASsD,GAC/C,OAAOnN,EAAAC,EAAAC,cAACkN,GAAD,CACLC,IAAKF,EACLG,MAAOH,EACPtD,QAASA,EACTnI,aAAc4E,EAAK/B,MAAM7C,aACzBgK,QAASpF,EAAKvG,MAAMuM,SAASzC,GAC7BU,aAAc,SAACrL,EAAM2H,GAAP,OAAeP,EAAKiE,aAAarL,EAAM2K,EAAShD,IAC9D2D,eAAgB,SAACtL,EAAM2H,GAAP,OAAeP,EAAKkE,eAAetL,EAAM2K,EAAShD,IAClE/F,KAAMwF,EAAK/B,MAAMzD,SAGnB,GACJ,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,MACvBvC,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAAEiL,YAAa,OAAQC,aAAc,SAC9ClB,YArDOnE,IAAMC,WAyEX1I,eAZS,SAAC6E,GACvB,MAAO,CACL+H,SAAU/H,EAAM+H,SAAS,KAIF,SAAC3M,GAC1B,MAAO,CACLmN,YAAa,kBAAMnN,EAASmN,YAAY,EAAGP,QAIhC7M,CAA6CgN,kCChGtDe,GAAe,SAACC,EAAOC,GAG3B,IADA,IAAIC,EAAW,GACNT,EAAI,EAAGA,EAAIO,EAAMlI,OAAQ2H,IACnB,SAAbO,EAAMP,GACFS,EAASC,KAAK,CAACC,EAAGJ,EAAMP,GAAIY,EAAGJ,EAAWR,GAAGtB,aAC7C+B,EAASC,KAAK,CAACC,EAAGJ,EAAMP,GAAIY,EAAGJ,EAAWR,KAGhD,OADWa,gBAAYlI,WAAZ,EAAgB8H,IAIhBK,GAAY,SAACC,GAGxB,IAFA,IAAIC,EAAgB,GAChBC,EAAO,CAAC,UAAW,QACdjB,EAAI,EAAGA,EAAIe,EAAU1I,OAAQ2H,IAAK,CACzC,IAAIkB,EAAW,GACfA,EAASR,KAAKhS,IAAKyS,UAAUJ,EAAUf,GAAGR,YAAa,KACvD0B,EAASR,KAAKK,EAAUf,GAAGoB,YAC3BJ,EAAcN,KAAKJ,GAAaW,EAAMC,IAExC,OAAOF,GCoBMzO,eAZS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLmC,SAAUjK,EAAM+H,SAAS,GAAGD,EAASxC,SAAS2E,WAIvB,SAAC7O,GAC1B,MAAO,CACL8O,qBAAsB,SAACC,EAAOC,EAAUC,EAAgB9O,GAAlC,OAA4CH,EAAS8O,YAAqBC,EAAOC,EAAUC,EAAgB9O,OAItHJ,CApCc,SAACK,GAC5B,IAAI0O,EAAuB,WACzB,IAAIC,EAAQ/Q,KAAKC,MAAMmC,EAAMyO,UAI7B,GAAiB,MAHFE,EAAM/F,IAAI,SAAAe,GAAE,OAAIA,EAAG6E,aAAYM,OAAO,SAACvJ,EAAMwJ,GAC1D,OAAOxJ,EAAOwJ,GACb,GAEDpJ,MAAM,uCACD,CACL,IAIIiJ,EDMoB,SAACT,GAC7B,IAAIa,EAAWd,GAAUC,GACzBa,EAASpG,IAAI,SAAAqG,GAAG,OAAIA,EAAIC,MAAM,KAC9B,IAAIC,EAAUH,EAASvJ,OACnB4I,EAAO,UAAUtL,OAAO,WAAWqM,OAAOD,EAAU,IAAIE,MAAM,KAElE,OADe3B,GAAaW,EAAMW,GCXfM,CAJCX,EAAM/F,IAAI,SAAA2G,GAAI,MAAK,CACjC3C,YAAa2C,EAAK3C,YAClB4B,WAAYe,EAAKf,eAGnBxO,EAAM0O,qBAAqBC,EAAOC,EAAU5O,EAAM8J,QAAS,CAAChJ,KAAMd,EAAMe,SAG5E,OAAQd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNmC,MAAO,CAACO,UAAW,IACnBvC,QAAS,kBAAMmO,MAFT,kBCNK/O,eAAQ,KANI,SAACC,GAC1B,MAAO,CACL4P,kBAAmB,SAAC1F,EAAS/J,GAAV,OAAoBH,EAAS4P,YAAkB1F,EAAS/J,OAIhEJ,CAdW,SAACK,GACzB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNmC,MAAO,CAACO,UAAW,IACnBvC,QAAS,kBAAMP,EAAMwP,kBAAkBxP,EAAM8J,QAAS,CAAChJ,KAAMd,EAAMe,SAF7D,kBCwBKpB,eAbS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLmD,SAAUjL,EAAM+H,SAAS,GAAGD,EAASxC,SAAS2F,SAAS1L,QACvD2L,iBAAkBlL,EAAM+H,SAAS,GAAGD,EAASxC,SAAS4F,mBAI/B,SAAC9P,GAC1B,MAAO,CACL+P,eAAgB,SAAC7F,EAAS/J,GAAV,OAAoBH,EAAS+P,YAAe7F,EAAS/J,OAI1DJ,CAzBc,SAACK,GAC5B,OAAOA,EAAMe,OAASf,EAAMyP,SACvBxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACDwP,SAAU5P,EAAM0P,iBAChBnN,MAAO,CAACO,UAAW,IACnB3D,KAAK,SACLoB,QAAS,kBAAMP,EAAM2P,eAAe3P,EAAM8J,QAAS,CAAChJ,KAAMd,EAAMe,SAJ/D,mBAOD,mECUN,IAAI8O,GAAU,SAAC7P,GAAU,IAErB8P,EASE9P,EATF8P,OACAC,EAQE/P,EARF+P,kBACAC,EAOEhQ,EAPFgQ,kBAEAC,GAKEjQ,EANFkQ,QAMElQ,EALFiQ,SACAE,EAIEnQ,EAJFmQ,aACAC,EAGEpQ,EAHFoQ,mBACAC,EAEErQ,EAFFqQ,oBACGC,EAVkBpM,OAAAqM,GAAA,EAAArM,CAWnBlE,EAXmB,kIAYjBuC,EAAK2B,OAAAsM,GAAA,EAAAtM,CAAA,GAAQoM,EAAU/N,MAAlB,CAAyBkO,OAAQ,SAExC5N,EAAYyN,EAAUzN,UAC1B,GAAIiN,GAAUO,EAAqB,CACjC,IAAMK,EAjCV,SACEC,EACAC,EACAP,EACAF,EACAC,GAEA,IAAMS,GAAgBR,EAAoBS,EAAIV,EAAmBU,GAAK,EAChEC,EAAeZ,EAAaW,EAAIV,EAAmBU,EACzD,OAAIH,EAAYC,GAAcG,EAAeF,EACpC,WAELF,EAAYC,GAAcG,EAAeF,EACpC,cADT,EAqBoBG,CAChBf,EAAQ1C,MACR+C,EAAU/C,MACV8C,EACAF,EACAC,GAEgB,aAAdM,IACF7N,GAAa,uBAEG,WAAd6N,IACF7N,GAAa,qBAGjB,IAAMoO,EAAeC,QAAOZ,EAAW,CAAC,UACxC,OAAOP,EACLC,EACE/P,EAAAC,EAAAC,cAAA,KAAA+D,OAAAiN,OAAA,GACMF,EADN,CAEEpO,UAAWA,EACXN,MAAOA,QAmCfsN,GAAUuB,sBAAW,MArBH,CAChBC,KADgB,SACXrR,EAAOsR,GACV,IAAMX,EAAYW,EAAQC,UAAUhE,MAC9BqD,EAAa5Q,EAAMuN,MAGrBoD,IAAcC,IAKlB5Q,EAAMkQ,QAAQS,EAAWC,GAMzBU,EAAQC,UAAUhE,MAAQqD,KAIS,SAACjR,EAAS2R,GAAV,MAAuB,CAC5DtB,kBAAmBrQ,EAAQ6R,aAC3B1B,OAAQwB,EAAQxB,SAChBM,mBAAoBkB,EAAQG,0BAHpBL,CAKRM,sBAAW,MAlCK,CAChBC,UADgB,SACN3R,GACR,MAAO,CACLuN,MAAOvN,EAAMuN,SA+BY,SAAC5N,EAAS2R,GAAV,MAAuB,CAClDvB,kBAAmBpQ,EAAQiS,aAC3B3B,QAASqB,EAAQC,UACjBpB,aAAcmB,EAAQO,kBACtBxB,oBAAqBiB,EAAQQ,2BAJ/BJ,CAKI7B,SAGAkC,eACJ,SAAAA,EAAa/R,GAAO,IAAAiE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2N,IAClB9N,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6N,GAAAxN,KAAAH,KAAMpE,KAWRgS,WAAa,CACXC,KAAM,CACJC,IAAKrC,KAZP5L,EAAKO,MAAQ,CACX2N,KAAMnS,EAAMmS,KACZC,QAASpS,EAAMoS,SAJCnO,yFAQMiF,GACxB9E,KAAKsB,SAAS,CAACyM,KAAMjJ,EAAGiJ,wCASjB,IAAAvN,EAAAR,KACP,OACEnE,EAAAC,EAAAC,cAACkS,GAAA,EAAD,CACED,QAAShO,KAAKI,MAAM4N,QACpBE,WAAYlO,KAAKI,MAAM2N,KACvBH,WAAY5N,KAAK4N,WACjBO,MAAO,SAACC,EAAQjF,GAAT,MAAoB,CACzBA,QACA2C,QAAStL,EAAK5E,MAAMkQ,UAEtBuC,YAAY,WA7BWrK,IAAMC,WAmCtBqK,8BAAgBC,KAAhBD,CAA8BX,ICvIvCK,GAAU,CAAC,CACfQ,MAAO,mBACPC,UAAW,cACXvF,IAAK,eACJ,CACDsF,MAAO,aACPC,UAAW,aACXvF,IAAK,cACJ,CACDsF,MAAO,aACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,aACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,GACPC,UAAW,aACXvF,IAAK,eAGDwF,GAAoB,CAAC,CACzBF,MAAO,YACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,aACPC,UAAW,aACXvF,IAAK,cACJ,CACDsF,MAAO,YACPC,UAAW,YACXvF,IAAK,cAGQyF,GAAA,SAAA1R,GAcT,IAbJwI,EAaIxI,EAbJwI,KACAC,EAYIzI,EAZJyI,QACAC,EAWI1I,EAXJ0I,MACAC,EAUI3I,EAVJ2I,QACAC,EASI5I,EATJ4I,SACAC,EAQI7I,EARJ6I,KACAC,EAOI9I,EAPJ8I,eACAW,EAMIzJ,EANJyJ,KACAkI,EAKI3R,EALJ2R,WACArE,EAIItN,EAJJsN,MACAsE,EAGI5R,EAHJ4R,gBACA/C,EAEI7O,EAFJ6O,QACAnP,EACIM,EADJN,KAEA,OACEd,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWkQ,aAAc,KACrDjT,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVC,KAAMA,EACNC,eAAgBA,IAElBlK,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,KACvBvC,EAAAC,EAAAC,cAACgT,GAAD,CACEpS,KAAMA,EACN+I,QAASA,KAGb7J,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACU,QAAS,KACpBhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCAC2BF,EAAAC,EAAAC,cAAA,kBAA0B,qBAAT2K,EAAP,GAAA/H,OAAiC+H,GAAS,QAE9EkI,GAEH/S,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,SAAUO,gBAAiB,UAAWF,UAAW,KAC5F7C,EAAAC,EAAAC,cAACiT,GAAD,CAAgBtJ,QAASA,EAASqI,KAAMxD,EAAOyD,QAASA,GAASlC,QAASA,KAE5EjQ,EAAAC,EAAAC,cAACkT,GAAD,CACEtS,KAAMA,EACN+I,QAASA,IAEX7J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,SAAUO,gBAAiB,UAAWF,UAAW,KAC5F7C,EAAAC,EAAAC,cAACkS,GAAA,EAAD,CAAO9P,MAAO,CAACS,gBAAiB,WAAYsP,WAAYW,EAAiBb,QAASU,GAAmBL,YAAY,MAGrHxS,EAAAC,EAAAC,cAACmT,GAAD,CACEvS,KAAMA,EACN+I,QAASA,4BCzFbyJ,eACJ,SAAAA,IAAe,IAAAtP,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmP,IACbtP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqP,GAAAhP,KAAAH,QACKI,MAAQ,CACXgP,SAAU,GACV/E,SAAU,GACV/C,aAAc,IAEhBzH,EAAKwP,gBAAkBxP,EAAKwP,gBAAgBhP,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACvBA,EAAKiM,QAAUjM,EAAKiM,QAAQzL,KAAbP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KARFA,oFAYbG,KAAKpE,MAAM0T,qBAAqBtP,KAAKpE,MAAM8J,SAC3C1F,KAAKuP,oEAGoBzK,GACrBA,EAAGuF,UACLrK,KAAKsB,SAAS,CAAC+I,SAAU7Q,KAAKC,MAAMqL,EAAGuF,6CAIjCtP,EAAM2H,GACd,IACE,IAAI8M,EAAO1P,OAAOiN,OAAO,GAAI/M,KAAKI,MAAMgP,SAA7BtP,OAAA2P,GAAA,EAAA3P,CAAA,GAAyC/E,EAAO2H,IAC3D1C,KAAKsB,SAAS,CAAC8N,SAAUI,IACzB,MAAOnI,GACP,MAAM,IAAIpE,MAAMoE,oCAIXkF,EAAWC,GAAY,IAExBX,EADe7L,KAAKI,MAAlBiK,SACiBkC,GACrBmD,EAAWC,KAAO3P,KAAKI,MAAO,CAChCiK,SAAU,CACRuF,QAAS,CAAC,CAACrD,EAAW,GAAI,CAACC,EAAY,EAAGX,OAG9C7L,KAAKpE,MAAMiU,YAAY,CAACxF,SAAUqF,EAASrF,UAAWrK,KAAKpE,MAAM8J,SACjE1F,KAAKsB,SAASoO,yCAGD1G,GACb,IACE,IAAI8G,EAActW,KAAKC,MAAMuG,KAAKpE,MAAMyO,UACxCyF,EAAYC,OAAO/G,EAAG,GACtBhJ,KAAKpE,MAAMiU,YAAY,CAACxF,SAAUyF,GAAc9P,KAAKpE,MAAM8J,SAC3D,MAAO2B,GACP,MAAM,IAAIpE,MAAMoE,8CAKlB,IAAImB,EAAcxI,KAAKI,MAAMgP,SAAS5G,YAClC4B,EAAaxC,SAAS5H,KAAKI,MAAMgP,SAAShF,WAAY,IACtD4F,EAA8C,IAA/BhQ,KAAKpE,MAAMyO,SAAShJ,OAAe,GAAK7H,KAAKC,MAAMuG,KAAKpE,MAAMyO,UACjF2F,EAAatG,KAAK,CAAClB,cAAa4B,eAChCpK,KAAKpE,MAAMiU,YAAY,CAACxF,SAAU2F,GAAehQ,KAAKpE,MAAM8J,SAC5D1F,KAAKsB,SAAS,CAAC8N,SAAU,6KAIApX,IAAE4B,GAAGoG,KAAKpE,MAAM8J,SAAS4B,kCAA9CA,EAA+D,SACnEtH,KAAKsB,SAAS,CAACgG,aAAc,IAAIK,KAAKC,SAASN,yIAGvC,IACJiD,EAAO0F,EADHzP,EAAAR,KAGNuK,EAD0B,OAAxBvK,KAAKpE,MAAMyO,UAAoD,IAA/BrK,KAAKpE,MAAMyO,SAAShJ,OAC9C7H,KAAKC,MAAMuG,KAAKpE,MAAMyO,UAAU7F,IAAI,SAAC2G,EAAMnC,GACjD,IAAIkH,EAAYxY,IAAKwK,QAAQ3F,KAAKC,KAAKgE,EAAK5E,MAAM2L,QAAQC,QAAU,OAAS2D,EAAKf,WAAa,KAAM,SACrG,MAAO,CACLlB,IAAKF,EACLR,YAAa2C,EAAK3C,YAClB4B,WAAU,GAAAzL,OAAKwM,EAAKf,WAAV,KACV8F,UAAS,GAAAvR,OAAK8E,WAAWyM,GAAWxM,QAAQ,GAAnC,QACTyM,UAAS,IAAAxR,OAAM8E,WAAWjD,EAAK5E,MAAMmG,SAAWmO,GAAWxM,QAAQ,IACnE0M,WAAYvU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQjB,KAAK,SAASoB,QAAS,kBAAMqE,EAAK6P,cAAcrH,KAAxD,aAIR,GAEV,IAAI4F,EACF/S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACE8H,IAAK,SAACjG,GAAD,OAAY4C,EAAK+J,MAAQ3M,GAC9BkG,YAAY,mBACZ7F,SAAU,SAAC8F,GAAD,OAAOvD,EAAKvC,SAAS,cAAeuC,EAAK+J,MAAMlO,QACzDA,MAAO2D,KAAKI,MAAMgP,SAAS5G,aAAe,KAE5C3M,EAAAC,EAAAC,cAAA,SACE8H,IAAK,SAACjG,GAAD,OAAY4C,EAAK8P,YAAc1S,GACpCO,MAAO,CAACC,WAAY,IACpB0F,YAAY,oBACZ7F,SAAU,SAAC8F,GAAD,OAAOvD,EAAKvC,SAAS,aAAcuC,EAAK8P,YAAYjU,QAC9DA,MAAO2D,KAAKI,MAAMgP,SAAShF,YAAc,KAE3CvO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQjB,KAAK,UAAUoB,QAAS,kBAAMqE,EAAK6O,mBAAmBlR,MAAO,CAACC,WAAY,KAAlF,cAeJ,MAVsC,qBAA3B4B,KAAKpE,MAAM2U,cACpBN,EAAsBjQ,KAAKpE,MAAM2U,YAAY/L,IAAI,SAACoK,EAAY5F,GAC5D,MAAO,CACLE,IAAKF,EACLwH,UAAW5B,EAAW4B,UACtB5B,WAAYA,EAAW6B,QACvBC,UAAW9B,EAAW8B,cAK1B7U,EAAAC,EAAAC,cAAC4S,GAAD,CACElJ,KAAMzF,KAAKpE,MAAM2L,QAAQ9B,KACzBC,QAAS1F,KAAKpE,MAAM8J,QACpBC,MAAO3F,KAAKpE,MAAM2L,QAAQ5B,MAC1BC,QAAS5F,KAAKpE,MAAM2L,QAAQ3B,QAC5BC,SAAU7F,KAAKpE,MAAM2L,QAAQ1B,SAC7BC,KAAMpO,IAAKwK,QAAQ3F,KAAKC,KAAKwD,KAAKpE,MAAM2L,QAAQC,QAAU,MAAO,SACjEzB,eAAgB/F,KAAKpE,MAAM2L,QAAQxB,eACnCW,KAAM1G,KAAKI,MAAMkH,aACjBiD,MAAOA,EACPqE,WAAYA,EACZC,gBAAiBoB,EACjBnE,QAAS9L,KAAK8L,QACdnP,KAAMqD,KAAKpE,MAAMe,cAjIAqH,IAAMC,WAsJhB1I,eAfS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAAS,GAAGD,EAASxC,SACpC2E,SAAUjK,EAAM+H,SAAS,GAAGD,EAASxC,SAAS2E,SAC9CkG,YAAanQ,EAAM+H,SAAS,GAAGD,EAASxC,SAASiL,iBAI1B,SAACnV,GAC1B,MAAO,CACLqU,YAAa,SAACe,EAAanG,GAAd,OAAiCjP,EAASqU,YAAYe,EAAanG,KAChF6E,qBAAsB,SAAC7E,GAAD,OAAoBjP,EAAS8T,YAAqB7E,OAI7DlP,CAA6C4T,+bCnJ5D,IAAI/G,GAAYC,KAAHwI,MAwBPC,eACJ,SAAAA,IAAe,IAAAjR,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8Q,IACbjR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgR,GAAA3Q,KAAAH,QACKI,MAAQ,CACX+H,SAAU,IAHCtI,oFASbG,KAAK2I,cACL3I,KAAK+Q,uKAILpZ,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,IACC8B,EAAOxB,QACTb,EAAK5E,MAAM+M,cACXnI,EAAKc,SAAS,CAAC3E,KAAMkG,EAAO,MAE5BgG,QAAQC,IAAI,2BANF,wBAAA5H,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,0QAaqBC,IAAMC,eAAe,MAAO,cAA7CC,SACJ/B,KAAKsB,SAAS,CACZS,SAAUA,EAASF,2IASb,IAAAM,EAAAnC,KACFmI,EAAW,qBAAOnI,KAAKpE,MAAMuM,SAC/BrI,OAAOiJ,KAAK/I,KAAKpE,MAAMuM,UAAU3D,IAAI,SAACkB,EAASsD,GAC/C,OAAOnN,EAAAC,EAAAC,cAACiV,GAAD,CACL9H,IAAKF,EACLG,MAAOH,EACPtD,QAASA,EACT6B,QAASpF,EAAKvG,MAAMuM,SAASzC,GAC7B/I,KAAMwF,EAAK/B,MAAMzD,KACjBoF,SAAUI,EAAK/B,MAAM2B,aAGvB,GACJ,OACElG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAK0Q,aAAc,KAC1CjT,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,yCAKFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAAEiL,YAAa,OAAQC,aAAc,SAC9ClB,YA/DKnE,IAAMC,WAmFT1I,eAZS,SAAC6E,GACvB,MAAO,CACL+H,SAAU/H,EAAM+H,SAAS,KAIF,SAAC3M,GAC1B,MAAO,CACLmN,YAAa,kBAAMnN,EAASmN,YAAY,EAAGP,QAIhC7M,CAA6CuV,ICtH/CG,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAAa,aACbC,GAAe,eACfC,GAAuB,uBACvBC,GAAiB,iBACjBC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAkB,kBAClBC,GAAuB,uBACvBC,GAAmB,mBACnBC,GAAqB,qBACrBC,GAAc,cACdC,GAAgB,gBAChBC,GAAuB,uBACvBC,GAA4B,4BAC5BC,GAAc,cACdC,GAAc,cACdC,GAAc,cC6FpB,SAASC,GAAoB3H,EAAgB9N,EAAMyD,GACxD,MAAO,CACLrF,KAAMgX,GACNtH,iBACA9N,OACAyD,SC/GJ,IAoBe7E,eAZS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAAS,GAAGD,EAASxC,WAIb,SAAClK,GAC1B,MAAO,CACL6W,oBAAqB,SAAC3M,EAAS/J,GAAV,OAAoBH,EDEtC,SAA8BkK,EAAS/J,GAC5C,MAAO,CACLZ,KAAMmW,GACNxL,UACA/J,SCNkD0W,CAAoB3M,EAAS/J,OAIpEJ,CApBmB,SAACK,GACjC,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNwP,SAAU5P,EAAM2L,QAAQ+K,cACxBnW,QAAS,kBAAMP,EAAMyW,oBAAoBzW,EAAM8J,QAAS,CAAChJ,KAAMd,EAAMe,SAF/D,8BCYKpB,eAAQ,KANI,SAACC,GAC1B,MAAO,CACL+W,oBAAqB,SAAC7M,EAAS/J,GAAV,OAAoBH,EAAS+W,YAAoB7M,EAAS/J,OAIpEJ,CAba,SAACK,GAC3B,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNG,QAAS,kBAAMP,EAAM2W,oBAAoB3W,EAAM8J,QAAS,CAAChJ,KAAMd,EAAMe,SAD/D,oBCAJqR,GAAU,CAAC,CACfQ,MAAO,mBACPC,UAAW,cACXvF,IAAK,eACJ,CACDsF,MAAO,aACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,eACPC,UAAW,WACXvF,IAAK,YACJ,CACDsF,MAAO,aACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,GACPC,UAAW,UACXvF,IAAK,YAGQsJ,GAAA,SAAAvV,GAYT,IAXJwI,EAWIxI,EAXJwI,KACAC,EAUIzI,EAVJyI,QACAC,EASI1I,EATJ0I,MACAhJ,EAQIM,EARJN,KACAiJ,EAOI3I,EAPJ2I,QACAC,EAMI5I,EANJ4I,SACAC,EAKI7I,EALJ6I,KACAC,EAII9I,EAJJ8I,eACAW,EAGIzJ,EAHJyJ,KACA6D,EAEItN,EAFJsN,MAEItN,EADJsV,oBAEA,OACE1W,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWkQ,aAAc,KACrDjT,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVC,KAAMA,EACNC,eAAgBA,IAElBlK,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACU,QAAS,KACpBhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCAC2BF,EAAAC,EAAAC,cAAA,cAAyB,qBAAT2K,EAAP,GAAA/H,OAAiC+H,GAAS,SAGhF7K,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,SAAUO,gBAAiB,UAAWF,UAAW,KAC5F7C,EAAAC,EAAAC,cAACkS,GAAA,EAAD,CAAOC,WAAY3D,EAAOyD,QAASA,GAASK,YAAY,MAG5DxS,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACsU,OAAQ,KACnB5W,EAAAC,EAAAC,cAAC2W,GAAD,CACEhN,QAASA,EACT/I,KAAMA,IAERd,EAAAC,EAAAC,cAAC4W,GAAD,CACEjN,QAASA,EACT/I,KAAMA,OC1CDpB,eAbS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAAS,GAAGD,EAASxC,SACpC6E,MAAOnK,EAAM+H,SAAS,GAAGD,EAASxC,SAAS6E,QAIpB,SAAC/O,GAC1B,MAAO,CACLoX,UAAW,SAAClN,EAASyD,EAAOxN,GAAjB,OAA2BH,EJgBnC,SAAoBkK,EAASyD,EAAOxN,GACzC,MAAO,CACLZ,KAAMoW,GACNzL,UACAyD,QACAxN,SIrB+CiX,CAAUlN,EAASyD,EAAOxN,OAI9DJ,CAtBS,SAACK,GACvB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNwP,UAAW5P,EAAM2L,QAAQ+K,oBAA0CnN,IAAzBvJ,EAAM2O,MAAM3O,EAAMoN,IAAoBpN,EAAM2O,MAAM3O,EAAMoN,GAAG6J,QACrG9X,KAAK,SACLoB,QAAS,kBAAMP,EAAMgX,UAAUhX,EAAM8J,QAAS9J,EAAMoN,EAAG,CAACtM,KAAMd,EAAMe,SAH9D,gBCqBKpB,eAbS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAAS,GAAGD,EAASxC,SACpC6E,MAAOnK,EAAM+H,SAAS,GAAGD,EAASxC,SAAS6E,QAIpB,SAAC/O,GAC1B,MAAO,CACLsX,mBAAoB,SAACpN,EAASyD,EAAOxN,GAAjB,OAA2BH,EL8D5C,SAA6BkK,EAASyD,EAAOxN,GAClD,MAAO,CACLZ,KAAMsW,GACN3L,UACAyD,QACAxN,SKnEwDmX,CAAmBpN,EAASyD,EAAOxN,OAIhFJ,CAtBY,SAACK,GAC1B,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNwP,UAAW5P,EAAM2L,QAAQ+K,oBAA0CnN,IAAzBvJ,EAAM2O,MAAM3O,EAAMoN,KAAqBpN,EAAM2O,MAAM3O,EAAMoN,GAAG6J,SAAYjX,EAAM2O,MAAM3O,EAAMoN,GAAG6J,SAAWjX,EAAM2O,MAAM3O,EAAMoN,GAAG+J,SACvKhY,KAAK,SACLoB,QAAS,kBAAMP,EAAMkX,mBAAmBlX,EAAM8J,QAAS9J,EAAMoN,EAAG,CAACtM,KAAMd,EAAMe,SAHvE,mBCCJE,GAAcC,IAAOC,MAErBiW,eACJ,SAAAA,IAAe,IAAAnT,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgT,IACbnT,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkT,GAAA7S,KAAAH,QACKI,MAAQ,CACXmK,MAAO,GACPjD,aAAc,IAJHzH,oFASbG,KAAKuP,0LAIoBvX,IAAE4B,GAAGoG,KAAKpE,MAAM8J,SAAS4B,kCAA9CA,EAA+D,SACnEtH,KAAKsB,SAAS,CAACgG,aAAc,IAAIK,KAAKC,SAASN,yIAGvC,IACJiD,EADI/J,EAAAR,KAER,GAAoC,OAAhCA,KAAKpE,MAAM2L,QAAQ8C,UAAyD,qBAA7BrK,KAAKpE,MAAM2L,QAAQgD,MAAuB,CAC3F,IAAIxE,EAAiB/F,KAAKpE,MAAM2L,QAAQxB,eACpCyB,EAAUjL,KAAKC,KAAKwD,KAAKpE,MAAM2L,QAAQC,QAAU,MACrD+C,EAAQ/Q,KAAKC,MAAMuG,KAAKpE,MAAM2L,QAAQ8C,UAAU7F,IAAI,SAAC2G,EAAMnC,GACzD,IAAIiK,EAAY1W,KAAK2W,MAAM1L,EAAU2D,EAAKf,WAAa,KACvD,MAAO,CACLlB,IAAKF,EACLR,YAAa2C,EAAK3C,YAClB0H,UAAS,GAAAvR,OAAK8E,WAAW/L,IAAKwK,QAAQ+Q,EAAW,UAAUvP,QAAQ,GAA1D,QACTyM,UAAS,IAAAxR,OAAM8E,WAAWjD,EAAK5E,MAAMmG,SAAWrK,IAAKwK,QAAQ+Q,EAAW,UAAUvP,QAAQ,IAC1FyP,SAAoC,qBAAnBpN,GAAqD,qBAAZyB,GAAgD,qBAAdyL,EAAlF,GAAAtU,OAAiHpC,KAAK2W,MAAMnN,EAAiBkN,EAAYzL,GAAzJ,QAA0K,GACpL4L,QAASvX,EAAAC,EAAAC,cAACsX,GAAD,KACPxX,EAAAC,EAAAC,cAACuX,GAAD,CACE3W,KAAM6D,EAAK5E,MAAMe,KACjBqM,EAAGA,EACHtD,QAASlF,EAAK5E,MAAM8J,UAEtB7J,EAAAC,EAAAC,cAACwX,GAAD,CACE5W,KAAM6D,EAAK5E,MAAMe,KACjBqM,EAAGA,EACHtD,QAASlF,EAAK5E,MAAM8J,mBAM5B6E,EAAQ,GAGV,OACE1O,EAAAC,EAAAC,cAACyW,GAAD,CACE/M,KAAMzF,KAAKpE,MAAM2L,QAAQ9B,KACzB9I,KAAMqD,KAAKpE,MAAMe,KACjB+I,QAAS1F,KAAKpE,MAAM8J,QACpBC,MAAO3F,KAAKpE,MAAM2L,QAAQ5B,MAC1BC,QAAS5F,KAAKpE,MAAM2L,QAAQ3B,QAC5BC,SAAU7F,KAAKpE,MAAM2L,QAAQ1B,SAC7BC,KAAMpO,IAAKwK,QAAQ3F,KAAKC,KAAKwD,KAAKpE,MAAM2L,QAAQC,QAAU,MAAO,SACjEzB,eAAgB/F,KAAKpE,MAAM2L,QAAQxB,eACnCW,KAAM1G,KAAKI,MAAMkH,aACjBiD,MAAOA,WA5DYvG,IAAMC,WAwElB1I,eANS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAAS,GAAGD,EAASxC,WAIzBnK,CAAyByX,0uBCtExC,IAAI5K,GAAYC,KAAHmL,MAuCPC,eACJ,SAAAA,IAAe,IAAA5T,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyT,IACb5T,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2T,GAAAtT,KAAAH,QACKI,MAAQ,CACX+H,SAAU,IAHCtI,oFASbG,KAAK2I,cACL3I,KAAK+Q,uKAILpZ,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,IACC8B,EAAOxB,QACTb,EAAK5E,MAAM+M,cACXnI,EAAKc,SAAS,CAAC3E,KAAMkG,EAAO,MAE5BgG,QAAQC,IAAI,2BANF,wBAAA5H,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,0QAaqBC,IAAMC,eAAe,MAAO,cAA7CC,SACJ/B,KAAKsB,SAAS,CACZS,SAAUA,EAASF,2IASb,IAAAM,EAAAnC,KACFmI,EAAW,qBAAOnI,KAAKpE,MAAMuM,SAC/BrI,OAAOiJ,KAAK/I,KAAKpE,MAAMuM,UAAU3D,IAAI,SAACkB,EAASsD,GAC/C,OAAOnN,EAAAC,EAAAC,cAAC2X,GAAD,CACLxK,IAAKF,EACLG,MAAOH,EACPtD,QAASA,EACT/I,KAAMwF,EAAK/B,MAAMzD,KACjB4K,QAASpF,EAAKvG,MAAMuM,SAASzC,GAC7B3D,SAAUI,EAAK/B,MAAM2B,aAGvB,GACJ,OACElG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAK0Q,aAAc,KAC1CjT,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,+CAKFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACiL,YAAa,OAAQC,aAAc,SAC7ClB,YA/DOnE,IAAMC,WAmFX1I,eAZS,SAAC6E,GACvB,MAAO,CACL+H,SAAU/H,EAAM+H,SAAS,KAIF,SAAC3M,GAC1B,MAAO,CACLmN,YAAa,kBAAMnN,EAASmN,YAAY,EAAGP,QAIhC7M,CAA6CkY,aClH7ClY,eAAQ,KANI,SAACC,GAC1B,MAAO,CACLmY,kBAAmB,SAACjO,EAAS/J,GAAV,OAAoBH,EAASmY,YAAkBjO,EAAS/J,OAIhEJ,CAdW,SAACK,GACzB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNmC,MAAO,CAACsU,OAAQ,IAChBtW,QAAS,kBAAMP,EAAM+X,kBAAkB/X,EAAM8J,QAAS,CAAChJ,KAAMd,EAAMe,SAF7D,kBCDJqR,GAAU,CAAC,CACfQ,MAAO,mBACPC,UAAW,cACXvF,IAAK,eACJ,CACDsF,MAAO,aACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,aACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,GACPC,UAAW,QACXvF,IAAK,UAGQ0K,GAAA,SAAA3W,GAWT,IAVJwI,EAUIxI,EAVJwI,KACAC,EASIzI,EATJyI,QACAC,EAQI1I,EARJ0I,MACAC,EAOI3I,EAPJ2I,QACAC,EAMI5I,EANJ4I,SACAC,EAKI7I,EALJ6I,KACAC,EAII9I,EAJJ8I,eACAW,EAGIzJ,EAHJyJ,KACA6D,EAEItN,EAFJsN,MACA5N,EACIM,EADJN,KAEA,OACEd,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWkQ,aAAc,KACrDjT,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVC,KAAMA,EACNC,eAAgBA,IAElBlK,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACU,QAAS,KACpBhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACsBF,EAAAC,EAAAC,cAAA,cAAyB,qBAAT2K,EAAP,GAAA/H,OAAiC+H,GAAS,SAG3E7K,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,SAAUO,gBAAiB,UAAWF,UAAW,KAC5F7C,EAAAC,EAAAC,cAACkS,GAAA,EAAD,CAAOC,WAAY3D,EAAOyD,QAASA,GAASK,YAAY,MAG5DxS,EAAAC,EAAAC,cAAC8X,GAAD,CACElX,KAAMA,EACN+I,QAASA,MCvDXsI,GAAU,CAAC,CACfQ,MAAO,aACPC,UAAW,UACXvF,IAAK,WACJ,CACDsF,MAAO,mBACPC,UAAW,SACXvF,IAAK,UACJ,CACDsF,MAAO,mBACPC,UAAW,QACXvF,IAAK,UAGQ4K,GAAA,SAAA7W,GAET,IADJ8W,EACI9W,EADJ8W,YAEA,OACElY,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWkQ,aAAc,KACrDjT,EAAAC,EAAAC,cAACkS,GAAA,EAAD,CAAOC,WAAY6F,EAAa/F,QAASA,GAASK,YAAY,MCjB9D2F,eACJ,SAAAA,IAAe,IAAAnU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgU,IACbnU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkU,GAAA7T,KAAAH,QACKI,MAAQ,GAEbP,EAAKoU,eAAiBpU,EAAKoU,eAAe5T,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAJTA,oFAQbG,KAAKiU,0DAILjU,KAAKpE,MAAMqY,eAAejU,KAAKpE,MAAM8J,QAAS1F,KAAKpE,MAAMuN,wCAIzD,IAAI4K,EAaJ,OAXEA,EADoC,qBAA3B/T,KAAKpE,MAAMmY,YACN/T,KAAKpE,MAAMmY,YAAYvP,IAAI,SAAC0P,EAAYlL,GACpD,MAAO,CACLE,IAAKF,EACLtD,QAASwO,EAAWvX,KACpBjB,OAAQwY,EAAWxY,OACnB0E,MAAQ8T,EAAW9T,MAAOsH,cAIhB,GAGd7L,EAAAC,EAAAC,cAAC+X,GAAD,CACEC,YAAaA,WAhCO/P,IAAMC,WAiDnB1I,eAXS,SAAC6E,EAAO8H,GAC9B,MAAO,CACL6L,YAAa3T,EAAM+H,SAAS,GAAGD,EAASxC,SAAS6E,MAAMrC,EAASiB,OAAO4K,cAGhD,SAACvY,GAC1B,MAAO,CACLyY,eAAgB,SAACvO,EAASyD,GAAV,OAAoB3N,EX4CjC,SAAyBiP,EAAgBtB,GAC9C,MAAO,CACLpO,KAAM0W,GACNhH,iBACAtB,SWhD6C8K,CAAevO,EAASyD,OAI1D5N,CAA6CyY,IC/B7CzY,eAAQ,KANI,SAACC,GAC1B,MAAO,CACL2Y,aAAc,SAACzO,EAAS0O,EAAWC,EAAiB1Y,GAAtC,OAAgDH,EZqC3D,SAAuBkK,EAAS0O,EAAWC,EAAiB1Y,GACjE,MAAO,CACLZ,KAAMwW,GACN7L,UACA0O,YACAC,kBACA1Y,SY3CuEwY,CAAazO,EAAS0O,EAAWC,EAAiB1Y,OAI9GJ,CAlBY,SAACK,GAC1B,IAAIwE,EAIJ,OAFIA,EADY,QAAhBxE,EAAMwE,MAGEvE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNjB,KAAK,SACLoB,QAAS,kBAAMP,EAAMuY,aAAavY,EAAM8J,QAAS9J,EAAMoN,EAAG5I,EAAO,CAAC1D,KAAMd,EAAMe,SAFxE,GAAAgC,OAGF/C,EAAMwE,UCLR4T,eACJ,SAAAA,IAAe,IAAAnU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgU,IACbnU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkU,GAAA7T,KAAAH,QACKI,MAAQ,CACXkH,aAAc,IAHHzH,wEAOLkE,GACR/D,KAAKsB,SAALxB,OAAA2P,GAAA,EAAA3P,CAAA,GAAgBiE,EAAEuQ,OAAO7O,KAAO1B,EAAEuQ,OAAOjY,qDAIzC2D,KAAKuP,0LAIoBvX,IAAE4B,GAAGoG,KAAKpE,MAAM8J,SAAS4B,kCAA9CA,EAA+D,SACnEtH,KAAKsB,SAAS,CAACgG,aAAc,IAAIK,KAAKC,SAASN,yIAGvC,IACJiD,EADI/J,EAAAR,KAEJuU,EAAc,SAACvL,GAAD,OAChBnN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyY,GAAD,CACE7X,KAAM6D,EAAK5E,MAAMe,KACjB+I,QAASlF,EAAK5E,MAAM8J,QACpBtF,MAAM,MACN4I,EAAGA,IAELnN,EAAAC,EAAAC,cAACyY,GAAD,CACE7X,KAAM6D,EAAK5E,MAAMe,KACjB+I,QAASlF,EAAK5E,MAAM8J,QACpBtF,MAAM,KACN4I,EAAGA,KAGPnN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0Y,GAAD,CACEtL,MAAOH,EACPtD,QAASlF,EAAK5E,MAAM8J,aAgC5B,OAxBE6E,EAJ8B,qBAArBvK,KAAKpE,MAAM2O,OACpBA,EAAQvK,KAAKpE,MAAM2O,MAAMO,MAAM,GAAG4J,KAAK,SAAU5Y,EAAG6Y,GAClD,OAAO7Y,EAAEqN,MAAQwL,EAAExL,SAEP3E,IAAI,SAAC2G,EAAMnC,GACvB,IAAIkH,EAAYxY,IAAKwK,QAAQ3F,KAAKC,KAAKgE,EAAK5E,MAAM2L,QAAQC,QAAU,OAAS2D,EAAKuF,UAAY,KAAM,SACpG,OAAsB,IAAlBvF,EAAK4H,SACA,CACL7J,IAAKF,EACLR,YAAa2C,EAAK3C,YAClB0H,UAAWrU,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UACtBoV,UAAWtU,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UACtB6C,MAAO/B,EAAAC,EAAAC,cAAA,8CAGF,CACLmN,IAAKF,EACLR,YAAa2C,EAAK3C,YAClB0H,UAAS,GAAAvR,OAAK8E,WAAWyM,GAAWxM,QAAQ,GAAnC,QACTyM,UAAS,IAAAxR,OAAM8E,WAAWjD,EAAK5E,MAAMmG,SAAWmO,GAAWxM,QAAQ,IACnE9F,MAAO2W,EAAYvL,MAKjB,GAIRnN,EAAAC,EAAAC,cAAC6X,GAAD,CACEnO,KAAMzF,KAAKpE,MAAM2L,QAAQ9B,KACzBC,QAAS1F,KAAKpE,MAAM8J,QACpBC,MAAO3F,KAAKpE,MAAM2L,QAAQ5B,MAC1BC,QAAS5F,KAAKpE,MAAM2L,QAAQ3B,QAC5BC,SAAU7F,KAAKpE,MAAM2L,QAAQ1B,SAC7BC,KAAMpO,IAAKwK,QAAQ3F,KAAKC,KAAKwD,KAAKpE,MAAM2L,QAAQC,QAAU,MAAO,SACjEzB,eAAgB/F,KAAKpE,MAAM2L,QAAQxB,eACnCW,KAAM1G,KAAKI,MAAMkH,aACjBiD,MAAOA,EACP5N,KAAMqD,KAAKpE,MAAMe,cArFGqH,IAAMC,WAkGnB1I,eAPS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAAS,GAAGD,EAASxC,SACpC6E,MAAOnK,EAAM+H,SAAS,GAAGD,EAASxC,SAAS6E,QAIhChP,CAAyByY,iqBC/FxC,IAAI5L,GAAYC,KAAHuM,MAmCPC,eACJ,SAAAA,IAAe,IAAAhV,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6U,IACbhV,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+U,GAAA1U,KAAAH,QACKI,MAAQ,CACX+H,SAAU,IAHCtI,oFASbG,KAAK2I,cACL3I,KAAK+Q,uKAILpZ,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,IACC8B,EAAOxB,QACTb,EAAK5E,MAAM+M,cACXnI,EAAKc,SAAS,CAAC3E,KAAMkG,EAAO,MAE5BgG,QAAQC,IAAI,2BANF,wBAAA5H,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,0QAaqBC,IAAMC,eAAe,MAAO,cAA7CC,SACJ/B,KAAKsB,SAAS,CACZS,SAAUA,EAASF,2IAQb,IAAAM,EAAAnC,KACFmI,EAAW,qBAAOnI,KAAKpE,MAAMuM,SAC/BrI,OAAOiJ,KAAK/I,KAAKpE,MAAMuM,UAAU3D,IAAI,SAACkB,EAASsD,GAC/C,OAAOnN,EAAAC,EAAAC,cAAC+Y,GAAD,CACL5L,IAAKF,EACLG,MAAOH,EACPtD,QAASA,EACT6B,QAASpF,EAAKvG,MAAMuM,SAASzC,GAC7B/I,KAAMwF,EAAK/B,MAAMzD,KACjBoF,SAAUI,EAAK/B,MAAM2B,aAGvB,GAEJ,OACElG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAK0Q,aAAc,KAC1CjT,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,6BAKFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACiL,YAAa,OAAQC,aAAc,SAC7ClB,YA/DUnE,IAAMC,WAmFd1I,eAZS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLC,SAAU/H,EAAM+H,SAAS,KAIF,SAAC3M,GAC1B,MAAO,CACLmN,YAAa,kBAAMnN,EAASmN,YAAY,EAAGP,QAIhC7M,CAA6CsZ,IC9G7CtZ,eAAQ,KANI,SAACC,GAC1B,MAAO,CACLuZ,iBAAkB,SAACrP,EAAS/J,GAAV,OAAoBH,EAASuZ,YAAiBrP,EAAS/J,OAI9DJ,CAdU,SAACK,GACxB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNmC,MAAO,CAACsU,OAAQ,IAChBtW,QAAS,kBAAMP,EAAMmZ,iBAAiBnZ,EAAM8J,QAAS,CAAChJ,KAAMd,EAAMe,SAF5D,iBCDJqR,GAAU,CAAC,CACfQ,MAAO,mBACPC,UAAW,cACXvF,IAAK,eACJ,CACDsF,MAAO,aACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,oBACPC,UAAW,kBACXvF,IAAK,mBACJ,CACDsF,MAAO,iBACPC,UAAW,eACXvF,IAAK,gBACJ,CACDsF,MAAO,mBACPC,UAAW,gBACXvF,IAAK,iBACJ,CACDsF,MAAO,gBACPC,UAAW,QACXvF,IAAK,UAGQ8L,GAAA,SAAA/X,GAYT,IAXJwI,EAWIxI,EAXJwI,KACAC,EAUIzI,EAVJyI,QACAC,EASI1I,EATJ0I,MACAC,EAQI3I,EARJ2I,QACAC,EAOI5I,EAPJ4I,SACAC,EAMI7I,EANJ6I,KACAC,EAKI9I,EALJ8I,eACAW,EAIIzJ,EAJJyJ,KACA6D,EAGItN,EAHJsN,MACA5N,EAEIM,EAFJN,KACAsY,EACIhY,EADJgY,MAEA,OACEpZ,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWkQ,aAAc,KACrDjT,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVC,KAAMA,EACNC,eAAgBA,IAElBlK,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACU,QAAS,KACpBhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qCACyBF,EAAAC,EAAAC,cAAA,cAAyB,qBAAT2K,EAAP,GAAA/H,OAAiC+H,GAAS,OAC1E7K,EAAAC,EAAAC,cAAA,WAFF,sFAKFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,SAAUO,gBAAiB,UAAWF,UAAW,KAC5F7C,EAAAC,EAAAC,cAACkS,GAAA,EAAD,CAAOC,WAAY3D,EAAOyD,QAASA,GAASK,YAAY,MAG3D4G,EACDpZ,EAAAC,EAAAC,cAACmZ,GAAD,CACEvY,KAAMA,EACN+I,QAASA,MC3CFnK,eAZS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAASD,EAAS9H,OAAO8H,EAASxC,WAI1B,SAAClK,GAC1B,MAAO,CACL2Z,gBAAiB,SAACzP,EAASyD,EAAOxN,EAAOyE,GAAxB,OAAkC5E,EjB4GhD,SAA0BiP,EAAgBtB,EAAOxN,EAAOyE,GAC7D,MAAO,CACLrF,KAAM4W,GACNlH,iBACAtB,QACAxN,QACAyE,SiBlH4D+U,CAAgBzP,EAASyD,EAAOxN,EAAOyE,OAIxF7E,CArBe,SAACK,GAC7B,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNwP,cAAwCrG,IAA9BvJ,EAAM2L,QAAQ6N,kBAAoEjQ,IAAvCvJ,EAAM2L,QAAQ6N,YAAYxZ,EAAMoN,IAAoBpN,EAAM2L,QAAQ6N,YAAYxZ,EAAMoN,GAAGqM,SAC5Ita,KAAK,SACLoB,QAAS,kBAAMP,EAAMuZ,gBAAgBvZ,EAAM8J,QAAS9J,EAAMoN,EAAG,CAACtM,KAAMd,EAAMe,MAAOf,EAAMwE,SAHjF,UAAAzB,OAIK/C,EAAMb,KAJX,iBCoBKQ,eAZS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAASD,EAAS9H,OAAO8H,EAASxC,WAI1B,SAAClK,GAC1B,MAAO,CACL8Z,WAAY,SAAC5P,EAASyD,EAAOxN,EAAOyE,GAAxB,OAAkC5E,ElBgI3C,SAAqBiP,EAAgBtB,EAAOxN,EAAOyE,GACxD,MAAO,CACLrF,KAAM8W,GACNpH,iBACAtB,QACAxN,QACAyE,SkBtIuDkV,CAAW5P,EAASyD,EAAOxN,EAAOyE,OAI9E7E,CArBU,SAACK,GACxB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNwP,SAAU5P,EAAM2O,MAAM3O,EAAMoN,GAAGuM,QAAQ5V,UAAY/D,EAAMe,MAAQf,EAAM2O,MAAM3O,EAAMoN,GAAGwM,eACtFza,KAAK,SACLoB,QAAS,kBAAMP,EAAM0Z,WAAW1Z,EAAM8J,QAAS9J,EAAMoN,EAAG,CAACtM,KAAMd,EAAMe,MAAOf,EAAMwE,SAH5E,2BCkDK7E,eAZS,SAAC6E,EAAO8H,GAC9B,MAAO,CACL+M,MAAO7U,EAAMzD,KAAKsY,QAIK,SAACzZ,GAC1B,MAAO,CACLia,WAAY,SAACC,EAAgBjL,EAAgB2J,EAAW/X,EAAOsZ,EAAYC,EAAMC,EAAMC,EAAQna,GAAnF,OAA6FH,EnBuHtG,SAAqBka,EAAgBjL,EAAgB2J,EAAW/X,EAAOsZ,EAAYC,EAAMC,EAAMC,EAAQna,GAC5G,MAAO,CACLZ,KAAMkX,GACNyD,iBACAjL,iBACA2J,YACA/X,QACAsZ,aACAC,OACAC,OACAC,SACAna,SmBlIkH8Z,CAAWC,EAAgBjL,EAAgB2J,EAAW/X,EAAOsZ,EAAYC,EAAMC,EAAMC,EAAQna,OAIpMJ,CAhDU,SAACK,GACxB,IAAI4P,EAD8B,SAAAuK,IAAA,OAAAA,EAAAjW,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAKlC,SAAAC,IAAA,IAAAkV,EAAAH,EAAAF,EAAAM,EAAA9K,EAAA2K,EAAA,OAAAlV,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGM4U,EADa,QAAjBpa,EAAMoa,OACO,IACA,IACTH,EAAOtZ,KAAK2W,MAAM3W,KAAK2Z,SAAW3Z,KAAK2W,MAAM,OAAyBxL,WAUtEiO,EAAaQ,SAAMC,kBAAkB,CAAC,MAAO,OAAQ,CAACJ,EAAQH,IAfpE3U,EAAAE,KAAA,EAkBuBpJ,IAAE4B,GAAGgC,EAAM8J,SAAS6E,MAAM3O,EAAMoN,GAlBvD,cAkBMiN,EAlBN/U,EAAA0H,KAAA1H,EAAAE,KAAA,EAmBmBnJ,IAAE2B,GAAGqc,GAnBxB,cAmBM9K,EAnBNjK,EAAA0H,KAAA1H,EAAAE,KAAA,GAoBqB+J,EAAKkL,SApB1B,QAoBMP,EApBN5U,EAAA0H,KAqBEhN,EAAM6Z,WAAW7Z,EAAMb,KAAMa,EAAM8J,QAAS9J,EAAMoN,EAAGpN,EAAMgC,MAAO+X,EAAYK,EAAQH,EAAMC,EAAQ,CAACpZ,KAAMd,EAAMe,OArBnH,yBAAAuE,EAAAM,SAAAV,EAAAd,UALkC2B,MAAA3B,KAAA4B,WA4BlC,OAzBI4J,OAD8GrG,IAAlH2H,QAAOlR,EAAMqZ,MAAO,SAAUW,GAAQ,OAAOA,EAAKzK,KAAKhC,QAAUvN,EAAMoN,GAAK4M,EAAKrO,UAAY3L,EAAM8J,UA0B3F7J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNjB,KAAK,SACLyQ,SAAUA,EACVrP,QAAS,kBA/BuB,kBAAA4Z,EAAApU,MAAA3B,KAAA4B,WA+BjB6T,KAHT,GAAA9W,OAIF/C,EAAMoa,WCrBCza,eAAQ,KANI,SAACC,GAC1B,MAAO,CACL8a,WAAY,SAACZ,EAAgBjL,EAAgB2J,EAAWwB,EAAMC,EAAMla,GAAxD,OAAkEH,EpB2K3E,SAAqBka,EAAgBjL,EAAgB2J,EAAWwB,EAAMC,EAAMla,GACjF,MAAO,CACLZ,KAAMmX,GACNwD,iBACAjL,iBACA2J,YACAwB,OACAC,OACAla,SoBnLuF2a,CAAWZ,EAAgBjL,EAAgB2J,EAAWwB,EAAMC,EAAMla,OAI9IJ,CAdU,SAACK,GACxB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNjB,KAAK,SACLoB,QAAS,kBAAMP,EAAM0a,WAAW1a,EAAMb,KAAMa,EAAM8J,QAAS9J,EAAMoN,EAAGpN,EAAMoa,OAAQpO,SAAShM,EAAMia,KAAM,IAAK,CAACnZ,KAAMd,EAAMe,SAFnH,gBAAAgC,OAG0B,WAAf/C,EAAMb,KAAoB,IAAM,KAH3C4D,OAGiD/C,EAAMoa,OAAS,GAAK,IAHrE,QCMJO,eACJ,SAAAA,IAAe,IAAA1W,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuW,IACb1W,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyW,GAAApW,KAAAH,QACKI,MAAQ,CACXmK,MAAO,GACP0K,MAAO,GACP3N,aAAc,IALHzH,oFAUbG,KAAKoS,qBACLpS,KAAKuP,kLAIL5X,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAKC,GAAZ,OAAAJ,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,GACHP,EAAK5E,MAAMwW,mBAAmB5R,EAAK5E,MAAM8J,QAAS1E,EAAS,GAAI,GAFnD,wBAAAE,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,8QAQyB5J,IAAE4B,GAAGoG,KAAKpE,MAAM8J,SAAS4B,kCAA9CA,EAA+D,SACnEtH,KAAKsB,SAAS,CAACgG,aAAc,IAAIK,KAAKC,SAASN,yIAGvCvD,GACR/D,KAAKsB,SAALxB,OAAA2P,GAAA,EAAA3P,CAAA,GAAgBiE,EAAEuQ,OAAO7O,KAAO1B,EAAEuQ,OAAOjY,yCAGjC,IACJkO,EAAO0K,EADH9S,EAAAnC,KAuLR,OAjLEuK,EAJ8B,qBAArBvK,KAAKpE,MAAM2O,OACpBA,EAAQvK,KAAKpE,MAAM2O,MAAMO,MAAM,GAAG4J,KAAK,SAAU5Y,EAAG6Y,GAClD,OAAO7Y,EAAEqN,MAAQwL,EAAExL,SAEP3E,IAAI,SAAC2G,EAAMnC,GAQvB,IAAIwN,EAAWC,EAAYC,EA2J3B,OAlKAzB,EAAQnI,UAAS3K,EAAKvG,MAAMqZ,MAAO,SAACW,GAClC,YAAqBzQ,IAAjByQ,EAAKzK,KAAK9F,GACLuQ,EAAKzK,KAAK9F,KAAO8F,EAAK9F,GAAKuQ,EAAO,KAElCA,EAAKzK,KAAKhC,QAAUgC,EAAKhC,MAAQyM,EAAO,OAI/CrL,EAAMvB,GAAG2N,0BACPpM,EAAMvB,GAAG4N,uBAIXJ,EACE3a,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8a,GAAD,CACE9b,KAAK,MACL4B,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGA,EACH5I,MAAO,KAGbqW,EACE5a,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+a,GAAD,CACEna,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpB6E,MAAOA,EACPvB,EAAGA,EACH5I,MAAO,KAGbsW,EAAY7a,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,YAGvByb,EACE3a,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8a,GAAD,CACE9b,KAAK,KACL4B,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGA,EACH5I,MAAO,KAGbqW,EAAa5a,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UACxB2b,EAAY7a,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,YAEE,IAAlBoQ,EAAK4H,UACdyD,EAAY3a,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UACvB0b,EAAa5a,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UACxB2b,EAAY7a,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UACvBka,EAAQpZ,EAAAC,EAAAC,cAAA,+CAGRya,EAAY3a,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,mBACvB0b,EAAa5a,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,mBACxBka,EAAQA,EAAMzQ,IAAI,SAACoR,EAAM5M,GACvB,OAAQ4M,EAAKmB,SAgDF,KA/CPlb,EAAAC,EAAAC,cAAA,OAAKmN,IAAKF,GACVnN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBAAA4C,OAAkBiX,EAAKE,SACvBja,EAAAC,EAAAC,cAAA,sBAAA4C,OAAiBiX,EAAKla,SACtBG,EAAAC,EAAAC,cAAA,oBAAA4C,OAAeiX,EAAKC,OACpBha,EAAAC,EAAAC,cAAA,oBAAA4C,OAAeiJ,SAASgO,EAAKA,KAAM,IAAM,UAAY,SACrC,WAAdA,EAAK7a,KACH6M,SAASgO,EAAKA,KAAM,IACjB/Z,EAAAC,EAAAC,cAACib,GAAD,CACDra,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAG4M,EAAKzK,KAAKhC,MACbpO,KAAK,SACLib,OAAQ,EACRH,KAAMD,EAAKC,KACXkB,SAAUnB,EAAKmB,WAEdlb,EAAAC,EAAAC,cAACib,GAAD,CACDra,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGmC,EAAKhC,MACRpO,KAAK,SACLib,OAAQ,EACRH,KAAMD,EAAKC,KACXkB,SAAUnB,EAAKmB,WAEjBnP,SAASgO,EAAKA,KAAM,IACjB/Z,EAAAC,EAAAC,cAACib,GAAD,CACDra,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAG4M,EAAKzK,KAAKhC,MACbpO,KAAK,aACLib,OAAQ,EACRH,KAAMD,EAAKC,KACXkB,SAAUnB,EAAKmB,WAEdlb,EAAAC,EAAAC,cAACib,GAAD,CACDra,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAG4M,EAAKzK,KAAKhC,MACbpO,KAAK,aACLib,OAAQ,EACRH,KAAMD,EAAKC,KACXkB,SAAUnB,EAAKmB,eAM7BL,EACE7a,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACE0J,KAAM,SAAWuD,EACjBlF,YAAY,SACZ7F,SAAU,SAAC8F,GAAD,OAAO5B,EAAKlE,SAAS8F,IAC/B1H,MAAO8F,EAAK/B,MAAM,SAAW4I,IAAM,KAErCnN,EAAAC,EAAAC,cAACkb,GAAD,CACEta,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGA,EACHgN,OAAO,MACPjb,KAAK,SACL6C,MAAOuE,EAAK/B,MAAM,SAAW4I,KAE/BnN,EAAAC,EAAAC,cAACkb,GAAD,CACEta,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGA,EACHgN,OAAO,KACPjb,KAAK,SACL6C,MAAOuE,EAAK/B,MAAM,SAAW4I,MAGjCnN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACE0J,KAAM,SAAWuD,EACjBlF,YAAY,aACZ7F,SAAU,SAAC8F,GAAD,OAAO5B,EAAKlE,SAAS8F,IAC/B1H,MAAO8F,EAAK/B,MAAM,SAAW4I,IAAM,KAErCnN,EAAAC,EAAAC,cAACkb,GAAD,CACEta,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGA,EACHgN,OAAO,MACPjb,KAAK,aACL6C,MAAOuE,EAAK/B,MAAM,SAAW4I,KAE/BnN,EAAAC,EAAAC,cAACkb,GAAD,CACEta,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGA,EACHgN,OAAO,KACPjb,KAAK,aACL6C,MAAOuE,EAAK/B,MAAM,SAAW4I,QAMhC,CACLE,IAAKF,EACLR,YAAa2C,EAAK3C,YAClB0H,UAAS,GAAAvR,OAAM8E,WAAW/L,IAAKwK,QAAQ3F,KAAKC,KAAK2F,EAAKvG,MAAM2L,QAAQC,QAAU,OAAS2D,EAAKuF,UAAY,KAAM,UAAUhN,QAAQ,GAAvH,QACTyR,gBAAiBqB,EACjBU,aAAcT,EACdU,cAAeT,EACfzB,MAAOA,KAIH,GAIRpZ,EAAAC,EAAAC,cAACiZ,GAAD,CACEvP,KAAMzF,KAAKpE,MAAM2L,QAAQ9B,KACzBC,QAAS1F,KAAKpE,MAAM8J,QACpBC,MAAO3F,KAAKpE,MAAM2L,QAAQ5B,MAC1BC,QAAS5F,KAAKpE,MAAM2L,QAAQ3B,QAC5BC,SAAU7F,KAAKpE,MAAM2L,QAAQ1B,SAC7BC,KAAMpO,IAAKwK,QAAQ3F,KAAKC,KAAKwD,KAAKpE,MAAM2L,QAAQC,QAAU,MAAO,SACjEzB,eAAgB/F,KAAKpE,MAAM2L,QAAQxB,eACnCW,KAAM1G,KAAKI,MAAMkH,aACjBiD,MAAOA,EACP5N,KAAMqD,KAAKpE,MAAMe,cAlODqH,IAAMC,WAsPf1I,eAdS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAAS,GAAGD,EAASxC,SACpC6E,MAAOnK,EAAM+H,SAAS,GAAGD,EAASxC,SAAS6E,MAC3C0K,MAAO7U,EAAMzD,KAAKsY,QAIK,SAACzZ,GAC1B,MAAO,CACL4W,mBAAoB,SAAC1M,EAAS/I,EAAMyD,GAAhB,OAA0B5E,EAAS4W,GAAmB1M,EAAS/I,EAAMyD,OAI9E7E,CAA6Cgb,kqBCtP5D,IAAInO,GAAYC,KAAH+O,MAmCPC,eACJ,SAAAA,IAAe,IAAAxX,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqX,IACbxX,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuX,GAAAlX,KAAAH,QACKI,MAAQ,CACX+H,SAAU,IAHCtI,oFASbG,KAAK2I,cACL3I,KAAKsX,oKAIL3f,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,IACC8B,EAAOxB,QACTb,EAAK5E,MAAM+M,cACXnI,EAAKc,SAAS,CAAC3E,KAAMkG,EAAO,MAE5BgG,QAAQC,IAAI,2BANF,wBAAA5H,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,yIAYU,IAAAO,EAAAnC,KACVrI,IAAI+I,YAAJ,eAAA0B,EAAAtC,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAwB,EAAOtB,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACTL,IACC8B,EAAOxB,OACTc,EAAKvG,MAAM8D,aAAamD,EAAO,IAE/BgG,QAAQC,IAAI,2BALF,wBAAAxG,EAAAd,SAAAa,EAAArC,SAAhB,gBAAAwC,EAAAC,GAAA,OAAAL,EAAAT,MAAA3B,KAAA4B,YAAA,0CAea2V,EAAW5a,GACxB,IAAI6a,EAAWxX,KAAKpE,MAAM6b,MAAM9a,GAChC,GAAwB,qBAAb6a,EAA0B,OAAO,EAK5C,IAJA,IAAIzO,EAAOjJ,OAAOiJ,KAAKyO,GACnBE,EAAa,EACbC,EAAgB,EAEX3O,EAAI,EAAGA,EAAID,EAAK1H,OAAQ2H,IAE1BwO,EAASzO,EAAKC,IAAIuO,WAAaA,GAAeC,EAASzO,EAAKC,IAAIuO,UAAYI,IAC/EA,EAAgBH,EAASzO,EAAKC,IAAIuO,UAClCG,EAAa3O,EAAKC,IAGtB,OAAO0O,mCAGC,IAAAtU,EAAApD,KACFmI,EAAW,qBAAOnI,KAAKpE,MAAMuM,SAC/BrI,OAAOiJ,KAAK/I,KAAKpE,MAAMuM,UAAU3D,IAAI,SAACkB,EAASsD,GAC/C,OAAOnN,EAAAC,EAAAC,cAAC6b,GAAD,CACL1O,IAAKF,EACLG,MAAOH,EACPtD,QAASA,EACT6B,QAASnE,EAAKxH,MAAMuM,SAASzC,GAC7B/I,KAAMyG,EAAKhD,MAAMzD,SAGnB,GACJ,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAK0Q,aAAc,KAC1CjT,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,yBAKFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACiL,YAAa,OAAQC,aAAc,SAC7ClB,YAnFMnE,IAAMC,WAwGV1I,eAbS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLC,SAAU/H,EAAM+H,SAAS,KAIF,SAAC3M,GAC1B,MAAO,CACLmN,YAAa,kBAAMnN,EAASmN,YAAY,EAAGP,MAC3C1I,aAAc,SAACC,GAAD,OAAanE,EAASkE,EAAaC,OAItCpE,CAA6C8b,ICnJtDrJ,GAAU,CAAC,CACfQ,MAAO,mBACPC,UAAW,cACXvF,IAAK,eACJ,CACDsF,MAAO,aACPC,UAAW,YACXvF,IAAK,aACJ,CACDsF,MAAO,oBACPC,UAAW,kBACXvF,IAAK,mBACJ,CACDsF,MAAO,iBACPC,UAAW,eACXvF,IAAK,gBACJ,CACDsF,MAAO,eACPC,UAAW,aACXvF,IAAK,eAGQ2O,GAAA,SAAA5a,GAWT,IAVJwI,EAUIxI,EAVJwI,KACAC,EASIzI,EATJyI,QACAC,EAQI1I,EARJ0I,MACAC,EAOI3I,EAPJ2I,QACAC,EAMI5I,EANJ4I,SACAC,EAKI7I,EALJ6I,KACAC,EAII9I,EAJJ8I,eAEAwE,GAEItN,EAHJmD,MAGInD,EAFJsN,OACA0K,EACIhY,EADJgY,MAEA,OACEpZ,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWkQ,aAAc,KACrDjT,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVC,KAAMA,EACNC,eAAgBA,IAElBlK,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACU,QAAS,KACpBhD,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,SAAUO,gBAAiB,UAAWF,UAAW,KAC5F7C,EAAAC,EAAAC,cAACkS,GAAA,EAAD,CAAOC,WAAY3D,EAAOyD,QAASA,GAASK,YAAY,MAG3D4G,ICnCQ1Z,eAAQ,KANI,SAACC,GAC1B,MAAO,CACLsc,WAAY,SAACpC,EAAgBjL,EAAgB2J,EAAWzY,GAA5C,OAAsDH,ExBuL/D,SAAqBka,EAAgBjL,EAAgB2J,EAAWzY,GACrE,MAAO,CACLZ,KAAMoX,GACNuD,iBACAjL,iBACA2J,YACAzY,SwB7L2Emc,CAAWpC,EAAgBjL,EAAgB2J,EAAWzY,OAItHJ,CAdU,SAACK,GACxB,OAAQC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACNjB,KAAK,SACLoB,QAAS,kBAAMP,EAAMkc,WAAWlc,EAAMb,KAAMa,EAAM8J,QAAS9J,EAAMoN,EAAG,CAACtM,KAAMd,EAAMe,SAF3E,WAAAgC,OAGqB,WAAf/C,EAAMb,KAAoB,IAAM,IAHtC,QCKJgd,eACJ,SAAAA,IAAe,IAAAlY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+X,IACblY,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiY,GAAA5X,KAAAH,QACKI,MAAQ,CACXmK,MAAO,GACPjD,aAAc,IAJHzH,oFASbG,KAAKoS,qBACLpS,KAAKuP,kLAIL5X,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAKC,GAAZ,OAAAJ,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,GACHP,EAAK5E,MAAMwW,mBAAmB5R,EAAK5E,MAAM8J,QAAS1E,EAAS,GAAIR,EAAK5E,MAAMwE,OAF9D,wBAAAc,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,8QAQyB5J,IAAE4B,GAAGoG,KAAKpE,MAAM8J,SAAS4B,kCAA9CA,EAA+D,SACnEtH,KAAKsB,SAAS,CAACgG,aAAc,IAAIK,KAAKC,SAASN,yIAGvC,IACJiD,EAAO0K,EADH9S,EAAAnC,KA+DR,OAzDEuK,EAJ8B,qBAArBvK,KAAKpE,MAAM2O,OACpBA,EAAQvK,KAAKpE,MAAM2O,MAAMO,MAAM,GAAG4J,KAAK,SAAU5Y,EAAG6Y,GAClD,OAAO7Y,EAAEqN,MAAQwL,EAAExL,SAEP3E,IAAI,SAAC2G,EAAMnC,GAEvB,IAAIwN,EAAWC,EAAYqB,EAyC3B,OA1CA7C,EAAQnI,UAAS3K,EAAKvG,MAAMqZ,MAAO,SAACW,GAAW,OAAOA,EAAKzK,KAAK9F,KAAO8F,EAAK9F,GAAKuQ,EAAO,OAGpFY,EADJrL,EAAKwL,0BAED9a,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8a,GAAD,CACE9b,KAAK,MACL4B,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGA,EACH5I,MAAO+B,EAAKvG,MAAMwE,SAItBvE,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UAGX0b,EADJtL,EAAKyL,sBAED/a,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+a,GAAD,CACEna,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpB6E,MAAOA,EACPvB,EAAGA,EACH5I,MAAO+B,EAAKvG,MAAMwE,SAItBvE,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UAWX+c,EAVa,IAAjB7C,EAAM5T,QAAiB4T,EAAM,GAAG8B,UAAa9B,EAAM,GAAG+C,QAWlDnc,EAAAC,EAAAC,cAACE,GAAA,EAAD,CAAMlB,KAAK,UATXc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkc,GAAD,CACEtb,KAAMwF,EAAKvG,MAAMe,KACjB+I,QAASvD,EAAKvG,MAAM8J,QACpBsD,EAAGA,EACHjO,KAAMka,EAAM,GAAGla,QAMhB,CACLmO,IAAKF,EACLR,YAAa2C,EAAK3C,YAClB0H,UAAS,GAAAvR,OAAKjH,IAAKwK,QAAQC,EAAKvG,MAAM2L,QAAQC,UAAY2D,EAAKuF,UAAY,KAAlE,QACTyE,gBAAiBqB,EACjBU,aAAcT,EACdqB,WAAYA,EACZ7C,MAAOA,KAIH,GAIRpZ,EAAAC,EAAAC,cAAC8b,GAAD,CACEpS,KAAMzF,KAAKpE,MAAM2L,QAAQ9B,KACzBC,QAAS1F,KAAKpE,MAAM8J,QACpBC,MAAO3F,KAAKpE,MAAM2L,QAAQ5B,MAC1BC,QAAS5F,KAAKpE,MAAM2L,QAAQ3B,QAC5BC,SAAU7F,KAAKpE,MAAM2L,QAAQ1B,SAC7BC,KAAMpO,IAAKwK,QAAQlC,KAAKpE,MAAM2L,QAAQzB,KAAM,SAC5CC,eAAgB/F,KAAKpE,MAAM2L,QAAQxB,eACnCW,KAAM1G,KAAKI,MAAMkH,aACjB3K,KAAMqD,KAAKpE,MAAMe,KACjB4N,MAAOA,WArGevG,IAAMC,WAyHrB1I,eAdS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLX,QAASnH,EAAM+H,SAASD,EAAS9H,OAAO8H,EAASxC,SACjD6E,MAAOnK,EAAM+H,SAASD,EAAS9H,OAAO8H,EAASxC,SAAS6E,MACxD0K,MAAO7U,EAAMzD,KAAKsY,QAIK,SAACzZ,GAC1B,MAAO,CACL4W,mBAAoB,SAAC1M,EAAS/I,EAAMyD,GAAhB,OAA0B5E,EAAS4W,GAAmB1M,EAAS/I,EAAMyD,OAI9E7E,CAA6Cwc,kqBC1H5D,IAAI3P,GAAYC,KAAH6P,MAmCPC,eACJ,SAAAA,IAAe,IAAAtY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmY,IACbtY,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqY,GAAAhY,KAAAH,QACKI,MAAQ,CACX+H,SAAU,IAHCtI,oFAQbG,KAAK2I,cACL3I,KAAKsX,oKAIL3f,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,IACC8B,EAAOxB,OACTb,EAAK5E,MAAM+M,cAEXE,QAAQC,IAAI,2BALF,wBAAA5H,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,yIAWU,IAAAO,EAAAnC,KACVrI,IAAI+I,YAAJ,eAAA0B,EAAAtC,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAwB,EAAOtB,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACTL,IACC8B,EAAOxB,OACTc,EAAKvG,MAAM8D,aAAamD,EAAO,IAE/BgG,QAAQC,IAAI,2BALF,wBAAAxG,EAAAd,SAAAa,EAAArC,SAAhB,gBAAAwC,EAAAC,GAAA,OAAAL,EAAAT,MAAA3B,KAAA4B,YAAA,qCAWQ,IAAAwB,EAAApD,KACFmI,EAAW,qBAAOnI,KAAKpE,MAAMuM,SAC/BrI,OAAOiJ,KAAK/I,KAAKpE,MAAMuM,UAAU3D,IAAI,SAACkB,EAASsD,GAC/C,OAAOnN,EAAAC,EAAAC,cAACqc,GAAD,CACLlP,IAAKF,EACLG,MAAOH,EACPtD,QAASA,EACT6B,QAASnE,EAAKxH,MAAMuM,SAASzC,GAC7BtF,MAAO,MAGT,GACJ,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAK0Q,aAAc,KAC1CjT,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,iCAEFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACiL,YAAa,OAAQC,aAAc,SAC7ClB,YAzDUnE,IAAMC,WA8Ed1I,eAbS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLC,SAAU/H,EAAM+H,SAAS,KAIF,SAAC3M,GAC1B,MAAO,CACLmN,YAAa,kBAAMnN,EAASmN,YAAY,EAAGP,MAC3C1I,aAAc,SAACC,GAAD,OAAanE,EAASkE,EAAaC,OAItCpE,CAA6C4c,kqBCjH5D,IAAI/P,GAAYC,KAAHgQ,MAmCPC,eACJ,SAAAA,IAAe,IAAAzY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsY,IACbzY,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwY,GAAAnY,KAAAH,QACKI,MAAQ,CACX+H,SAAU,IAHCtI,oFAQbG,KAAK2I,cACL3I,KAAKsX,oKAIL3f,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,IACC8B,EAAOxB,QACTb,EAAK5E,MAAM+M,cACXnI,EAAKc,SAAS,CAAC3E,KAAMkG,EAAO,MAE5BgG,QAAQC,IAAI,2BANF,wBAAA5H,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,yIAYU,IAAAO,EAAAnC,KACVrI,IAAI+I,YAAJ,eAAA0B,EAAAtC,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAwB,EAAOtB,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OACTL,IACC8B,EAAOxB,OACTc,EAAKvG,MAAM8D,aAAamD,EAAO,IAE/BgG,QAAQC,IAAI,2BALF,wBAAAxG,EAAAd,SAAAa,EAAArC,SAAhB,gBAAAwC,EAAAC,GAAA,OAAAL,EAAAT,MAAA3B,KAAA4B,YAAA,qCAWQ,IAAAwB,EAAApD,KACFmI,EAAW,qBAAOnI,KAAKpE,MAAMuM,SAC/BrI,OAAOiJ,KAAK/I,KAAKpE,MAAMuM,UAAU3D,IAAI,SAACkB,EAASsD,GAC/C,OAAOnN,EAAAC,EAAAC,cAACqc,GAAD,CACLlP,IAAKF,EACLG,MAAOH,EACPtD,QAASA,EACT/I,KAAMyG,EAAKhD,MAAMzD,KACjB4K,QAASnE,EAAKxH,MAAMuM,SAASzC,GAC7BtF,MAAO,MAGT,GACJ,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAK0Q,aAAc,KAC1CjT,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACiL,YAAa,OAAQC,aAAc,SAC7ClB,YA3DQnE,IAAMC,WAgFZ1I,eAbS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLC,SAAU/H,EAAM+H,SAAS,KAIF,SAAC3M,GAC1B,MAAO,CACLmN,YAAa,kBAAMnN,EAASmN,YAAY,EAAGP,MAC3C1I,aAAc,SAACC,GAAD,OAAanE,EAASkE,EAAaC,OAItCpE,CAA6C+c,ICzH7CC,GAAA,SAAAtb,GAET,IADJsK,EACItK,EADJsK,QAEA,OACE1L,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,UAAWkQ,aAAc,KACrDjT,EAAAC,EAAAC,cAACyJ,EAAD,CACEC,KAAM8B,EAAQ9B,KACdC,QAAS6B,EAAQ7B,QACjBC,MAAO4B,EAAQ5B,MACfC,QAAS2B,EAAQ3B,QACjBC,SAAU0B,EAAQ1B,SAClBC,KAAMpO,IAAKwK,QAAQqF,EAAQC,QAAS,SACpCzB,eAAgBwB,EAAQxB,irBCPhC,IAAIqC,GAAYC,KAAHmQ,MAmCPC,eACJ,SAAAA,IAAe,IAAA5Y,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyY,IACb5Y,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2Y,GAAAtY,KAAAH,QACKI,MAAQ,CACX+H,SAAU,IAHCtI,oFAQbG,KAAK2I,uKAILhR,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAK8B,GAAZ,OAAAjC,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,IACC8B,EAAOxB,QACTb,EAAK5E,MAAM+M,cACXnI,EAAKc,SAAS,CAAC3E,KAAMkG,EAAO,MAE5BgG,QAAQC,IAAI,2BANF,wBAAA5H,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,uIAYQ,IAAAO,EAAAnC,KACFmI,EAAW,qBAAOnI,KAAKpE,MAAMuM,SAC/BrI,OAAOiJ,KAAK/I,KAAKpE,MAAMuM,UAAU3D,IAAI,SAACkB,EAASsD,GAC/C,OAAOnN,EAAAC,EAAAC,cAACwc,GAAD,CACLrP,IAAKF,EACLG,MAAOH,EACPtD,QAASA,EACT/I,KAAMwF,EAAK/B,MAAMzD,KACjB4K,QAASpF,EAAKvG,MAAMuM,SAASzC,OAG/B,GACJ,OACE7J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAK0Q,aAAc,KAC1CjT,EAAAC,EAAAC,cAAA,UAAQ0C,UAAU,cAChB5C,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACiL,YAAa,OAAQC,aAAc,SAC7ClB,YA7CSnE,IAAMC,WAiEb1I,eAZS,SAAC6E,EAAO8H,GAC9B,MAAO,CACLC,SAAU/H,EAAM+H,SAAS,KAIF,SAAC3M,GAC1B,MAAO,CACLmN,YAAa,kBAAMnN,EAASmN,YAAY,EAAGP,QAIhC7M,CAA6Ckd,ICnG7CC,GAPD,WAAIC,SAAQ,cCKpBC,eACJ,SAAAA,IAAe,IAAA/Y,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4Y,IACb/Y,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8Y,GAAAzY,KAAAH,QACKI,MAAQ,CACXyY,UAAU,GAEZhZ,EAAKiZ,SAAWjZ,EAAKiZ,SAASzY,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKkZ,uBAAyBlZ,EAAKkZ,uBAAuB1Y,KAA5BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC9BA,EAAKmZ,cAAgBnZ,EAAKmZ,cAAc3Y,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAPRA,oFAWbG,KAAK+Y,0EAGmB,IAAAvY,EAAAR,MACnBA,KAAKI,MAAMyY,UAAY3f,OAAO+f,SAASC,UAAUC,YACpDnZ,KAAKgZ,gBACK9f,OAAO+f,SAASC,UAAUC,aACpCjgB,OAAO+f,SAASG,SAElBC,WAAW,WACT7Y,EAAKuY,0BACJ,6CAGY,IAAA5W,EAAAnC,KACfrI,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAa,EAAA,EAAAb,CAAAc,EAAA9E,EAAA+E,KAAgB,SAAAC,EAAOC,EAAKC,GAAZ,OAAAJ,EAAA9E,EAAAmF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,GACHoB,EAAKb,SAAS,CAACuX,SAAU7X,EAASK,SAFtB,wBAAAH,EAAAM,SAAAV,EAAAd,SAAhB,gBAAAyB,EAAAC,GAAA,OAAAzE,EAAA0E,MAAA3B,KAAA4B,YAAA,uCAOU,IAAAwB,EAAApD,KACV,GAAIA,KAAKI,MAAMyY,SAAU,CAMvBH,GAAMY,kBALS,CACbC,UAAW,CAAC,OAAQ,SAAU,WAC9BC,eAAe,IAIjBd,GAAMe,WAAW,iBAAiB7W,KAAK,SAAA8W,GAErCtW,EAAKxH,MAAMhB,mBACXwI,EAAKxH,MAAM+d,UAAUD,EAAIvV,gBAG3B5C,MAAM,+DAKR,OACG1F,EAAAC,EAAAC,cAAA,OAAIoC,MAAO,CAACU,QAAS,KACpBhD,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,aAAd,yBACA5C,EAAAC,EAAAC,cAAA,MAAI0C,UAAU,SACd5C,EAAAC,EAAAC,cAAA,uGACAF,EAAAC,EAAAC,cAAA,sFACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAG6d,KAAK,oFAAR,aACA/d,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,KAAG6d,KAAK,iEAAR,kBAGF/d,EAAAC,EAAAC,cAAA,KAAG0C,UAAU,OAAON,MAAO,CAACO,UAAW,GAAIF,WAAY,WACrD3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,MAAM,UAAUC,QAAS6D,KAAK8Y,UAAtC,+BAlEY9U,IAAMC,WAiFb1I,eAAQ,KANI,SAACC,GAC1B,MAAO,CACLme,UAAW,SAACE,GAAD,OAAiBre,ElD3DzB,SAAoBqe,GACzB,MAAO,CACL9e,KAAMoE,EACN0a,ekDwDqCF,CAAUE,KAC/Cjf,iBAAkB,kBAAMY,EAASZ,kBAGtBW,CAAkCqd,ICvDlCkB,GAlBF,kBACXje,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACge,EAAA,EAAD,KACEle,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,KACjC/c,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWva,IAEjC/D,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWC,MAClCve,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW5R,KAChC1M,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,OAAOC,UAAWrJ,KAC9BjV,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW1G,KAChC5X,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWtF,KACnChZ,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAW9C,KAC/Bxb,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWhC,KACnCtc,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW7B,KACjCzc,EAAAC,EAAAC,cAACie,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAW1B,QCfzB4B,6LARX,OACExe,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACS,gBAAiB,YAC5B/C,EAAAC,EAAAC,cAACue,GAAD,cAJUtW,IAAMC,YCKlBsW,GAAcC,QACW,cAA7BthB,OAAO2M,SAAS4U,UAEe,UAA7BvhB,OAAO2M,SAAS4U,UAEhBvhB,OAAO2M,SAAS4U,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBC,UAAUC,cACPhd,SAAS8c,GACThY,KAAK,SAAAmY,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7a,QACfya,UAAUC,cAAcM,WAK1BvS,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBuS,MAAM,SAAAhU,GACLwB,QAAQxB,MAAM,4CAA6CA,2DCtE3DiU,GAAe,CACnBC,MAAO,KAUMC,OAPf,WAA0D,IAA9Bpb,EAA8BwB,UAAAP,OAAA,QAAA8D,IAAAvD,UAAA,GAAAA,UAAA,GAAtB0Z,GAIlC,OAJwD1Z,UAAAP,OAAA,GAAAO,UAAA,GAIjDxB,GCRIqb,GAAiB,iBACjBC,GAAgB,gBAChBC,GAAe,eCGtBL,GAAe,CACnB/X,WAAY,EACZK,eAAgB,EAChBnD,aAAa,EACbwU,MAAO,ICPT,IAAMqG,GAAe,CACnBM,SAAU,kBCCNN,GAAe,CACnBhY,YAAa,EACbK,gBAAiB,EACjBJ,WAAY,EACZK,eAAgB,gBCLZ0X,GAAe,GCKrB,IASeO,GATFC,2BAAgB,CAC3BC,WAAYC,GACZrf,KJEa,WAAoD,IAA9ByD,EAA8BwB,UAAAP,OAAA,QAAA8D,IAAAvD,UAAA,GAAAA,UAAA,GAAtB0Z,GAAcW,EAAQra,UAAAP,OAAA,EAAAO,UAAA,QAAAuD,EACjE,OAAQ8W,EAAOlhB,MACb,KAAKmE,EACH,OAAOY,OAAOiN,OAAO,GAAI3M,EAAO,CAACwD,eAAgB,IAAOnD,aAAa,IACvE,KAAKrB,EACH,OAAOU,OAAOiN,OAAO,GAAI3M,EAAO,CAACzD,KAAMsf,EAAOC,UAChD,KAAK7c,EACH,OAAOS,OAAOiN,OAAO,GAAI3M,EAAO,CAACzD,KAAM,KACzC,KAAK4C,EACH,OAAK0c,EAAOhhB,gBAAgB8S,KAAKpR,KAGxBmD,OAAOiN,OAAO,GAAI3M,EAAO,CAACmD,WAAY0Y,EAAOhhB,gBAAgB8S,KAAKpR,KAAKwf,aAAcvY,eAAgBqY,EAAOhhB,gBAAgB8S,KAAKpR,KAAKe,oBAFtI0C,EAIX,KAAKhF,EACH,OAAO0E,OAAOiN,OAAO,GAAI3M,EAAO,CAACmD,WAAYnD,EAAMmD,WAAa0Y,EAAOG,QAAQC,aAAapa,aAC9F,KAAK3G,EACH,OAAOwE,OAAOiN,OAAO,GAAI3M,EAAO,CAACmD,WAAYnD,EAAMmD,WAAa0Y,EAAOG,QAAQE,gBAAgBra,aACjG,KAAKxC,EACH,OAAOK,OAAOiN,OAAO,GAAI3M,EAAO,CAAC6U,MAAOgH,EAAOhH,QACjD,KAAKwG,GACH,IAAIpa,EAASjB,EAAM6U,MAAM5T,OACrBqO,EAAW5P,OAAOiN,OAAO,GAAI3M,EAAM6U,MAAxBnV,OAAA2P,GAAA,EAAA3P,CAAA,GAAiCuB,EAAS,CAACkG,QAAS0U,EAAOM,YAAY9R,eAAgB/O,OAAQugB,EAAOM,YAAYlgB,MAAO8O,KAAM,CAAChC,MAAO8S,EAAOM,YAAYnI,WAAY4D,SAAS,EAAOjB,UAAU,EAAOlB,KAAMoG,EAAOM,YAAY1G,KAAM9a,KAAMkhB,EAAOM,YAAYxhB,KAAM+a,OAAQmG,EAAOM,YAAYC,UAAUC,KAAK,GAAGxS,KAAKoM,OAAOpU,WAAY2T,KAAMqG,EAAOM,YAAY3G,QAClX,OAAO9V,OAAOiN,OAAO,GAAI3M,EAAO,CAAC6U,MAAOvF,IAC1C,KAAKgM,GACH,IAAIvS,EAAQ2D,aAAY1M,EAAM6U,MAAO,SAAUW,GAC7C,OAAOA,EAAKzK,KAAKhC,QAAU8S,EAAOM,YAAYnI,WAAawB,EAAKrO,UAAY0U,EAAOM,YAAY9R,iBAE7FmL,EAAO9V,OAAOiN,OAAO,GAAI3M,EAAM6U,MAAM9L,GAAQ,CAAC4N,UAAU,IAE5D,OADArH,EAAW5P,OAAOiN,OAAO,GAAI3M,EAAM6U,MAAxBnV,OAAA2P,GAAA,EAAA3P,CAAA,GAAiCqJ,EAAQyM,IAC7C9V,OAAOiN,OAAO,GAAI3M,EAAO,CAAC6U,MAAOvF,IAG5C,OAAOtP,GIlCP+H,SDLa,WAAuD,IAA9B/H,EAA8BwB,UAAAP,OAAA,QAAA8D,IAAAvD,UAAA,GAAAA,UAAA,GAAtB0Z,GAAcW,EAAQra,UAAAP,OAAA,EAAAO,UAAA,QAAAuD,EACpE,OAAQ8W,EAAOlhB,MACb,KAAK2hB,KACH,GAAKT,EAAO9T,SAAS9G,OAEd,CACL,IAAIsb,EAASV,EAAO9T,SAASuC,OAAO,SAACkS,EAAKC,GAAN,OAAgBD,EAAIC,EAAKnX,SAAWmX,EAAMD,GAAM,IACpF,OAAO9c,OAAOiN,OAAO,GAAI3M,EAAlBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA2Bmc,EAAO7b,MAAQuc,IAHjD,OAAOvc,EAKX,KAAK0c,KACH,IAAIvV,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOxR,gBAAiB,CAACJ,SAAU4R,EAAOrL,cAC/EzI,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOxR,eAAiBlD,IACrE,OAAOzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC2c,EAAG5U,IACtC,KAAK6U,KACH,IAAIC,EAIAC,EAFAD,EADsD,qBAAnD7c,EAAM,GAAG6b,EAAOxR,gBAAgBkG,eAClB,GACAvQ,EAAM,GAAG6b,EAAOxR,gBAAgBkG,eAEjDwM,EAAYF,EAAeG,UAAU,SAAUC,GAAW,OAAOA,EAAQ7M,YAAcyL,EAAOqB,mBAClG,IAAmB,IAAfH,EAAkB,CACpB,IAAI9b,EAAS6b,EAAe7b,OAC5B6b,EAAiBpd,OAAOiN,OAAO,GAAImQ,EAAlBpd,OAAA2P,GAAA,EAAA3P,CAAA,GAAoCuB,EAAS,CAACoP,QAASwL,EAAO1R,MAAOiG,UAAWyL,EAAOqB,iBAAkB5M,UAAWuL,EAAOG,gBAE5Ic,EAAiBpd,OAAOiN,OAAO,GAAImQ,EAAlBpd,OAAA2P,GAAA,EAAA3P,CAAA,GAAoCqd,EAAY,CAAC1M,QAASwL,EAAO1R,MAAOiG,UAAWyL,EAAOqB,iBAAkB5M,UAAWuL,EAAOG,WAIjJ,OAFA7U,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOxR,gBAAiB,CAACkG,eAAgBuM,IAC9E/U,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOxR,eAAiBlD,IAC1DzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC2c,EAAG5U,IACtC,KAAKoV,KACH,GAA8B,WAA1BtB,EAAOvG,eAA6B,CACtC,IAAI1T,EAAS4F,SAASxH,EAAM,GAAG6b,EAAOpZ,OAAO4H,gBAAgBzI,OAAQ,IACjEwb,EAAY5V,SAASqU,EAAOpZ,OAAO2a,UAAW,IAClDjW,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOpZ,OAAO4H,gBAAiB,CAACzI,OAAQA,EAASwb,EAAWjgB,aAAc0e,EAAO1e,oBACjH,GAA8B,eAA1B0e,EAAOvG,eAAiC,CACjD,IAAI+H,EAAa7V,SAASxH,EAAM,GAAG6b,EAAOpZ,OAAO4H,gBAAgB/M,kBAAmB,IAChFggB,EAAYzB,EAAOpZ,OAAOgE,WAAW5E,WACzCsF,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOpZ,OAAO4H,gBAAiB,CAAC/M,kBAAmB+f,EAAaC,EAAWngB,aAAc0e,EAAO1e,eAGvI,OADA4K,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOpZ,OAAO4H,eAAiBlD,IACjEzH,OAAOiN,OAAO,GAAI3M,EAAO,CAACud,EAAGxV,IACtC,KAAKyV,KACH,GAA8B,WAA1B3B,EAAOvG,eAA6B,CACtC,IAAI1T,EAAS4F,SAASxH,EAAM,GAAG6b,EAAOpZ,OAAO4H,gBAAgBzI,OAAQ,IACjEwb,EAAY5V,SAASqU,EAAOpZ,OAAO2a,UAAW,IAClDjW,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOpZ,OAAO4H,gBAAiB,CAACzI,OAAQA,EAASwb,EAAWjgB,aAAc0e,EAAO1e,oBACjH,GAA8B,eAA1B0e,EAAOvG,eAAiC,CACjD,IAAI+H,EAAa7V,SAASxH,EAAM,GAAG6b,EAAOpZ,OAAO4H,gBAAgB/M,kBAAmB,IAChFggB,EAAYzB,EAAOpZ,OAAOgE,WAAW5E,WACzCsF,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOpZ,OAAO4H,gBAAiB,CAAC/M,kBAAmB+f,EAAaC,EAAWngB,aAAc0e,EAAO1e,eAGvI,OADA4K,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOpZ,OAAO4H,eAAiBlD,IACjEzH,OAAOiN,OAAO,GAAI3M,EAAO,CAACud,EAAGxV,IACtC,KAAK0V,KAGH,OAFAtW,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAU,CAACiL,eAAgBsL,EAAOpZ,SAC9EsF,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOvW,QAAU6B,IACnDzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC2c,EAAG5U,IACtC,KAAK2V,KAGH,OAFAvW,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOxR,gBAAiB,CAACa,kBAAkB,IAChFnD,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOxR,eAAiBlD,IAC1DzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC2c,EAAG5U,IACtC,KAAK8I,GAGH,OAFA1J,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAU,CAAC6E,MAAO0R,EAAO1R,MAAO+H,eAAe,IAC3FnK,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOvW,QAAU6B,IACnDzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC2d,EAAG5V,IACtC,KAAKiJ,GACH,IAAIjG,EAAMZ,EAKV,OAJAY,EAAOrL,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAS6E,MAAM0R,EAAO9S,OAAQ,CAAC0J,SAAS,IACjFtI,EAAQzK,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAS6E,MAA3CzK,OAAA2P,GAAA,EAAA3P,CAAA,GAAoDmc,EAAO9S,MAAQgC,IAC3E5D,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAU,CAAC6E,MAAOA,IAC9DpC,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOvW,QAAU6B,IACnDzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC2d,EAAG5V,IACtC,KAAKmJ,GAKH,OAJAnG,EAAOrL,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAS6E,MAAM0R,EAAO9S,OAAQ,CAAC4J,UAAU,IAClFxI,EAAQzK,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAS6E,MAA3CzK,OAAA2P,GAAA,EAAA3P,CAAA,GAAoDmc,EAAO9S,MAAQgC,IAC3E5D,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAU,CAAC6E,MAAOA,IAC9DpC,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOvW,QAAU6B,IACnDzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC2d,EAAG5V,IAEtC,KAAKuJ,GAGH,IAFA,IAAIwC,EAAa,GAERlL,EAAI,EAAGA,EAAIiT,EAAOpZ,OAAOxB,OAAQ2H,IACxCkL,EAAapU,OAAOiN,OAAOmH,EAAdpU,OAAA2P,GAAA,EAAA3P,CAAA,GAA4BkJ,EAAI,CAACtN,OAAQugB,EAAOpZ,OAAOmG,GAAGtN,OAAQ0E,MAAO6b,EAAOpZ,OAAOmG,GAAG5I,MAAOzD,KAAMsf,EAAOpZ,OAAOmG,GAAGrM,QAMvI,OAJAwO,EAAOrL,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOxR,gBAAgBF,MAAM0R,EAAO9S,OAAQ,CAAC4K,YAAaG,IAC5F3J,EAAQzK,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOxR,gBAAgBF,MAAlDzK,OAAA2P,GAAA,EAAA3P,CAAA,GAA2Dmc,EAAO9S,MAAQgC,IAClF5D,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOxR,gBAAiB,CAACF,MAAOA,IACrEpC,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOxR,eAAiBlD,IAC1DzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC4d,EAAG7V,IACtC,KAAK6J,GAEH,IADA,IAAIoD,EAAc,GACTpM,EAAI,EAAGA,EAAIiT,EAAOpZ,OAAOxB,OAAQ2H,IACxCoM,EAActV,OAAOiN,OAAOqI,EAAdtV,OAAA2P,GAAA,EAAA3P,CAAA,GAA6Bmc,EAAOpZ,OAAOmG,GAAGmC,KAAKhC,MAAQ,CAAC/I,MAAO6b,EAAOpZ,OAAOmG,GAAG5I,MAAOiV,SAAU4G,EAAOpZ,OAAOmG,GAAGqM,YAItI,OAFA9N,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM6b,EAAO7b,OAAO6b,EAAOxR,gBAAiB,CAAC2K,YAAaA,IACtFjN,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM6b,EAAO7b,OAA/BN,OAAA2P,GAAA,EAAA3P,CAAA,GAAyCmc,EAAOxR,eAAiBlD,IACrEzH,OAAOiN,OAAO,GAAI3M,EAAlBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA2Bmc,EAAO7b,MAAQ+H,IACnD,KAAKqJ,GAMH,OALA0C,EAAapU,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAS6E,MAAM0R,EAAO7H,WAAWL,YAAnEjU,OAAA2P,GAAA,EAAA3P,CAAA,GAAkFM,EAAM,GAAG6b,EAAOvW,SAAS6E,MAAM0R,EAAO7H,WAAWL,YAAY1S,OAAS,CAAC3F,OAAQugB,EAAOgC,OAAOhc,WAAY7B,MAAO6b,EAAO5H,gBAAiB1X,KAAMsf,EAAOiC,aACpP/S,EAAOrL,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAS6E,MAAM0R,EAAO7H,WAAY,CAACL,YAAaG,IACzF3J,EAAQzK,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAS6E,MAA3CzK,OAAA2P,GAAA,EAAA3P,CAAA,GAAoDmc,EAAO7H,UAAYjJ,IAC/E5D,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM,GAAG6b,EAAOvW,SAAU,CAAC6E,MAAOA,IAC9DpC,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM,GAAxBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA8Bmc,EAAOvW,QAAU6B,IACnDzH,OAAOiN,OAAO,GAAI3M,EAAO,CAAC4d,EAAG7V,IACtC,KAAKyJ,GAIH,OAHAwD,EAActV,OAAOiN,OAAO3M,EAAM6b,EAAO7b,OAAO6b,EAAOxR,gBAAgB2K,YAAzDtV,OAAA2P,GAAA,EAAA3P,CAAA,GAAwEmc,EAAO9S,MAAQ,CAACkM,UAAU,KAChH9N,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM6b,EAAO7b,OAAO6b,EAAOxR,gBAAiB,CAAC2K,YAAaA,IACtFjN,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM6b,EAAO7b,OAA/BN,OAAA2P,GAAA,EAAA3P,CAAA,GAAyCmc,EAAOxR,eAAiBlD,IACrEzH,OAAOiN,OAAO,GAAI3M,EAAlBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA2Bmc,EAAO7b,MAAQ+H,IACnD,KAAK2J,GAKH,OAJA3G,EAAOrL,OAAOiN,OAAO,GAAI3M,EAAM6b,EAAO7b,OAAO6b,EAAOxR,gBAAgBF,MAAM0R,EAAO9S,OAAQ,CAACqM,gBAAgB,IAC1GjL,EAAQzK,OAAOiN,OAAO,GAAI3M,EAAM6b,EAAO7b,OAAO6b,EAAOxR,gBAAgBF,MAA7DzK,OAAA2P,GAAA,EAAA3P,CAAA,GAAsEmc,EAAO9S,MAAQgC,IAC7F5D,EAAUzH,OAAOiN,OAAO,GAAI3M,EAAM6b,EAAO7b,OAAO6b,EAAOxR,gBAAiB,CAACF,MAAOA,IAChFpC,EAAWrI,OAAOiN,OAAO,GAAI3M,EAAM6b,EAAO7b,OAA/BN,OAAA2P,GAAA,EAAA3P,CAAA,GAAyCmc,EAAOxR,eAAiBlD,IACrEzH,OAAOiN,OAAO,GAAI3M,EAAlBN,OAAA2P,GAAA,EAAA3P,CAAA,GAA2Bmc,EAAO7b,MAAQ+H,IAGrD,OAAO/H,GChHP+d,MHNa,WAAoD,IAC7DvC,EAAgBwC,EAAOpI,EAAQF,EAAQD,EAAM0B,EADdnX,EAA8BwB,UAAAP,OAAA,QAAA8D,IAAAvD,UAAA,GAAAA,UAAA,GAAtB0Z,GAAcW,EAAQra,UAAAP,OAAA,EAAAO,UAAA,QAAAuD,EAMjE,OAAQ8W,EAAOlhB,MACb,KAAK0gB,GAAL,IAAA4C,EAC8CpC,EAAOM,YAEnD,OAFEvG,EADJqI,EACIrI,OAAQoI,EADZC,EACYD,MAAOtI,EADnBuI,EACmBvI,OAAQD,EAD3BwI,EAC2BxI,KAAM0B,EADjC8G,EACiC9G,UANd,SAACnX,EAAOzD,EAAM2hB,GAEjC,OADA1C,EAAW9b,OAAOiN,OAAO,GAAI3M,EAAMwb,SAAxB9b,OAAA2P,GAAA,EAAA3P,CAAA,GAAoCnD,EAAO2hB,IAC/Cxe,OAAOiN,OAAO,GAAI3M,EAAO,CAACwb,aAMxB2C,CAAene,EAAOge,EADtBte,OAAOiN,OAAO,GAAI3M,EAAMwb,SAASwC,GAAjCte,OAAA2P,GAAA,EAAA3P,CAAA,GAA2CgW,EAAS,CAACD,KAAMA,EAAMG,OAAQA,EAAQuB,UAAWA,MAErG,KAAKmE,GACH,OAAOtb,EAGX,OAAOA,GGRPoe,OAAQC,KACRpb,QFHa,WAAuD,IAA9BjD,EAA8BwB,UAAAP,OAAA,QAAA8D,IAAAvD,UAAA,GAAAA,UAAA,GAAtB0Z,GAAcW,EAAQra,UAAAP,OAAA,EAAAO,UAAA,QAAAuD,EACpE,OAAQ8W,EAAOlhB,MACb,KAAKG,KACH,OAAK+gB,EAAOhhB,gBAAgB8S,KAAK1K,QAGxBvD,OAAOiN,OAAO,GAAI3M,EAAO,CAACkD,YAAa2Y,EAAOhhB,gBAAgB8S,KAAK1K,QAAQC,YAAaK,gBAAiBsY,EAAOhhB,gBAAgB8S,KAAK1K,QAAQM,kBAF7IvD,EAIX,KAAKlB,EACH,OAAOY,OAAOiN,OAAO,GAAI3M,EAAO,CAACuD,gBAAiBvD,EAAMuD,gBAAkB,MAC5E,KAAKvI,EACH,OAAO0E,OAAOiN,OAAO,GAAI3M,EAAO,CAACkD,YAAalD,EAAMkD,YAAc2Y,EAAOG,QAAQC,aAAapa,aAChG,KAAK3G,EACH,OAAOwE,OAAOiN,OAAO,GAAI3M,EAAO,CAACkD,YAAalD,EAAMkD,YAAc2Y,EAAOG,QAAQE,gBAAgBra,aAGrG,OAAO7B,wvCGrBT,IAAMse,GAAerW,KAAHsW,spCCIlB,IAAMC,GAAc,SAAAC,GAClB,IAAIhF,EACA7Y,EAKJ,OAJAtJ,IAAKC,IAAI+I,YAAY,SAACK,EAAK2Y,GACzB,GAAI3Y,EAAK,OAAOA,EAChBC,EAAW0Y,IAENmF,EAAQC,OAAO3f,GAAY4f,KAChCC,aAAS,SAAA/C,GACPpC,EAAcoC,EAAOpC,YACrB,IAAIoF,EAAQ5W,KAAH6W,MAQT,OAAOC,GAAOF,MAAM,CAACA,QAAOG,UAAW,CAACzf,QAASqB,EAAS,QAE5Dqe,aAAQ,SAAAxc,GACN,OAAOyc,aACL,kBAAOzc,EAAOkL,KAAKpR,MAA+C,IAAvCkG,EAAOkL,KAAKpR,KAAKe,mBAC5C6hB,a9DrBD,SAAuB1F,EAAala,GACzC,MAAO,CACL5E,KAAMkE,EACN4a,cACAla,W8DiBO6f,CAAa3F,EAAa7Y,EAAS,KACtCrC,aACE4gB,a9DDD,CACLxkB,KAAMqE,EACN8c,Q8DDsBrZ,IAChB0c,aAAG7V,aAAK,kBAOZ+V,GAAmB,SAAAZ,GACvB,IAAIlf,EACJ,OAAOkf,EAAQC,OAAO7f,GAAe8f,KACnCC,aAAS,SAAA/C,GACPtc,EAAUsc,EAAOtc,QACjB,IAAI+f,EAAWrX,KAAHsX,MAOZ,OAAOR,GAAOS,OAAO,CACnBF,SAAUA,EACVN,UAAW,CACTxhB,MAAOkP,QAAOmP,EAAOpC,YAAa,CAAC,QAAS,aAC5Cla,QAASsc,EAAOtc,aAItB6E,aAAI,SAAA3B,GAAM,OAAInG,aAAK7E,IAAGiG,SAAS,CAACpB,KAAMiD,OACtC0f,aAAQ,SAAAxc,GAAM,OAAIlE,aAChB4gB,a9D5CG,CACLxkB,KAAMmE,I8D4CJqgB,aAAG7V,aAAK,iBAKRmW,GAAoB,SAAAhB,GAAO,OAC/BA,EAAQC,OAAOxf,GAAiByf,KAE9BC,aAAS,SAAA/C,GACP,IAAIgD,EAAQ5W,KAAHyX,MAST,OAAOX,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAACzf,QAASsc,EAAO9X,aAEjEK,aAAI,SAAA3B,GAAM,M9DhCL,CACL9H,KAAMwE,EACNtE,gB8D8BiC4H,OAG/Bkd,GAAmB,SAAAlB,GACvB,IAAIlf,EACJ,OAAOkf,EAAQC,OAAOtf,GAAgBuf,KAEpCC,aAAS,SAAA/C,GACPtc,EAAUsc,EAAOtc,QACjB,IAAIsf,EAAQ5W,KAAH2X,MAmBT,OAAOb,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAACzf,QAASA,OAE1D6E,aAAI,SAAA3B,GAAM,O9DjDqBoS,E8DiDCpS,EAAOkL,KAAKkS,gB9DhDvC,CACLllB,KAAM0E,EACNwV,SAHG,IAA4BA,M+D7D7BiL,GAAiB,SAAArB,GAAO,OAC5BA,EAAQC,OAAO3jB,GAAa4jB,KAC1BC,aAAS,SAAA/C,GAAM,OACbvf,aAAK3E,IAAGooB,KAAKlE,EAAOvgB,OAAQugB,EAAOtgB,UAErC6I,aAAI,SAAA4X,GAAO,OnEDR,SAAuBA,GAC5B,MAAO,CACLrhB,KAAMK,EACNghB,WmEFegE,CAAahE,EAAQK,KAAK,GAAGxS,UAG1CoW,GAAiB,SAAAxB,GAAO,OAC5BA,EAAQC,OAAOzjB,GAAa0jB,KAC1BC,aAAS,SAAA/C,GAAM,OACbvf,aAAK3E,IAAGuoB,KAAKrE,EAAOvgB,OAAQugB,EAAOtgB,UAErC6I,aAAI,SAAA4X,GAAO,OnEMR,SAAqBA,GAC1B,MAAO,CACLrhB,KAAMO,EACN8gB,WmETemE,CAAWnE,EAAQK,KAAK,GAAGxS,o+DCY9C,IAAMuW,GAA0B,SAAA3B,GAC9B,IAAInZ,EACAqE,EACApO,EACA4O,EACJ,OAAOsU,EAAQC,OAAO5N,IAAwB6N,KAC5CC,aAAS,SAAA/C,GACPvW,EAAUuW,EAAOvW,QACjB/J,EAAQsgB,EAAOtgB,MAEf,IAAIsjB,EAAQ5W,KAAHoY,MAMT,OAAOtB,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAAC1Z,QAASA,OAG1DsZ,aAAS,SAAAnc,GACP,IAAIoc,EAAQ5W,KAAHqY,MAOT,OAAOvB,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAAC1Z,QAASA,EAASib,YAAa9d,EAAOkL,KAAKxG,QAAQoZ,iBAEpG3B,aAAS,SAAAnc,GAGP,OAFA0H,EAAQ1H,EAAOkL,KAAK6S,kBAAkBnQ,QACtC1G,EAAYD,GAAUtQ,KAAKC,MAAM8Q,IAC1B7N,aAAK5E,IAAG+oB,eAAenb,EAASqE,EAAWpO,MAEpD6I,aAAI,SAAA3B,GAAM,O7ClCP,SAAiC6C,EAAS6E,GAC/C,MAAO,CACLxP,KAAMkW,GACNvL,UACA6E,S6C8BcuW,CAAuBpb,EAAS6E,OAI5CwW,GAAgB,SAAAlC,GACpB,IAAInZ,EACA/J,EACAwN,EACJ,OAAO0V,EAAQC,OAAO3N,IAAY4N,KAChCC,aAAS,SAAA/C,GACPvW,EAAUuW,EAAOvW,QACjB/J,EAAQsgB,EAAOtgB,MACfwN,EAAQ8S,EAAO9S,MACf,IAAI8V,EAAQ5W,KAAH2Y,MAOT,OAAO7B,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAAC1Z,QAASA,EAASyD,MAAOA,OAE1E6V,aAAS,SAAAnc,GACP,OAAOnG,aAAK7E,IAAG+a,UAAUlN,EAASyD,EAAOtG,EAAOkL,KAAKkT,gBAAgBzY,YAAa3F,EAAOkL,KAAKkT,gBAAgBvQ,UAAW/U,MAE3H6I,aAAI,SAAA3B,GAAM,O7C1CP,SAAsB6C,EAASyD,GACpC,MAAO,CACLpO,KAAMqW,GACN1L,UACAyD,S6CsCc+X,CAAYxb,EAASyD,OAIjCgY,GAAyB,SAAAtC,GAC7B,IAAInZ,EACAyD,EACJ,OAAO0V,EAAQC,OAAOzN,IAAsB0N,KAC1CC,aAAS,SAAA/C,GAGP,OAFAvW,EAAUuW,EAAOvW,QACjByD,EAAQ8S,EAAO9S,MACRzM,aAAK5E,IAAGgb,mBAAmBpN,EAASyD,EAAO8S,EAAOtgB,UAE3D6I,aAAI,SAAA3B,GAAM,O7C1BP,SAAwB6C,EAASyD,GACtC,MAAO,CACLpO,KAAMuW,GACN5L,UACAyD,S6CsBciY,CAAc1b,EAASyD,OAInCkY,GAAmB,SAAAxC,GACvB,IAAInZ,EACAyD,EACAkL,EACA1Y,EACJ,OAAOkjB,EAAQC,OAAOvN,IAAewN,KACnCC,aAAS,SAAA/C,GAKP,OAJAvW,EAAUuW,EAAOvW,QACjByD,EAAQ8S,EAAO7H,UACfC,EAAkB4H,EAAO5H,gBACzB1Y,EAAQsgB,EAAOtgB,MACRe,aAAK9E,IAAGuc,aAAazO,EAASyD,EAAOkL,EAAiB4H,EAAOtgB,UAEtEqjB,aAAS,SAAAnc,GACP,OAAOnG,aAAK1E,IAAE4B,GAAG8L,GAAS6E,MAAMpB,MAElC6V,aAAS,SAAAnc,GACP,OAAOnG,aAAKzE,IAAE2B,GAAGiJ,GAAQye,wBAE3B9c,aAAI,SAAA3B,GAAM,O7C5DP,SAAwB6C,EAAS0O,EAAWC,EAAiB4J,EAAQC,GAC1E,MAAO,CACLnjB,KAAMyW,GACN9L,UACA0O,YACAC,kBACA4J,SACAC,a6CqDcqD,CAAc7b,EAASyD,EAAOkL,EAAiBxR,EAAQlH,EAAMe,UAIzE8kB,GAAqB,SAAA3C,GACzB,IAAInZ,EACAyD,EACJ,OAAO0V,EAAQC,OAAOrN,IAAiBsN,KACrC0C,aAAU,SAAAxF,GACRvW,EAAUuW,EAAOxR,eACjBtB,EAAQ8S,EAAO9S,MACf,IAAI8V,EAAQ5W,KAAHqZ,MAUT,OAAOvC,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAAC1Z,QAASA,EAASyD,MAAOA,OAG1E3E,aAAI,SAAA3B,GAAM,O7ChDP,SAA8B4H,EAAgBtB,EAAOtG,GAC1D,MAAO,CACL9H,KAAM2W,GACNjH,iBACAtB,QACAtG,U6C4CE8e,CAAoBjc,EAASyD,EAAOtG,EAAOkL,KAAKkG,oBAKhD2N,GAAyB,SAAA/C,GAC7B,IAAInZ,EAAS/I,EAAMyD,EACnB,OAAOye,EAAQC,OAAO/M,IAAsBgN,KAC1CC,aAAS,SAAA/C,GACPvW,EAAUuW,EAAOxR,eACjB9N,EAAOsf,EAAOtf,KACdyD,EAAQ6b,EAAO7b,MACf,IAAI6e,EAAQ5W,KAAHwZ,MAeT,OAAO1C,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAAC1Z,QAASA,EAAS/I,KAAMA,OAGzE6H,aAAI,SAAA3B,GAAM,O7C7DP,SAAkC4H,EAAgB9N,EAAMkG,EAAQzC,GACrE,MAAO,CACLrF,KAAMiX,GACNvH,iBACA9N,OACAkG,SACAzC,S6CuDc0hB,CAAwBpc,EAAS/I,EAAMkG,EAAOkL,KAAKgU,4BAA6B3hB,OAI5F4hB,GAAsB,SAAAnD,GAC1B,IAAInZ,EAASyD,EAAOxN,EAAOyE,EAC3B,OAAOye,EAAQC,OAAOnN,IAAkBoN,KACtCC,aAAS,SAAA/C,GAKP,OAJAvW,EAAUuW,EAAOxR,eACjBtB,EAAQ8S,EAAO9S,MACfxN,EAAQsgB,EAAOtgB,MACfyE,EAAQ6b,EAAO7b,MACR1D,aAAK9E,IAAGud,gBAAgBzP,EAASyD,EAAOxN,MAEjD6I,aAAI,SAAA3B,GAAM,O7CvDP,SAA4B4H,EAAgBtB,EAAOzN,EAAQ0E,GAChE,MAAO,CACLrF,KAAM6W,GACNnH,iBACAtB,QACAzN,SACA0E,S6CkDE6hB,CAAkBvc,EAASyD,EAAOtG,EAAQzC,OAK1C8hB,GAAiB,SAAArD,GACrB,IAAInZ,EACAyD,EACAxN,EACAyE,EACJ,OAAOye,EAAQC,OAAOjN,IAAakN,KACjCC,aAAS,SAAA/C,GAKP,OAJAvW,EAAUuW,EAAOxR,eACjBtB,EAAQ8S,EAAO9S,MACfxN,EAAQsgB,EAAOtgB,MACfyE,EAAQ6b,EAAO7b,MACR1D,aAAK7E,IAAGyd,WAAW5P,EAASyD,EAAOxN,MAE5C6I,aAAI,SAAA3B,GAAM,O7CtDP,SAAuB4H,EAAgBtB,EAAOzN,EAAQ6Z,EAASnV,GACpE,MAAO,CACLrF,KAAM+W,GACNrH,iBACAtB,QACAzN,SACA6Z,UACAnV,S6CgDE+hB,CAAazc,EAASyD,EAAOtG,EAAQlH,EAAMe,KAAM0D,OAKjDgiB,GAAiB,SAAAvD,GACrB,IAAIpU,EAAgB2J,EAAW/X,EAAOsZ,EAAY6G,EAAW7gB,EAAOia,EAAMC,EAAMC,EAAQ/a,EACxF,OAAO8jB,EAAQC,OAAO7M,IAAa8M,KACjCC,aAAS,SAAA/C,GACPxR,EAAiBwR,EAAOxR,eACxB2J,EAAY6H,EAAO7H,UACnB/X,EAAQuL,SAASqU,EAAO5f,OACxBsZ,EAAasG,EAAOtG,WACpBG,EAASmG,EAAOnG,OAChBna,EAAQsgB,EAAOtgB,MACfia,EAAOqG,EAAOrG,KACdC,EAAOoG,EAAOpG,KACd9a,EAAOkhB,EAAOvG,eACd,IAAIuJ,EAAQ5W,KAAHga,MAIT,OAAOlD,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAACzf,QAAShE,EAAMe,KAAMhB,OAAQW,OAG9E2iB,aAAS,SAAAnc,GACP,MAAgB,WAAT9H,EACH2B,aAAK9E,IAAG0qB,WAAW7X,EAAgB2J,EAAW/X,EAAOsZ,EAAY9S,EAAOkL,KAAKwU,cAAe5mB,IAC5Fe,aAAK7E,IAAGyqB,WAAW7X,EAAgB2J,EAAW/X,EAAOsZ,EAAY9S,EAAOkL,KAAKwU,cAAe5mB,MAElGqjB,aAAS,SAAAnc,GACP2Z,EAAY3Z,EACZ,IAAI6c,EAAWrX,KAAHma,MAOZ,OAAOrD,GAAOS,OAAO,CACnBF,SAAUA,EACVN,UAAW,CACT3U,eAAgBA,EAChB2J,UAAWA,EACX1Y,OAAQW,EACRuZ,KAAMA,EACNC,KAAMA,EACNC,OAAQlO,SAASkO,GACjBsI,MAAOziB,EAAMe,KACb3B,KAAMA,OAIZyJ,aAAI,SAAA3B,GAAM,OC1QiB0Z,ED2QX,CAAC9R,iBAAgB2J,YAAWrZ,OAAMsB,QAAOwZ,OAAMuI,MAAOziB,EAAMe,KAAM8f,YAAW5G,OAAME,UC1Q9F,CACL/a,KAAM0gB,GACNc,eAHG,IAAwBA,MDgRzBkG,GAAiB,SAAA5D,GACrB,IAAIpU,EAAgB2J,EAAWwB,EAAMC,EAAMla,EAC3C,OAAOkjB,EAAQC,OAAO5M,IAAa6M,KACjCC,aAAS,SAAA/C,GAMP,OALAxR,EAAiBwR,EAAOxR,eACxB2J,EAAY6H,EAAO7H,UACnBwB,EAAOqG,EAAOrG,KACdC,EAAOoG,EAAOpG,KACdla,EAAQsgB,EAAOtgB,MACkB,WAA1BsgB,EAAOvG,eACVhZ,aAAK9E,IAAG8qB,WAAWjY,EAAgB2J,EAAWwB,EAAMC,EAAMoG,EAAOtgB,QACjEe,aAAK7E,IAAG6qB,WAAWjY,EAAgB2J,EAAWwB,EAAMC,EAAMoG,EAAOtgB,UAEvE6I,aAAI,SAAA3B,GAAM,OCtRgB0Z,EDuRX,CAAC9R,iBAAgB2J,YAAWgK,MAAOziB,EAAMe,KAAM8f,eAbdA,EAayB3G,QCtRpE,CACL9a,KAAM2gB,GACNa,eAHG,IAAuBA,MD4RxBoG,GAAiB,SAAA9D,GACrB,IAAIpU,EAAgB2J,EAAsBzY,EAC1C,OAAOkjB,EAAQC,OAAO3M,IAAa4M,KACjCva,aAAI,SAAAyX,GAIF,OAHAxR,EAAiBwR,EAAOxR,eACxB2J,EAAY6H,EAAO7H,UACnBzY,EAAQsgB,EAAOtgB,MACkB,WAA1BsgB,EAAOvG,eACVhZ,aAAK9E,IAAGgrB,aAAanY,EAAgB2J,EAAW6H,EAAOtgB,QACvDe,aAAK7E,IAAG+qB,aAAanY,EAAgB2J,EAAW6H,EAAOtgB,UAoB7D6I,aAAI,SAAA3B,GAAM,OClTe0Z,EDmTX,CAAC9R,iBAAgB2J,YAAWgK,MAAOziB,EAAMe,KAAM8f,eA7BhCA,GCrRxB,CACLzhB,KAAM4gB,GACNY,eAHG,IAAsBA,iBCRdsG,gBLSqB,SAAAhE,GAAO,OACzCA,EAAQC,OAAO9jB,MAAoB+jB,KAEjCC,aAAS,SAAA/C,GAAM,OAAIkD,GAAOF,MAAM,CAACA,MAAOP,OACxCla,aAAI,SAAA3B,GAAM,OAAIhI,YAAsBgI,OCmGzB,SAACgc,EAASiE,GAAV,OAAoBC,aACjCnE,GAAYC,GACZgB,GAAkBhB,GAClBY,GAAiBZ,GACjBkB,GAAiBlB,KCtGJ,SAACA,EAASiE,GAAV,OAAoBC,aACjC7C,GAAerB,GACfwB,GAAexB,KIqQF,SAACA,EAASiE,GAAV,OAAoBC,aAzPX,SAAAlE,GACtB,IAAIze,EACJ,OAAOye,EAAQC,OAAOkE,MAAcjE,KAClCC,aAAS,SAAA/C,GAEP,OADA7b,EAAQ6b,EAAO7b,MACR+e,GAAOF,MAAM,CAACA,MAAOhD,EAAOgD,UAGrCza,aAAI,SAAA3B,GAAM,OAAIogB,YAAiB7iB,EAAOyC,EAAOkL,KAAKmV,uBAkPpDC,CAAgBtE,GA9OK,SAAAA,GAAO,OAC5BA,EAAQC,OAAOsE,MAAiBrE,KAC9BC,aAAS,SAAA/C,GAAM,MACa,WAA1BA,EAAOvG,eACHhZ,aAAK9E,IAAGyrB,eAAepH,EAAOqH,QAAQxd,KAAMmW,EAAOqH,QAAQC,eAAgBtH,EAAOqH,QAAQE,UAAWvH,EAAOtgB,QAC5Ge,aAAK7E,IAAGwrB,eAAepH,EAAOqH,QAAQxd,KAAMmW,EAAOqH,QAAQC,eAAgBtH,EAAOqH,QAAQE,UAAWvH,EAAOtgB,UAElHqjB,aAAS,SAAAnc,GAAM,OAAIlE,aACjB4gB,aAAG7V,aAAK,eAuOZ2Z,CAAexE,GAnOI,SAAAA,GACnB,IAAInJ,EAAgB+N,EACpB,OAAO5E,EAAQC,OAAO4E,MAAe3E,KACnCC,aAAS,SAAA/C,GAEP,OADAvG,EAAiBuG,EAAOvG,eACS,WAA1BuG,EAAOvG,eACVhZ,aAAK9E,IAAG+rB,YAAY1H,EAAOxR,eAAgB7C,SAASqU,EAAO5f,MAAO,IAAK4f,EAAOtgB,QAC9Ee,aAAK7E,IAAG+rB,gBAAgB3H,EAAOxR,eAAgB7C,SAASqU,EAAO5f,MAAO,IAAK4f,EAAOtgB,UAExFqjB,aAAS,SAAAnc,GAEP,OADA4gB,EAAc5gB,EACPnG,aAAK3E,IAAGwF,kBAEjByhB,aAAS,SAAAnc,GACP,OAAwC,IAApC4gB,EAAYhH,KAAK,GAAGxS,KAAK4Z,OACpBtE,aAAG7V,aAAK,SAER6V,aAAGuE,YAAcpO,EAAgB+N,EAAYhH,KAAK,GAAGxS,KAAMpH,OAmNxEuD,CAAayY,GA7MQ,SAAAA,GACrB,IAAInJ,EACJ,OAAOmJ,EAAQC,OAAOiF,MAAiBhF,KACrCC,aAAS,SAAA/C,GAEP,OADAvG,EAAiBuG,EAAOvG,eACS,WAA1BuG,EAAOvG,eACVhZ,aAAK9E,IAAGosB,cAAc/H,EAAOxR,eAAgB7C,SAASqU,EAAO5f,MAAO,IAAK4f,EAAOtgB,QAChFe,aAAK7E,IAAGosB,kBAAkBhI,EAAOxR,eAAgB7C,SAASqU,EAAO5f,MAAO,IAAK4f,EAAOtgB,UAE1F6I,aAAI,SAAA3B,GAAM,OAAIqhB,YAAgBxO,EAAgB7S,EAAO4Z,KAAK,GAAGxS,SAqM/D5D,CAAewY,GAjMS,SAAAA,GACxB,IAAIpU,EAAgB0Z,EACpB,OAAOtF,EAAQC,OAAOsF,MAAqBrF,KACzCC,aAAS,SAAA/C,GAEP,OADAxR,EAAiBwR,EAAOxR,eACjB/N,aAAK5E,IAAGusB,YAAYpI,EAAOxR,eAAgBwR,EAAOtgB,UAE3DqjB,aAAS,SAAAnc,GAEP,OADAshB,EAActhB,EACPnG,aAAK1E,IAAE4B,GAAG6Q,GAAgBrK,WAEnC4e,aAAS,SAAA5e,GACP,OAAwC,IAApC+jB,EAAY1H,KAAK,GAAGxS,KAAK4Z,OACpBtE,aAAG7V,aAAK,SACe,IAArBtJ,EAAM6B,WACRsd,aAAG7V,aAAK,aAER4a,QAiLbhe,CAAkBuY,GAzFM,SAAAA,GACxB,OAAOA,EAAQC,OAAOyF,MAAqBxF,KACzCC,aAAS,SAAA/C,GACP,OAAOvf,aAAK5E,IAAG0sB,YAAYvI,EAAOxR,eAAgBwR,EAAOtgB,UAE3DqjB,aAAS,SAAAnc,GACP,OAAmC,IAA/BA,EAAO4Z,KAAK,GAAGxS,KAAKwa,OACf9lB,aACL4gB,aAAG7V,aAAK,YAGH4a,QA+EblZ,CAAkByT,GAzEG,SAAAA,GACrB,IAAIpU,EAAgB9O,EACpB,OAAOkjB,EAAQC,OAAO4F,MAAiB3F,KACrC0C,aAAU,SAAAxF,GACRxR,EAAiBwR,EAAOxR,eACxB9O,EAAQsgB,EAAOtgB,MACf,IAAIsjB,EAAQ5W,KAAHsc,MAMT,OAAOxF,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAAC1Z,QAAS+E,OAE1DuU,aAAS,SAAAnc,GACP,OAA4C,IAArCA,EAAOkL,KAAKxG,QAAQqd,aACvBloB,aAAK9E,IAAGitB,eAAepa,EAAgB9O,IACvCe,aAAK7E,IAAGgtB,eAAepa,EAAgB9O,MAE7C6I,aAAI,SAAA3B,GAAM,OAAIyI,YAAiBb,MAuDjCc,CAAesT,GAlJY,SAAAA,GAC3B,IAAItU,EACA5O,EACA8O,EACAD,EACJ,OAAOqU,EAAQC,OAAOgG,MAAyB/F,KAC7CC,aAAS,SAAA/C,GACP1R,EAAQ/Q,KAAKurB,UAAU9I,EAAO1R,OAC9B5O,EAAQsgB,EAAOtgB,MACf8O,EAAiBwR,EAAOxR,eACxBD,EAAWyR,EAAO+I,aAClB,IAAItF,EAAWrX,KAAH4c,MAOZ,OAAO9F,GAAOS,OAAO,CACnBF,SAAUA,EACVN,UAAW,CACT1Z,QAAS+E,EACTD,SAAUA,EACVgG,UAAW7U,EAAMe,KACjB+T,QAASlG,OAIfyU,aAAS,SAAA/C,GACP,OAAOvf,aAAK5E,IAAGotB,YAAYza,EAAgBD,EAAU7O,MAEvD6I,aAAI,SAAA3B,GAAM,OACRsiB,YAAwB5a,EAAO5O,EAAMe,KAAM+N,EAAgB5H,EAAO4Z,KAAK,GAAGxS,KAAKyG,UAAUzO,WAA9B1F,KAAA6oB,IAA4C,GAAM,QAmHjH9a,CAAqBuU,GA7KH,SAAAA,GAClB,IAAIjO,EACAlL,EACJ,OAAOmZ,EAAQC,OAAOuG,MAAetG,KACnCC,aAAS,SAAA/C,GACPvW,EAAUuW,EAAOxR,eACjBmG,EAAcpX,KAAKurB,UAAU9I,EAAOrL,YAAYvG,UAChD,IAAIqV,EAAWrX,KAAHid,MAOZ,OAAOnG,GAAOS,OAAO,CACnBF,SAAUA,EACVN,UAAW,CACTxhB,MAAOgT,EACPlL,QAASuW,EAAOxR,oBAItBjG,aAAI,SAAA3B,GAAM,OAAI0iB,YAAY3U,EAAalL,EAAS7C,EAAOkL,KAAKyX,gBAwJ9D3V,CAAYgP,GAhHmB,SAAAA,GAC/B,IAAInZ,EACJ,OAAOmZ,EAAQC,OAAO2G,MAAyB1G,KAC7C0C,aAAU,SAAAxF,GACRvW,EAAUuW,EAAOvW,QACjB,IAAIuZ,EAAQ5W,KAAHqd,MAQT,OAAOvG,GAAOF,MAAM,CAACA,MAAOA,EAAOG,UAAW,CAAC1Z,QAASA,OAE1DlB,aAAI,SAAA3B,GAAM,OAAI8iB,YAA0BjgB,EAAS7C,EAAOkL,KAAK6X,4BAkG/DC,CAAyBhH,GAtDC,SAAAA,GAC1B,OAAOA,EAAQC,OAAOgH,MAAuB/G,KAC3CC,aAAS,SAAA/C,GACP,OAAOvf,aAAK5E,IAAGiuB,cAAc9J,EAAOxR,eAAgBwR,EAAOtgB,UAE7DqjB,aAAS,SAAAnc,GAAM,OAAIlE,aACjB4gB,aAAG7V,aAAK,kBAiDZ6I,CAAoBsM,GA5CI,SAAAA,GAAO,OAC/BA,EAAQC,OAAOkH,MAAqBjH,KAClCC,aAAS,SAAA/C,GACP,OAAOvf,aAAK5E,IAAGmuB,YAAYhK,EAAOxR,eAAgBwR,EAAOtgB,UAE3DqjB,aAAS,SAAAnc,GACP,OAAOlE,aACL4gB,aAAG7V,aAAK,cAsCdiK,CAAkBkL,GAjCK,SAAAA,GACvB,OAAOA,EAAQC,OAAOoH,MAAoBnH,KACxCC,aAAS,SAAA/C,GACP,OAAOvf,aAAK5E,IAAGquB,SAASlK,EAAOxR,eAAgBwR,EAAOtgB,UAExDqjB,aAAS,SAAAnc,GACP,OAA2C,IAAvCA,EAAO4Z,KAAK,GAAGxS,KAAKmc,IAAInkB,WACnBtD,aACL4gB,aAAG7V,aAAK,eAEsC,IAAvC7G,EAAO4Z,KAAK,GAAGxS,KAAKmc,IAAInkB,WAC1BtD,aACL4gB,aAAG7V,aAAK,aAGH4a,QAmBbvP,CAAiB8J,KH8BJ,SAACA,EAASiE,GAAV,OAAoBC,aACjCvC,GAAwB3B,GACxBkC,GAAclC,GACdsC,GAAuBtC,GACvBwC,GAAiBxC,GACjB2C,GAAmB3C,GACnB+C,GAAuB/C,GACvBmD,GAAoBnD,GACpBqD,GAAerD,GACfuD,GAAevD,GACf4D,GAAe5D,GACf8D,GAAe9D,MIzUJwH,GAAUC,OAGjBC,GAAkBC,aAAiBH,IAkBzC,IAGevD,GAjBf,WACE,IAAM2D,EAAiBC,eAEjB5D,EAAQ6D,uBACZC,GACAC,mBACEC,2BAAgBP,GAAiBE,KAKrC,OADAA,EAAeM,IAAIC,IACZlE,EAGKmE,cC/Bd1vB,EAAAC,EAAAC,EAAA,2BAAA0nB,KAWO,IAAMA,GAAS,IAAI+H,KAAa,CACrCC,IAAK,mCAGPC,IAASC,OACNxrB,EAAAC,EAAAC,cAACurB,EAAA,EAAD,CAAUxE,MAAOA,IAEhBjnB,EAAAC,EAAAC,cAACwrB,GAAA,EAAD,CAAiBlB,QAASA,IACxBxqB,EAAAC,EAAAC,cAACyrB,GAAD,QAGJC,SAASC,eAAe,ShBFX,WACb,GAA6C,kBAAmB7M,UAAW,CAGzE,GADkB,IAAI8M,IAAIC,GAAwB1uB,OAAO2M,UAC3CgiB,SAAW3uB,OAAO2M,SAASgiB,OAIvC,OAGF3uB,OAAO4uB,iBAAiB,OAAQ,WAC9B,IAAMlN,EAAK,GAAAjc,OAAMipB,GAAN,sBAENrN,GAwCX,SAAiCK,GAE/BmN,MAAMnN,GACHhY,KAAK,SAAAolB,GAGkB,MAApBA,EAAShS,SACuD,IAAhEgS,EAASC,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtN,UAAUC,cAAcsN,MAAMxlB,KAAK,SAAAmY,GACjCA,EAAasN,aAAazlB,KAAK,WAC7B1J,OAAO2M,SAASyiB,aAKpB3N,GAAgBC,KAGnBS,MAAM,WACLxS,QAAQC,IACN,mEAzDAyf,CAAwB3N,GAHxBD,GAAgBC,MgBZxB4N,oCCxBAjxB,EAAAC,EAAAC,EAAA,sBAAA2rB,IAAA7rB,EAAAC,EAAAC,EAAA,sBAAAgxB,IAAAlxB,EAAAC,EAAAC,EAAA,sBAAAisB,IAAAnsB,EAAAC,EAAAC,EAAA,sBAAAssB,IAAAxsB,EAAAC,EAAAC,EAAA,sBAAA8lB,IAAAhmB,EAAAC,EAAAC,EAAA,sBAAAmmB,IAAArmB,EAAAC,EAAAC,EAAA,sBAAA2sB,IAAA7sB,EAAAC,EAAAC,EAAA,sBAAAitB,IAAAntB,EAAAC,EAAAC,EAAA,sBAAAqmB,IAAAvmB,EAAAC,EAAAC,EAAA,sBAAA8sB,IAAAhtB,EAAAC,EAAAC,EAAA,sBAAAixB,IAAAnxB,EAAAC,EAAAC,EAAA,sBAAAquB,IAAAvuB,EAAAC,EAAAC,EAAA,sBAAAkxB,IAAApxB,EAAAC,EAAAC,EAAA,sBAAAuuB,IAAAzuB,EAAAC,EAAAC,EAAA,sBAAAmxB,IAAArxB,EAAAC,EAAAC,EAAA,sBAAA4tB,IAAA9tB,EAAAC,EAAAC,EAAA,sBAAAqtB,IAAAvtB,EAAAC,EAAAC,EAAA,sBAAAqlB,IAAAvlB,EAAAC,EAAAC,EAAA,sBAAAoxB,IAAAtxB,EAAAC,EAAAC,EAAA,sBAAAulB,IAAAzlB,EAAAC,EAAAC,EAAA,sBAAAguB,IAAAluB,EAAAC,EAAAC,EAAA,sBAAAomB,IAAAtmB,EAAAC,EAAAC,EAAA,sBAAAurB,IAAAzrB,EAAAC,EAAAC,EAAA,sBAAAilB,IAAAnlB,EAAAC,EAAAC,EAAA,sBAAAyuB,IAAA3uB,EAAAC,EAAAC,EAAA,sBAAAqxB,IAAO,IAAM1F,EAAkB,kBAClBqF,EAAmB,mBACnB/E,EAAgB,gBAChBK,EAAkB,kBAClBxG,EAAiB,iBACjBK,EAAmB,mBACnBwG,EAAsB,sBACtBM,EAAkB,kBAClB5G,EAAoB,oBAIpByG,EAAsB,sBACtBmE,EAAwB,wBACxB5C,EAAwB,wBACxB6C,EAA0B,0BAC1B3C,EAAsB,sBACtB4C,EAAwB,wBAExBvD,EAAgB,gBAChBP,EAA0B,0BAC1BhI,EAAgB,gBAChB+L,EAAwB,wBACxB7L,EAA6B,6BAC7ByI,EAA0B,0BAC1B5H,EAA+B,+BAI/BmF,EAAe,eACftG,EAAoB,oBAEpBwJ,EAAqB,qBACrB4C,EAAuB,wDCjCpCvxB,EAAAC,EAAAC,EAAA,sBAAA4rB,IAAA9rB,EAAAC,EAAAC,EAAA,sBAAAkR,IAAApR,EAAAC,EAAAC,EAAA,sBAAAwrB,IAAA1rB,EAAAC,EAAAC,EAAA,sBAAA2O,IAAA7O,EAAAC,EAAAC,EAAA,sBAAAqsB,IAAAvsB,EAAAC,EAAAC,EAAA,sBAAA4O,IAAA9O,EAAAC,EAAAC,EAAA,sBAAAysB,IAAA3sB,EAAAC,EAAAC,EAAA,sBAAA6O,IAAA/O,EAAAC,EAAAC,EAAA,sBAAA8T,IAAAhU,EAAAC,EAAAC,EAAA,sBAAA6T,IAAA/T,EAAAC,EAAAC,EAAA,sBAAA2T,IAAA7T,EAAAC,EAAAC,EAAA,sBAAAoY,IAAAtY,EAAAC,EAAAC,EAAA,sBAAA6S,IAAA/S,EAAAC,EAAAC,EAAA,sBAAA8tB,IAAAhuB,EAAAC,EAAAC,EAAA,sBAAA0tB,IAAA5tB,EAAAC,EAAAC,EAAA,sBAAA6X,IAAA/X,EAAAC,EAAAC,EAAA,sBAAAkuB,IAAApuB,EAAAC,EAAAC,EAAA,sBAAA8a,IAAAhb,EAAAC,EAAAC,EAAA,sBAAAkc,IAAApc,EAAAC,EAAAC,EAAA,sBAAAsd,IAAA,IAAAgU,EAAAxxB,EAAA,IA6BO,SAAS8rB,EAAgB3N,EAAgB4N,EAAS3nB,GACvD,MAAO,CACLZ,KAAMqoB,IACN1N,iBACA4N,UACA3nB,SAWG,SAASgN,EAAavI,EAAO6e,GAClC,MAAO,CACLlkB,KAAMioB,IACN5iB,QACA6e,SAIG,SAASgE,EAAkB7iB,EAAO+H,GACvC,MAAO,CACLpN,KAAM2hB,IACNtc,QACA+H,YAIG,SAAS/B,EAAcsP,EAAgBjL,EAAgBpO,EAAOV,GACnE,MAAO,CACLZ,KAAM2oB,IACNhO,iBACAjL,iBACApO,QACAV,SAIG,SAASmoB,EAAepO,EAAgB7S,EAAQtF,GACrD,MAAO,CACLxC,KAAMwiB,IACN7H,iBACA7S,SACAtF,gBAIG,SAAS8I,EAAgBqP,EAAgBjL,EAAgBpO,EAAOV,GACrE,MAAO,CACLZ,KAAMgpB,IACNrO,iBACAjL,iBACApO,QACAV,SAIG,SAASuoB,EAAiBxO,EAAgB7S,EAAQtF,GACvD,MAAO,CACLxC,KAAM6iB,IACNlI,iBACA7S,SACAtF,gBAIG,SAAS+I,EAAmBmE,EAAgB9O,GACjD,MAAO,CACLZ,KAAMqpB,IACN3Z,iBACA9O,SAWG,SAAS4P,EAAgBd,EAAgB9O,GAC9C,MAAO,CACLZ,KAAM2pB,IACNja,iBACA9O,SAIG,SAAS2P,EAAkBb,GAChC,MAAO,CACL1P,KAAM+iB,IACNrT,kBAIG,SAASW,EAAmBX,EAAgB9O,GACjD,MAAO,CACLZ,KAAMwpB,IACN9Z,iBACA9O,SAWG,SAASkU,EAAae,EAAanG,EAAgBwU,GACxD,MAAO,CACLlkB,KAAMsqB,IACNzU,cACAnG,kBAIG,SAASH,EAAsBC,EAAOya,EAAcva,EAAgB9O,GACzE,MAAO,CACLZ,KAAM+pB,IACNva,QACAya,eACAva,iBACA9O,SAIG,SAAS4pB,EAAa3U,EAAanG,GACxC,MAAO,CACL1P,KAAM+hB,IACNlM,cACAnG,kBAIG,SAAS0a,EAAyB5a,EAAO+S,EAAkB7S,EAAgB2R,GAChF,MAAO,CACLrhB,KAAMiiB,IACNzS,QACA+S,mBACA7S,iBACA2R,WAIG,SAAS9M,EAAsB5J,GACpC,MAAO,CACL3K,KAAM0qB,IACN/f,WAIG,SAASigB,EAA2BjgB,EAAS7C,GAClD,MAAO,CACL9H,KAAM8iB,IACNnY,UACA7C,UAIG,SAAS0P,EAAqB9H,EAAgB9O,GACnD,MAAO,CACLZ,KAAM+qB,IACNrb,iBACA9O,SAWG,SAASgY,EAAmBlJ,EAAgB9O,GACjD,MAAO,CACLZ,KAAMirB,IACNvb,iBACA9O,SAWG,SAASoZ,EAAkBtK,EAAgB9O,GAChD,MAAO,CACLZ,KAAMmrB,IACNzb,iBACA9O,+BCrOJ,IAAIihB,EAAMoM,EAAQ,KAEZnvB,EAAuB+iB,EAAIqM,SAAS,MAAQvjB,QAE5ChM,EAAmBF,KAAKurB,UAAUnI,EAAIrjB,KAEtC2vB,EAAwBtM,EAAIuM,SAElCC,EAAOC,QAAU,CACfxvB,uBACAH,mBACAwvB,8CCXF,IAAItM,EAAMoM,EAAQ,KAEZhvB,EAA4B4iB,EAAIqM,SAAS,MAAQvjB,QAEjD3L,EAAwBP,KAAKurB,UAAUnI,EAAIrjB,KAE3C+vB,EAA6B1M,EAAIuM,SAEvCC,EAAOC,QAAU,CACfrvB,4BACAD,wBACAuvB,mDCTF,IAAI1M,EAAMoM,EAAQ,KAEZ7uB,EAAyByiB,EAAIqM,SAAS,MAAQvjB,QAE9CxL,EAAqBV,KAAKurB,UAAUnI,EAAIrjB,KAExCgwB,EAA0B3M,EAAIuM,SAEpCC,EAAOC,QAAU,CACflvB,yBACAD,qBACAqvB,gDCbF,IAAI3M,EAAMoM,EAAQ,KAEZ1uB,EAAyBsiB,EAAIqM,SAAS,MAAQvjB,QAE9CrL,EAAqBb,KAAKurB,UAAUnI,EAAIrjB,KAExCiwB,EAA0B5M,EAAIuM,SAEpCC,EAAOC,QAAU,CACf/uB,yBACAD,qBACAmvB,gDCXF,IAAI5M,EAAMoM,EAAQ,KAEZvuB,EAAwBmiB,EAAIqM,SAAS,MAAQvjB,QAE7ClL,EAAoBhB,KAAKurB,UAAUnI,EAAIrjB,KAEvCkwB,EAAyB7M,EAAI8M,iBAEnCN,EAAOC,QAAU,CACf5uB,wBACAD,oBACAivB,4DCXF,IAAAE,EAAApyB,EAAA,KACIqyB,EADJryB,EAAAqB,EAAA+wB,EACWE,KAEID,+ICAXE,EAAa,CACf5tB,MAAO,UACPwC,UAAW,GACXN,WAAY,GACZ2rB,SAAU,GACVC,WAAY,aAEVC,EAAgB,CAClB/tB,MAAO,OACP0C,gBAAiB,UACjBF,UAAW,GACXqrB,SAAU,GACVC,WAAY,YACZE,WAAY,IACZrrB,QAAS,IAELX,cACJ,SAAAA,IAAe,IAAA2B,EAAA,OAAAC,OAAAqqB,EAAA,EAAArqB,CAAAE,KAAA9B,IACb2B,EAAAC,OAAAsqB,EAAA,EAAAtqB,CAAAE,KAAAF,OAAAuqB,EAAA,EAAAvqB,CAAA5B,GAAAiC,KAAAH,QACKI,MAAQ,CACXkqB,SAAS,EACTniB,UAAU,GAEZtI,EAAK0qB,WAAa1qB,EAAK0qB,WAAWlqB,KAAhBP,OAAA0qB,EAAA,EAAA1qB,QAAA0qB,EAAA,EAAA1qB,CAAAD,KANLA,0EAQH6C,GACV1C,KAAKsB,SAALxB,OAAA2qB,EAAA,EAAA3qB,CAAA,GAAgB4C,GAAO1C,KAAKI,MAAMsC,sCAE1B,IAAAlC,EAAAR,KACR,OACE0qB,EAAA5uB,EAAAC,cAAA,OAAKoC,MAAO,CAACmH,OAAQ,QAASxG,MAAO,IAAKF,gBAAiB,UAAW+rB,SAAU,QAASrsB,QAAS,OAAQD,cAAe,SAAUG,WAAY,WAC7IksB,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,YAAYN,MAAO,CAACjC,MAAO,QAASwC,UAAW,KAA7D,cACAgsB,EAAA5uB,EAAAC,cAAA,OAAKoC,MAAO,CAACW,MAAO,IAAKwG,OAAQ,IAAKslB,aAAc,GAAIhsB,gBAAiB,UAAWF,UAAW,KAC7FgsB,EAAA5uB,EAAAC,cAAA,OAAKoC,MAAO,CAACW,MAAO,IAAKwG,OAAQ,IAAKslB,aAAc,IAAK1kB,IAAI,UAAUD,IAAuC,qBAA3BjG,KAAKpE,MAAMe,KAAKkuB,OAAyB7qB,KAAKpE,MAAMe,KAAKkuB,OAAO1D,IAAM,yEAE3JuD,EAAA5uB,EAAAC,cAAA,MAAIoC,MAAO,CAACjC,MAAO,UAAWwC,UAAW,KAAMsB,KAAKpE,MAAMe,KAAK8I,MAC/DilB,EAAA5uB,EAAAC,cAAA,OAAKoC,MAAO,CAACK,WAAY,aAAcE,UAAW,KAChDgsB,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,WAAU8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2B,OAAOiN,OAAO,GAAI+c,EAAY,CAACgB,UAAW,YAA5E,mBAElBJ,EAAA5uB,EAAAC,cAAA,MAAII,QAAS,kBAAMqE,EAAK+pB,WAAW,YAAYpsB,MAAO2B,OAAOiN,OAAO,GAAIkd,EAAe,CAACa,UAAW,YAAnG,mBAEIJ,EAAA5uB,EAAAC,cAAA,WACA2uB,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,YAAW8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,YACnBY,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,UAAS8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,UACjBY,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,QAAO8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,cACfY,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,UAAS8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,gBACjBY,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,aAAY8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,aACpBY,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,SAAQ8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,UAIpBY,EAAA5uB,EAAAC,cAAA,MAAII,QAAS,kBAAMqE,EAAK+pB,WAAW,aAAapsB,MAAO2B,OAAOiN,OAAO,GAAIkd,EAAe,CAACa,UAAW,YAApG,qBAEIJ,EAAA5uB,EAAAC,cAAA,WACA2uB,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,aAAY8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,aACpBY,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,WAAU8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,WAClBY,EAAA5uB,EAAAC,cAAA,KAAG6d,KAAK,YAAW8Q,EAAA5uB,EAAAC,cAAA,MAAI0C,UAAU,aAAaN,MAAO2rB,GAAlC,sBAxCX9lB,IAAMC,WAwDb1I,gBANS,SAAC6E,GACvB,MAAO,CACLzD,KAAMyD,EAAMzD,MAAQ,KAITpB,CAAyB2C,wBC3ExC,IAAI0e,EAAMoM,EAAQ,KAEZtuB,EAAalB,KAAKurB,UAAUnI,EAAIrjB,KAEhCwxB,EAAkBnO,EAAIuM,SAE5BC,EAAOC,QAAU,CACf3uB,aACAqwB,wCCRF,IAAInO,EAAMoM,EAAQ,KAEZruB,EAAUnB,KAAKurB,UAAUnI,EAAIrjB,KAE7ByxB,EAAepO,EAAIuM,SAEzBC,EAAOC,QAAU,CACf1uB,UACAqwB,iPCII7L,EAAS,WAAI8L,GAAa,gGAChC7mB,IAASC,YAAc,+FAEvB,IAEM+V,cACJ,SAAAA,IAAe,IAAAva,EAAA,OAAAC,OAAAorB,EAAA,EAAAprB,CAAAE,KAAAoa,IACbva,EAAAC,OAAAqrB,EAAA,EAAArrB,CAAAE,KAAAF,OAAAsrB,EAAA,EAAAtrB,CAAAsa,GAAAja,KAAAH,QACKI,MAAQ,CACXqI,YAAa,GACbC,UAAW,EACX2iB,SAAS,EACTC,UAAU,EACVzlB,SAAU,CAAC,EAAG,IAEhBhG,EAAKwjB,eAAiBxjB,EAAKwjB,eAAehjB,KAApBP,OAAAyrB,EAAA,EAAAzrB,QAAAyrB,EAAA,EAAAzrB,CAAAD,KACtBA,EAAK2rB,kBAAoB3rB,EAAK2rB,kBAAkBnrB,KAAvBP,OAAAyrB,EAAA,EAAAzrB,QAAAyrB,EAAA,EAAAzrB,CAAAD,KACzBA,EAAK4rB,kBAAoB5rB,EAAK4rB,kBAAkBprB,KAAvBP,OAAAyrB,EAAA,EAAAzrB,QAAAyrB,EAAA,EAAAzrB,CAAAD,KACzBA,EAAK6rB,kBAAoB7rB,EAAK6rB,kBAAkBrrB,KAAvBP,OAAAyrB,EAAA,EAAAzrB,QAAAyrB,EAAA,EAAAzrB,CAAAD,KACzBA,EAAK8rB,qBAAuB9rB,EAAK8rB,qBAAqBtrB,KAA1BP,OAAAyrB,EAAA,EAAAzrB,QAAAyrB,EAAA,EAAAzrB,CAAAD,KAC5BA,EAAK+rB,kBAAoB/rB,EAAK+rB,kBAAkBvrB,KAAvBP,OAAAyrB,EAAA,EAAAzrB,QAAAyrB,EAAA,EAAAzrB,CAAAD,KACzBA,EAAKgsB,iBAAmBhsB,EAAKgsB,iBAAiBxrB,KAAtBP,OAAAyrB,EAAA,EAAAzrB,QAAAyrB,EAAA,EAAAzrB,CAAAD,KAfXA,oFAmBbG,KAAKwrB,oBACLxrB,KAAKpF,mBACLoF,KAAK8rB,MAAQ,iDAGM,IAAAtrB,EAAAR,KACbwE,EAAM,IAAIJ,IAASE,IAAI,CAC3BG,UAAWzE,KAAK0E,aAChBvG,MAAO,uCAET6B,KAAKsB,SAAS,CAACkD,IAAKA,IAWpBtL,OAAO2hB,UAAUkR,YAAYC,mBAVV,SAACC,GAClB,IAAIC,EAAK,IAAI9nB,IAAS+nB,OAAOF,EAAIG,OAAOC,UAAWJ,EAAIG,OAAOE,UAC9D9nB,EAAII,UAAUsnB,GACd1nB,EAAIK,QAAQ,IACZL,EAAI+nB,WAAW,IAAInoB,IAASooB,mBAC5BhoB,EAAIioB,GAAG,QAAS,SAAC1oB,GACfS,EAAII,UAAUb,EAAEQ,QAChB/D,EAAKc,SAAS,CAAC8qB,OAAQroB,EAAEQ,4DAO7BvE,KAAKI,MAAMoE,IAAIY,oDAIfpF,KAAKpE,MAAMhB,mBACXoF,KAAKwrB,gMAIkBzzB,IAAGwF,6BAAtBmL,SAAsCzG,oBACtBlK,IAAGiK,gBAAnBA,SAA6BC,WACjCjC,KAAKsB,SAAS,CACZoH,YACA1G,4LAIkBjH,EAAM2xB,2FAGtBpJ,EAAU,CACZxd,KAAM9F,KAAKI,MAAM0F,KACjByd,eAAgBhnB,KAAK2W,MAAMwZ,EAAOhmB,KAAKimB,UAAY,KACnDhnB,MAAO3F,KAAKI,MAAMuF,MAClBF,KAAMinB,EAAOjnB,KACbI,SAAU7F,KAAKI,MAAMgsB,OACrBxmB,QAAS8mB,EAAO9mB,SAGZgX,EAAM,CACVgQ,KAAMpzB,KAAKurB,UAAUzB,GACrBuJ,MAAO,aAEHjD,IAAKjN,OAAOmQ,IAAIlQ,EAAK,CAACmQ,IAAK,QAAS,SAAChsB,EAAKisB,GAC9C,GAAIjsB,EAEF,MADA8H,QAAQC,IAAI,UACN/H,EAERyiB,EAAYwJ,EAAKC,SAASC,UAC1Bv1B,IAAI+I,YAAJ,eAAAzD,EAAA6C,OAAAqtB,EAAA,EAAArtB,CAAAstB,EAAAtxB,EAAA+E,KAAgB,SAAAwsB,EAAOtsB,EAAKC,GAAZ,OAAAosB,EAAAtxB,EAAAmF,KAAA,SAAAqsB,GAAA,cAAAA,EAAAnsB,KAAAmsB,EAAAlsB,MAAA,UACTL,EADS,CAAAusB,EAAAlsB,KAAA,eAAAksB,EAAAlsB,KAAA,EAENe,EAAKvG,MAAMynB,eAAetoB,EAAM,CAAC+K,KAAMwd,EAAQxd,KAAMyd,eAAgBD,EAAQC,eAAgBC,UAAWA,GAAY,CAAC9mB,KAAMsE,EAAS,KAF9H,wBAAAssB,EAAA9rB,SAAA6rB,EAAArtB,SAAhB,gBAAAwC,EAAAC,GAAA,OAAAxF,EAAA0E,MAAA3B,KAAA4B,YAAA,qJAQe2rB,GAAM,IAAAnqB,EAAApD,KACvBA,KAAKyrB,kBAAkB8B,EAAKC,KAAKC,eACjCztB,KAAK0tB,UAAUH,EAAKC,KAAKC,cAAe,SAAAnC,GAAQ,OAAIloB,EAAK9B,SAAS,CAChEgqB,WACAD,SAAS,MAEXrrB,KAAKsB,SAAS,CAAC+pB,SAAS,8CAGPsC,GAAU,IAAAC,EAAA5tB,KACrB6tB,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACjB,IAAMC,EAAMC,EAAOvxB,KAAKmxB,EAAOhrB,QAC/B+mB,IAAKsE,MAAMC,IAAIH,EAAK,SAACjtB,EAAK8B,GACxB,GAAI9B,EACF8H,QAAQxB,MAAMtG,OADhB,CAIA,IAAIqtB,EAAG,wBAAAzvB,OAA2BkE,EAAO,GAAGwrB,MAC5CT,EAAKtsB,SAAS,CAACqE,MAAOyoB,EAAK/C,SAAS,QAGxCwC,EAAOS,kBAAkBX,qCAGhBY,EAAKC,GACd,IAAMX,EAAS,IAAIC,WACnBD,EAAO/F,iBAAiB,OAAQ,kBAAM0G,EAASX,EAAOhrB,UACtDgrB,EAAOY,cAAcF,6CAGJ7rB,GACjB1C,KAAKsB,SAAS,CAACwE,KAAMpO,IAAK4E,MAAMoG,EAAI4R,OAAOjY,MAAO,wDAG9BqG,GACpBgsB,aAAa1uB,KAAK8rB,OAClB9rB,KAAKsB,SAAS,CAACuE,SAAUnD,EAAI4R,OAAOjY,QACpC2D,KAAK8rB,MAAQzS,WAAWrZ,KAAK6rB,iBApIX,iDAuIA,IAAA8C,EAAA3uB,KACV6F,EAAa7F,KAAKI,MAAlByF,SACRsZ,EAAOyP,eAAe/oB,EAAU,SAAC9E,EAAKgN,EAAM2L,GACtC3Y,GAAO8H,QAAQxB,MAAMtG,GACzB4tB,EAAKvuB,MAAMoE,IAAII,UAAUmJ,EAAK8gB,SAAS,GAAGC,SAASC,aACnDJ,EAAKvuB,MAAMoE,IAAIK,QAAQ,KACvB,IAAIT,IAASY,QACVC,UAAU8I,EAAK8gB,SAAS,GAAGC,SAASC,aACpC7pB,MAAMypB,EAAKvuB,MAAMoE,KACpBmqB,EAAKrtB,SAAS,CAAC8qB,OAAQre,EAAK8gB,SAAS,GAAGC,SAASC,iDAI3C,IAAAC,EAAAhvB,KACR,OACEivB,EAAAnzB,EAAAC,cAAA,WACEkzB,EAAAnzB,EAAAC,cAACmzB,EAAA,EAAD,MACAD,EAAAnzB,EAAAC,cAACozB,EAAA,EAAD,CACEvD,kBAAmB5rB,KAAK4rB,kBACxBN,SAAUtrB,KAAKI,MAAMkrB,SACrBD,QAASrrB,KAAKI,MAAMirB,QACpBvlB,KAAiC,qBAApB9F,KAAKI,MAAM0F,KACpB,EACAvJ,KAAKC,KAAKwD,KAAKI,MAAM0F,KAAO,GAAK9F,KAAKI,MAAMsI,WAChD3C,eAA2C,qBAApB/F,KAAKI,MAAM0F,KAC9B,EACAvJ,KAAKC,KAAKwD,KAAKI,MAAM0F,KAAO9F,KAAKI,MAAM4B,OAAShC,KAAKpE,MAAMyH,QAAQM,gBAAkB,IACzF+nB,kBAAmB1rB,KAAK0rB,kBACxBC,qBAAsB3rB,KAAK2rB,qBAC3BtI,eAAgBrjB,KAAKqjB,eACrB7e,IAAKyqB,EAAAnzB,EAAAC,cAAA,OAAKsJ,GAAG,MAAMlH,MAAO,CAACW,MAAO,IAAKwG,OAAQ,KAAMzB,IAAK,SAAA0B,GAAQypB,EAAKtqB,aAAea,eAnK1EvB,IAAMC,WAwLb1I,gBAdS,SAAC6E,GACvB,MAAO,CACLiD,QAASjD,EAAMiD,QACf1G,KAAMyD,EAAMzD,KAAKA,OAIM,SAACnB,GAC1B,MAAO,CACL6nB,eAAgB,SAACtoB,EAAMuoB,EAAS3nB,GAAhB,OAA0BH,EAAS6nB,YAAetoB,EAAMuoB,EAAS3nB,KACjFf,iBAAkB,kBAAMY,EAASZ,kBAItBW,CAA6C6e,8DCzM5D,IAAAgV,EAAA73B,EAAA,GAAA83B,EAAA93B,EAAAqB,EAAAw2B,GAAAE,EAAA/3B,EAAA,KAAAg4B,EAAAh4B,EAAA,KAAAi4B,EAAAj4B,EAAA,IAAAk4B,EAAAl4B,EAAA,MAAAm4B,EAAAn4B,EAAA,MAAAo4B,EAAAp4B,EAAA,KAEQq4B,EAAaC,IAAbD,SACFE,EAAWC,IAAKC,KA4FPD,QAAKE,QAALF,CA1FK,SAACn0B,GAAU,IAE3BgwB,EASEhwB,EATFgwB,kBACAN,EAQE1vB,EARF0vB,SACAxlB,EAOElK,EAPFkK,KACAC,EAMEnK,EANFmK,eACAslB,EAKEzvB,EALFyvB,QACAK,EAIE9vB,EAJF8vB,kBACAC,EAGE/vB,EAHF+vB,qBACAtI,EAEEznB,EAFFynB,eACA7e,EACE5I,EADF4I,IAEE0rB,EAAgB,SAACn1B,GACnBsoB,EAAetoB,EAAMa,EAAMu0B,KAAKC,kBAChCx0B,EAAMu0B,KAAKE,eAEPC,EACJjB,EAAAvzB,EAAAC,cAAA,WACGsvB,EACIgE,EAAAvzB,EAAAC,cAACyzB,EAAA,EAAD,CAAMz0B,KAAM,YACZs0B,EAAAvzB,EAAAC,cAAA,WACDszB,EAAAvzB,EAAAC,cAACyzB,EAAA,EAAD,CAAMz0B,KAAM,SACZs0B,EAAAvzB,EAAAC,cAAA,OAAK0C,UAAU,mBAAf,YAKA8xB,EAAsB30B,EAAMu0B,KAA5BI,kBACR,OACElB,EAAAvzB,EAAAC,cAAA,WACEszB,EAAAvzB,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,IAAK0Q,aAAc,MAC1CugB,EAAAvzB,EAAAC,cAAA,UAAQ0C,UAAU,cAChB4wB,EAAAvzB,EAAAC,cAAA,MAAI0C,UAAU,cAAd,oBAEF4wB,EAAAvzB,EAAAC,cAAA,OAAKoC,MAAO,CAACG,QAAS,OAAQD,cAAe,SAAUD,WAAY,IAAK6J,YAAa,MACnFonB,EAAAvzB,EAAAC,cAACwzB,EAAA,EAAD,CAAMiB,OAAO,cACXnB,EAAAvzB,EAAAC,cAAC+zB,EAAD,CAAUW,MAAM,QACbF,EAAkB,OAAlBA,CAA0BlB,EAAAvzB,EAAAC,cAACuzB,EAAA,EAAD,CAAOxrB,YAAY,mBAEhDurB,EAAAvzB,EAAAC,cAAC+zB,EAAD,CAAUW,MAAM,SACdpB,EAAAvzB,EAAAC,cAAC0zB,EAAA,EAAD,CACEhqB,KAAK,SACLirB,SAAS,eACTjyB,UAAU,kBACVkyB,gBAAgB,EAGhB1yB,SAAU2tB,GAETN,EACG+D,EAAAvzB,EAAAC,cAAA,OAAKoC,MAAO,CAACW,MAAO,IAAKwG,OAAQ,KAAMW,IAAKqlB,EAAUplB,IAAI,KAC1DoqB,IAGRjB,EAAAvzB,EAAAC,cAAC+zB,EAAD,CAAUW,MAAM,WACbF,EAAkB,UAAlBA,CAA6BlB,EAAAvzB,EAAAC,cAAC6zB,EAAD,CAAUgB,KAAM,EAAG71B,KAAK,WAAW+I,YAAY,sBAE/EurB,EAAAvzB,EAAAC,cAAC+zB,EAAD,CAAUW,MAAM,YACbF,EAAkB,WAAlBA,CAA8BlB,EAAAvzB,EAAAC,cAACuzB,EAAA,EAAD,CAAOxrB,YAAY,mBAAmB7F,SAAU0tB,MAEhFnnB,EACD6qB,EAAAvzB,EAAAC,cAAC+zB,EAAD,CAAUW,MAAM,QACbF,EAAkB,OAAlBA,CAA0BlB,EAAAvzB,EAAAC,cAACuzB,EAAA,EAAD,CAAOxrB,YAAY,MAAM/I,KAAK,SAASkD,SAAUytB,MAE9E2D,EAAAvzB,EAAAC,cAAC+zB,EAAD,CAAUW,MAAM,oBACbF,EAAkB,OAAlBA,CAA0BlB,EAAAvzB,EAAAC,cAAC2zB,EAAA,EAAD,QAE7BL,EAAAvzB,EAAAC,cAAA,OAAKoC,MAAO,CAACO,UAAW,KACtB2wB,EAAAvzB,EAAAC,cAAA,iCAAA4C,OAA4BmH,EAA5B,aAEFupB,EAAAvzB,EAAAC,cAAA,OAAKoC,MAAO,CAACO,UAAW,KACtB2wB,EAAAvzB,EAAAC,cAAA,iCAAA4C,OAA4BoH,EAA5B,iBAEFspB,EAAAvzB,EAAAC,cAAA,OAAKoC,MAAO,CAACO,UAAW,KACtB2wB,EAAAvzB,EAAAC,cAAC4zB,EAAA,EAAD,CAAQ50B,KAAK,OAAOoB,QAAS,kBAAM+zB,EAAc,WAAW/xB,MAAO,CAACC,WAAY,KAAhF,6BAIFixB,EAAAvzB,EAAAC,cAAA,OAAKoC,MAAO,CAACO,UAAW,KACtB2wB,EAAAvzB,EAAAC,cAAC4zB,EAAA,EAAD,CAAQ50B,KAAK,OAAOoB,QAAS,kBAAM+zB,EAAc,eAAe/xB,MAAO,CAACC,WAAY,KAApF","file":"static/js/main.8edd264a.chunk.js","sourcesContent":["import { TokenRegistryABI, TokenRegistryAddress } from '../abi/TokenRegistry'\nimport { ReputationRegistryABI, ReputationRegistryAddress } from '../abi/ReputationRegistry'\nimport { ProjectRegistryABI, ProjectRegistryAddress } from '../abi/ProjectRegistry'\nimport { DistributeTokenABI, DistributeTokenAddress } from '../abi/DistributeToken'\nimport { ProjectABI } from '../abi/Project'\nimport { TaskABI } from '../abi/Task'\nimport { ProjectLibraryABI, ProjectLibraryAddress } from '../abi/ProjectLibrary'\n\nimport Web3 from 'web3'\nimport Eth from 'ethjs'\nimport contract from 'truffle-contract'\n\nlet web3init\nif (typeof web3init !== 'undefined') {\n  web3init = new Web3(window.web3.currentProvider)\n} else {\n  // set the provider you want from Web3.providers\n  web3init = new Web3(window.web3.currentProvider)\n  // web3 = new Web3(new Web3.providers.HttpProvider('http://165.227.184.116:8540'))\n}\n// const Eth = require('ethjs')\n\nexport const web3 = web3init\nexport const eth = web3init.eth\n\n// need to do this for promisified eth.accounts() for sagas\nexport const ethjs = new Eth(window.web3.currentProvider)\n\nconst TR = contract({abi: JSON.parse(TokenRegistryABI)})\nTR.setProvider(window.web3.currentProvider)\nexport const tr = TR.at(TokenRegistryAddress)\n\nconst RR = contract({abi: JSON.parse(ReputationRegistryABI)})\nRR.setProvider(window.web3.currentProvider)\nexport const rr = RR.at(ReputationRegistryAddress)\n\nconst PR = contract({abi: JSON.parse(ProjectRegistryABI)})\nPR.setProvider(window.web3.currentProvider)\nexport const pr = PR.at(ProjectRegistryAddress)\n\nconst DT = contract({abi: JSON.parse(DistributeTokenABI)})\nDT.setProvider(window.web3.currentProvider)\nexport const dt = DT.at(DistributeTokenAddress)\n\nconst PL = contract({abi: JSON.parse(ProjectLibraryABI)})\nPL.setProvider(window.web3.currentProvider)\nexport const pl = PL.at(ProjectLibraryAddress)\n\nexport const P = contract({abi: JSON.parse(ProjectABI)})\nP.setProvider(window.web3.currentProvider)\n\nexport const T = contract({abi: JSON.parse(TaskABI)})\nT.setProvider(window.web3.currentProvider)\n\nexport default {tr, rr, pr, dt, pl, P, T}\n","import { GET_NETWORK_STATUS, NETWORK_STATUS_RECEIVED } from '../constants/NetworkActionTypes'\n\nexport function getNetworkStatus () {\n  return {\n    type: GET_NETWORK_STATUS\n  }\n}\n\nexport function networkStatusReceived (responseDetails) {\n  return {\n    type: NETWORK_STATUS_RECEIVED,\n    responseDetails\n  }\n}\n","export const GET_NETWORK_STATUS = 'GET_NETWORK_STATUS'\nexport const NETWORK_STATUS_RECEIVED = 'NETWORK_STATUS_RECEIVED'\n","export const MINT_TOKENS = 'MINT_TOKENS'\nexport const TOKENS_MINTED = 'TOKENS_MINTED'\nexport const SELL_TOKENS = 'SELL_TOKENS'\nexport const TOKENS_SOLD = 'TOKENS_SOLD'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { web3 } from '../../utilities/blockchain'\nimport { mintTokens } from '../../actions/tokenActions'\n\nconst ButtonMintTokens = (props) => {\n  return (<Button\n    icon='plus-circle-o'\n    color='primary'\n    onClick={() => props.mintTokens(props.tokensToBuy, {value: web3.toWei(Math.ceil(props.ethToSend), 'ether'), from: props.user})}>\n      Buy\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    mintTokens: (amount, txObj) => dispatch(mintTokens(amount, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonMintTokens)\n","import { MINT_TOKENS, TOKENS_MINTED, SELL_TOKENS, TOKENS_SOLD } from '../constants/TokenActionTypes'\n\nexport function mintTokens (amount, txObj) {\n  return {\n    type: MINT_TOKENS,\n    amount,\n    txObj\n  }\n}\n\nexport function tokensMinted (receipt) {\n  return {\n    type: TOKENS_MINTED,\n    receipt\n  }\n}\n\nexport function sellTokens (amount, txObj) {\n  return {\n    type: SELL_TOKENS,\n    amount,\n    txObj\n  }\n}\n\nexport function tokensSold (receipt) {\n  return {\n    type: TOKENS_SOLD,\n    receipt\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { sellTokens } from '../../actions/tokenActions'\n\nconst ButtonSellTokens = (props) => {\n  return (<Button\n    icon='plus-circle-o'\n    color='primary'\n    onClick={() => props.sellTokens(props.tokensToBuy, {from: props.user})}>\n      Sell\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sellTokens: (amount, txObj) => dispatch(sellTokens(amount, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonSellTokens)\n","import React from 'react'\nimport Button from 'antd/lib/button'\nimport Sidebar from './shared/Sidebar'\nimport ButtonMintTokens from '../contractComponents/stage0/MintTokens'\nimport ButtonSellTokens from '../contractComponents/stage0/SellTokens'\nconst ButtonGroup = Button.Group\nexport default ({\n  totalTokenSupply,\n  balance,\n  marketPercentage,\n  ethPool,\n  capitalEquivalent,\n  currentPrice,\n  currentPriceUSD,\n  totalReputationSupply,\n  reputationBalance,\n  ethToSend,\n  ethToRefund,\n  input,\n  user,\n  tokensToBuy,\n  notRegistered,\n  register,\n  openFaucet,\n  faucet,\n  onChange\n}) => {\n  return (\n    <div>\n      <Sidebar />\n      <div style={{marginLeft: 200, flexDirection: 'column', display: 'flex', justifyContent: 'space-between', alignItems: 'space-between'}}>\n        <header className='App-header'>\n          <h3 className='App-title2'>Network Status</h3>\n        </header>\n        <div style={{marginLeft: 20, marginTop: 40, display: 'flex', justifyContent: 'flex-start'}}>\n          <div>\n            <h3>Total Token Supply</h3>\n            <h5>{totalTokenSupply}</h5>\n            <h3>Your Token Balance</h3>\n            <h5>{balance}</h5>\n            <h3>Controlled Market Percentage</h3>\n            <h5>{`${marketPercentage}%`}</h5>\n            <h3>Eth Pool</h3>\n            <h5>{`${ethPool} ETH`}</h5>\n            <h3>Capital Equivalent</h3>\n            <h5>{`$${capitalEquivalent}`}</h5>\n            <h3>Current Token Price</h3>\n            <h5>{`${currentPrice} ETH`}</h5>\n            <h5>{`$${currentPriceUSD}`}</h5>\n          </div>\n          <div style={{marginLeft: 25}}>\n            <h3>Total Reputation Supply</h3>\n            <h5>{totalReputationSupply}</h5>\n            <h3>Your Reputation Balance</h3>\n            <h5>{reputationBalance}</h5>\n          </div>\n        </div>\n        <div style={{display: 'flex', flexDirection: 'row', marginTop: 30}}>\n          <div style={{backgroundColor: '#C7D9D9', padding: 30, width: 250}}>\n            <div>\n              <h3>Tokens:</h3>\n              {input}\n            </div>\n            <div style={{marginTop: 20}}>\n              <h4>{`Cost to Buy: ${ethToSend} ETH`}</h4>\n            </div>\n            <div>\n              <h4>{`Refund Amount: ${ethToRefund} ETH`}</h4>\n            </div>\n            <div style={{marginTop: 20}}>\n              <ButtonGroup>\n                <ButtonMintTokens\n                  user={user}\n                  ethToSend={ethToSend}\n                  tokensToBuy={tokensToBuy}\n                />\n                <ButtonSellTokens\n                  user={user}\n                  tokensToBuy={tokensToBuy}\n                />\n              </ButtonGroup>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const REGISTER_USER = 'REGISTER_USER'\nexport const REGISTERED_USER = 'REGISTERED_USER'\nexport const LOGIN_USER = 'LOGIN_USER'\nexport const LOGGED_IN_USER = 'LOGGED_IN_USER'\nexport const LOGOUT_USER = 'LOGOUT_USER'\nexport const GET_USER_STATUS = 'GET_USER_STATUS'\nexport const USER_STATUS_RECEIVED = 'USER_STATUS_RECEIVED'\nexport const GET_USER_VOTES = 'GET_USER_VOTES'\nexport const USER_VOTES_RECEIVED = 'USER_VOTES_RECEIVED'\n","import {\n  LOGIN_USER,\n  LOGGED_IN_USER,\n  LOGOUT_USER,\n  REGISTER_USER,\n  REGISTERED_USER,\n  GET_USER_STATUS,\n  USER_STATUS_RECEIVED,\n  GET_USER_VOTES,\n  USER_VOTES_RECEIVED\n} from '../constants/UserActionTypes'\n\nexport function registerUser (credentials, account) {\n  return {\n    type: REGISTER_USER,\n    credentials,\n    account\n  }\n}\n\nexport function registeredUser (credentials, account) {\n  return {\n    type: REGISTERED_USER\n  }\n}\n\nexport function loginUser (credentials) {\n  return {\n    type: LOGIN_USER,\n    credentials\n  }\n}\n\nexport function loggedInUser (userObj) {\n  return {\n    type: LOGGED_IN_USER,\n    userObj\n  }\n}\n\nexport function logoutUser () {\n  return {\n    type: LOGOUT_USER\n  }\n}\n\nexport function getUserStatus (userDetails) {\n  return {\n    type: GET_USER_STATUS,\n    payload: userDetails\n  }\n}\n\nexport function userStatusReceived (responseDetails) {\n  return {\n    type: USER_STATUS_RECEIVED,\n    responseDetails\n  }\n}\n\nexport function getUserVotes (account) {\n  return {\n    type: GET_USER_VOTES,\n    account\n  }\n}\n\nexport function userVotesReceived (votes) {\n  return {\n    type: USER_VOTES_RECEIVED,\n    votes\n  }\n}\n","/* global alert */\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport price from 'crypto-price'\nimport { eth, web3, dt } from '../utilities/blockchain'\nimport StatusComponent from '../components/Status'\nimport { getNetworkStatus } from '../actions/networkActions'\nimport { getUserStatus } from '../actions/userActions'\n\nclass Status extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      tokensToBuy: ''\n    }\n    this.getNetworkStatus = this.getNetworkStatus.bind(this)\n    this.getPriceData = this.getPriceData.bind(this)\n  }\n\n  componentWillMount () {\n    if (this.props.user.registering === true) {\n      eth.getAccounts(async (err, accounts) => {\n        if (!err) {\n          if (accounts.length) {\n            // get user token balance\n            this.setState({user: accounts[0]})\n          } else {\n            alert('Please Unlock MetaMask')\n          }\n        }\n      })\n      this.getPriceData()\n    } else {\n      this.getNetworkStatus()\n    }\n  }\n\n  componentWillReceiveProps () {\n    this.getPriceData()\n  }\n\n  async getPriceData () {\n    let ethPrice = await price.getCryptoPrice('USD', 'ETH')\n    let weiBal = (await dt.weiBal()).toNumber()\n    let currentPrice = (await dt.currentPrice()).toNumber()\n    this.setState({\n      ethPrice: ethPrice.price,\n      weiBal,\n      currentPrice: web3.fromWei(currentPrice, 'ether')\n    })\n  }\n\n  getNetworkStatus () {\n    this.props.getNetworkStatus()\n    this.getPriceData()\n    eth.getAccounts(async (err, accounts) => {\n      if (!err) {\n        if (accounts.length) {\n          // get user token balance\n          this.props.getUserStatus(accounts[0])\n          this.setState({user: accounts[0]})\n        } else {\n          alert('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  async onChange (val) {\n    this.setState({tokensToBuy: val})\n    if (val > 0) {\n      try {\n        let ethRequired, refund\n        await dt.weiRequired(val).then(result => {\n          ethRequired = web3.fromWei(result.toNumber(), 'ether')\n        })\n        if (this.props.totalSupply === 0) {\n          refund = ethRequired\n        } else {\n          await dt.currentPrice().then(result => {\n            refund = web3.fromWei((result.toNumber() * val), 'ether')\n          })\n        }\n        this.setState({ethToSend: ethRequired, ethToRefund: refund})\n      } catch (error) {\n        throw new Error(error)\n      }\n    }\n  }\n\n  render () {\n    return (\n      <StatusComponent\n        totalTokenSupply={this.props.network.totalTokens}\n        balance={this.props.user.userTokens}\n        marketPercentage={this.props.user.userTokens\n          ? Math.round(this.props.user.userTokens / this.props.network.totalTokens * 10000) / 100\n          : 0}\n        ethPool={web3.fromWei(this.state.weiBal, 'ether')}\n        capitalEquivalent={this.state.ethPrice\n          ? parseFloat(this.state.ethPrice * web3.fromWei(this.state.weiBal, 'ether')).toFixed(2)\n          : 0}\n        currentPrice={this.state.currentPrice}\n        currentPriceUSD={this.state.currentPrice\n          ? parseFloat(this.state.currentPrice * web3.fromWei(this.state.weiBal, 'ether')).toFixed(5)\n          : 0}\n        totalReputationSupply={this.props.network.totalReputation}\n        reputationBalance={this.props.user.userReputation}\n        ethToSend={typeof this.state.ethToSend === 'undefined'\n          ? 'n/a'\n          : Math.round(this.state.ethToSend * 100000) / 100000}\n        ethToRefund={typeof this.state.ethToRefund === 'undefined'\n          ? 'n/a'\n          : Math.round(this.state.ethToRefund * 100000) / 100000}\n        tokensToBuy={this.state.tokensToBuy}\n        user={this.state.user}\n        input={\n          <input ref={(input) => (this.tokensToBuy = input)}\n            placeholder='Number of Tokens'\n            onChange={(e) => this.onChange(this.tokensToBuy.value)}\n            value={this.state.tokensToBuy}\n            type='number'\n          />}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user || {},\n    network: state.network\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getNetworkStatus: () => dispatch(getNetworkStatus()),\n    getUserStatus: (userAccount) => dispatch(getUserStatus(userAccount))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)\n","import React from 'react'\nimport mapboxgl from 'mapbox-gl'\nmapboxgl.accessToken = 'pk.eyJ1IjoiY29uc2Vuc3lzIiwiYSI6ImNqOHBmY2w0NjBmcmYyd3F1NHNmOXJwMWgifQ.8-GlTlTTUHLL8bJSnK2xIA'\n\nclass Map extends React.Component {\n  constructor () {\n    super()\n    this.state = {}\n  }\n  componentDidMount () {\n    if (this.props.lngLat.length > 0) {\n      const map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v10',\n        interactive: false\n      })\n      map.setCenter([this.props.lngLat[0], this.props.lngLat[1]])\n      map.setZoom(18)\n      this.setState({map: map})\n    }\n  }\n\n  componentWillReceiveProps (np) {\n    if (typeof np.lngLat !== 'undefined' && np.lngLat.length > 0) {\n      this.state.map.setCenter(np.lngLat)\n      if (typeof this.state.marker === 'undefined') {\n        const marker = new mapboxgl.Marker()\n          .setLngLat(np.lngLat)\n          .addTo(this.state.map)\n        this.setState({marker})\n      }\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.state.map !== undefined) {\n      this.state.map.remove()\n    }\n  }\n\n  render () {\n    return this.props.lngLat.length > 0\n      ? <div id='map' style={{width: 300, height: 300}} ref={el => { this.mapContainer = el }} />\n      : <p />\n  }\n}\n\nexport default Map\n","import React from 'react'\nimport Map from './Map'\nexport default ({\n  name,\n  address,\n  photo,\n  summary,\n  location,\n  cost,\n  reputationCost\n}) => {\n  return (\n    <div>\n      <div style={{padding: 10}}>\n        <h3>{name}</h3>\n      </div>\n      <div style={{padding: 10}}>\n        <div style={{wordWrap: 'break-word'}}>Address: <strong>{`${address}`}</strong></div>\n        {/* <div>State: <strong>{`${projectState}`}</strong></div> */}\n        { typeof photo !== 'undefined'\n          ? <img style={{height: 200, width: 200}} src={photo} alt='no project photo' />\n          : null\n        }\n        <div>Summary: {`${summary}`}</div>\n        {<Map lngLat={location} />}\n        {/* <div>Location: <strong>{`${location}`}</strong></div> */}\n        <div>Cost: <strong>{`${cost}`} ETH</strong></div>\n        <div>Reputation Cost: <strong>{`${reputationCost}`}</strong></div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { stakeProject } from '../../actions/projectActions'\n\nconst ButtonStakeProject = (props) => {\n  let style\n  props.type === 'tokens'\n    ? style = {backgroundColor: '#0B1899', color: 'white'}\n    : style = {backgroundColor: '#08734E', color: 'white'}\n  return (<Button\n    style={style}\n    icon='up-circle-o'\n    color='primary'\n    onClick={() => props.stakeProject(props.type, props.address, props.val, {from: props.user})}>\n    {`${props.type}`}\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    stakeProject: (type, address, val, txObj) => dispatch(stakeProject(type, address, val, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonStakeProject)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { unstakeProject } from '../../actions/projectActions'\n\nconst ButtonUnstakeProject = (props) => {\n  let style\n  props.type === 'tokens'\n    ? style = {backgroundColor: '#1FA9FF', color: 'white'}\n    : style = {backgroundColor: '#0BA16D', color: 'white'}\n  return (<Button\n    style={style}\n    icon='down-circle-o'\n    color='primary'\n    onClick={() => props.unstakeProject(props.type, props.address, props.val, {from: props.user})}>\n    {`${props.type}`}\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    unstakeProject: (type, address, val, txObj) => dispatch(unstakeProject(type, address, val, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonUnstakeProject)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { checkStakedStatus } from '../../actions/projectActions'\n\nconst ButtonCheckStaked = (props) => {\n  return (<Button\n    style={{marginTop: 10}}\n    onClick={() => props.checkStakedStatus(props.address, {from: props.user})}>\n      Check Staked\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkStakedStatus: (type, address, val, txObj) => dispatch(checkStakedStatus(type, address, val, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonCheckStaked)\n","import React from 'react'\nimport { Button } from 'antd'\nimport ProjectHeader from '../shared/ProjectHeader'\nimport ButtonStakeProject from '../../contractComponents/stage1/StakeProject'\nimport ButtonUnstakeProject from '../../contractComponents/stage1/UnstakeProject'\nimport ButtonCheckStaked from '../../contractComponents/stage1/CheckStaked'\nconst ButtonGroup = Button.Group\n\nexport default ({\n  name,\n  address,\n  photo,\n  summary,\n  location,\n  cost,\n  tokensLeft,\n  reputationCost,\n  totalReputationStaked,\n  date,\n  stakeInput,\n  user,\n  value,\n  tokens,\n  reputation\n}) => {\n  return (\n    <div style={{backgroundColor: '#DDE4E5', marginTop: 30}}>\n      <ProjectHeader\n        name={name}\n        address={address}\n        photo={photo}\n        summary={summary}\n        location={location}\n        cost={cost}\n        reputationCost={reputationCost}\n      />\n      <div style={{padding: 10, paddingTop: 0}}>\n        <div>{`Tokens Remaining: ${tokensLeft}`}</div>\n        <div>Reputation Remaining: {`${reputationCost - totalReputationStaked}`}</div>\n        <div>Staking Expires: <strong> {typeof date !== 'undefined' ? `${date}` : 'N/A'}</strong></div>\n        <div style={{display: 'flex', flexDirection: 'row', marginTop: 10}}>\n          {stakeInput}\n          <div>\n            <div>\n              <ButtonGroup>\n                <ButtonStakeProject\n                  address={address}\n                  type='tokens'\n                  user={user}\n                  val={value}\n                />\n                <ButtonStakeProject\n                  address={address}\n                  type='reputation'\n                  user={user}\n                  val={value}\n                />\n              </ButtonGroup>\n            </div>\n            <div style={{marginTop: 5}}>\n              <ButtonGroup>\n                <ButtonUnstakeProject\n                  address={address}\n                  type='tokens'\n                  user={user}\n                  val={value}\n                />\n                <ButtonUnstakeProject\n                  address={address}\n                  type='reputation'\n                  user={user}\n                  val={value}\n                />\n              </ButtonGroup>\n            </div>\n          </div>\n        </div>\n        <ButtonCheckStaked\n          address={address}\n          user={user}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport StakeComponent from '../../components/project/1Stake'\nimport { web3 } from '../../utilities/blockchain'\nimport { BigNumber } from 'bignumber.js'\n\nclass StakeProject extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      stake: ''\n    }\n  }\n\n  onChange (val) {\n    try {\n      this.setState({stake: val})\n    } catch (error) {\n      throw new Error(error)\n    }\n  }\n\n  render () {\n    let tokensLeft, currentPrice, nextDeadline\n    if (typeof this.props.project !== `undefined`) {\n      let weiCost = new BigNumber(this.props.project.weiCost.toString())\n      let weiBal = new BigNumber(this.props.project.weiBal.toString())\n      typeof this.props.project.currentPrice === `undefined`\n        ? currentPrice = this.props.currentPrice\n        : currentPrice = this.props.project.currentPrice\n      typeof this.props.project.nextDeadline !== `undefined`\n        ? nextDeadline = new Date(parseInt(this.props.project.nextDeadline))\n        : nextDeadline = 'calculating...'\n      tokensLeft = Math.ceil((weiCost).minus(weiBal).div(currentPrice))\n    } else {\n      tokensLeft = 'calculating...'\n    }\n    return (\n      <StakeComponent\n        name={this.props.project.name}\n        address={this.props.address}\n        photo={this.props.project.photo}\n        summary={this.props.project.summary}\n        location={this.props.project.location}\n        cost={web3.fromWei(Math.ceil(this.props.project.weiCost / 1.05), 'ether')}\n        tokensLeft={tokensLeft}\n        reputationCost={this.props.project.reputationCost}\n        totalReputationStaked={this.props.project.reputationBalance}\n        date={nextDeadline.toLocaleString()}\n        stakeInput={\n          <input\n            ref={(input) => (this.stakedValue = input)}\n            placeholder='Amount'\n            type='number'\n            onChange={() => this.onChange(this.stakedValue.value)}\n            value={this.state.stake}\n            style={{height: 30, marginRight: 15}}\n          />\n        }\n        user={this.props.user}\n        value={this.state.stake}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[1][ownProps.address]\n  }\n}\n\nexport default connect(mapStateToProps)(StakeProject)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Sidebar from '../components/shared/Sidebar'\nimport Project from './project/1Stake'\nimport { eth, dt } from '../utilities/blockchain'\nimport { getProjects } from '../actions/projectActions'\nimport gql from 'graphql-tag'\n\nlet projQuery = gql`\n  { allProjectsinState(state: 1){\n      address,\n      id,\n      ipfsHash,\n      location,\n      name\n      nextDeadline,\n      photo,\n      reputationBalance,\n      reputationCost,\n      summary,\n      tokenBalance,\n      weiBal,\n      weiCost\n    }\n  }`\n\nclass Stake extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      value: 0,\n      description: '',\n      projects: [],\n      tempProject: {},\n      currPrice: 0\n    }\n  }\n\n  componentWillMount () {\n    this.getProjects()\n  }\n\n  async getProjects () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          let currentPrice = (await dt.currentPrice()).toNumber()\n          this.props.getProjects()\n          this.setState({currentPrice, user: result[0]})\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  render () {\n    const projects = typeof this.props.projects !== `undefined`\n      ? Object.keys(this.props.projects).map((address, i) => {\n        return <Project\n          key={i}\n          index={i}\n          address={address}\n          currentPrice={this.state.currentPrice}\n          project={this.props.projects[address]}\n          stakeProject={(type, val) => this.stakeProject(type, address, val)}\n          unstakeProject={(type, val) => this.unstakeProject(type, address, val)}\n          user={this.state.user}\n        />\n      })\n      : []\n    return (\n      <div>\n        <Sidebar />\n        <div style={{marginLeft: 200}}>\n          <header className='App-header'>\n            <h3>Stakeable Proposals</h3>\n          </header>\n          <div style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n            {projects}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects[1]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjects: () => dispatch(getProjects(1, projQuery))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stake)\n","import { soliditySha3 } from 'web3-utils'\nimport { web3 } from './blockchain'\n\nconst keccakHashes = (types, bytesarray) => {\n  // {t: 'string', v: 'Hello!%'}, {t: 'int8', v:-23}, {t: 'address', v: '0x85F43D8a49eeB85d32Cf465507DD71d507100C1d'}\n  let objArray = []\n  for (let i = 0; i < types.length; i++) {\n    types[i] === 'uint'\n      ? objArray.push({t: types[i], v: bytesarray[i].toString()})\n      : objArray.push({t: types[i], v: bytesarray[i]})\n  }\n  let hash = soliditySha3(...objArray)\n  return hash\n}\n\nexport const hashTasks = (taskArray) => {\n  let taskHashArray = []\n  let args = ['bytes32', 'uint']\n  for (var i = 0; i < taskArray.length; i++) {\n    let thisTask = []\n    thisTask.push(web3.fromAscii(taskArray[i].description, 32))\n    thisTask.push(taskArray[i].percentage)\n    taskHashArray.push(keccakHashes(args, thisTask))\n  }\n  return taskHashArray\n}\n\nexport const hashTasksArray = (taskArray) => {\n  let hashList = hashTasks(taskArray)\n  hashList.map(arr => arr.slice(2))\n  let numArgs = hashList.length\n  let args = 'bytes32'.concat(' bytes32'.repeat(numArgs - 1)).split(' ')\n  let taskHash = keccakHashes(args, hashList)\n  return taskHash\n}\n","/* global alert */\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { submitHashedTaskList } from '../../actions/projectActions'\nimport { hashTasksArray } from '../../utilities/hashing'\n\nconst ButtonSubmitTaskList = (props) => {\n  let submitHashedTaskList = () => {\n    let tasks = JSON.parse(props.taskList)\n    let sumTotal = tasks.map(el => el.percentage).reduce((prev, curr) => {\n      return prev + curr\n    }, 0)\n    if (sumTotal !== 100) {\n      alert('percentages must add up to 100!')\n    } else {\n      let taskArray = tasks.map(task => ({\n        description: task.description,\n        percentage: task.percentage\n      }))\n      let taskHash = hashTasksArray(taskArray)\n      props.submitHashedTaskList(tasks, taskHash, props.address, {from: props.user})\n    }\n  }\n  return (<Button\n    style={{marginTop: 10}}\n    onClick={() => submitHashedTaskList()}>\n    Submit Tasks\n  </Button>)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    taskList: state.projects[2][ownProps.address].taskList\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitHashedTaskList: (tasks, taskHash, projectAddress, txObj) => dispatch(submitHashedTaskList(tasks, taskHash, projectAddress, txObj))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonSubmitTaskList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { checkActiveStatus } from '../../actions/projectActions'\n\nconst ButtonCheckActive = (props) => {\n  return (<Button\n    style={{marginTop: 10}}\n    onClick={() => props.checkActiveStatus(props.address, {from: props.user})}>\n      Check Active\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkActiveStatus: (address, txObj) => dispatch(checkActiveStatus(address, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonCheckActive)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { rewardProposer } from '../../actions/projectActions'\n\nconst ButtonRewardProposer = (props) => {\n  return props.user === props.proposer\n    ? (<Button\n      disabled={props.proposerRewarded}\n      style={{marginTop: 10}}\n      type='danger'\n      onClick={() => props.rewardProposer(props.address, {from: props.user})}>\n        Reward Proposer\n    </Button>)\n    : null\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    proposer: state.projects[2][ownProps.address].proposer.account,\n    proposerRewarded: state.projects[2][ownProps.address].proposerRewarded\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    rewardProposer: (address, txObj) => dispatch(rewardProposer(address, txObj))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonRewardProposer)\n","import React from 'react'\nimport { Table } from 'antd';\nimport { DragDropContext, DragSource, DropTarget } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n// import update from 'immutability-helper';\nimport * as _ from 'lodash'\n\nfunction dragDirection(\n  dragIndex,\n  hoverIndex,\n  initialClientOffset,\n  clientOffset,\n  sourceClientOffset,\n) {\n  const hoverMiddleY = (initialClientOffset.y - sourceClientOffset.y) / 2;\n  const hoverClientY = clientOffset.y - sourceClientOffset.y;\n  if (dragIndex < hoverIndex && hoverClientY > hoverMiddleY) {\n    return 'downward';\n  }\n  if (dragIndex > hoverIndex && hoverClientY < hoverMiddleY) {\n    return 'upward';\n  }\n}\n\nlet BodyRow = (props) => {\n  const {\n    isOver,\n    connectDragSource,\n    connectDropTarget,\n    moveRow,\n    dragRow,\n    clientOffset,\n    sourceClientOffset,\n    initialClientOffset,\n    ...restProps\n  } = props;\n  const style = { ...restProps.style, cursor: 'move' };\n\n  let className = restProps.className;\n  if (isOver && initialClientOffset) {\n    const direction = dragDirection(\n      dragRow.index,\n      restProps.index,\n      initialClientOffset,\n      clientOffset,\n      sourceClientOffset\n    );\n    if (direction === 'downward') {\n      className += ' drop-over-downward';\n    }\n    if (direction === 'upward') {\n      className += ' drop-over-upward';\n    }\n  }\n  const omittedIndex = _.omit(restProps, ['index'])\n  return connectDragSource(\n    connectDropTarget(\n      <tr\n        {...omittedIndex}\n        className={className}\n        style={style}\n      />\n    )\n  );\n};\n\nconst rowSource = {\n  beginDrag(props) {\n    return {\n      index: props.index,\n    };\n  },\n};\n\nconst rowTarget = {\n  drop(props, monitor) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.moveRow(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n};\n\nBodyRow = DropTarget('row', rowTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n  sourceClientOffset: monitor.getSourceClientOffset(),\n}))(\n  DragSource('row', rowSource, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    dragRow: monitor.getItem(),\n    clientOffset: monitor.getClientOffset(),\n    initialClientOffset: monitor.getInitialClientOffset(),\n  }))(BodyRow)\n);\n\nclass DragSortingTable extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: props.data,\n      columns: props.columns\n    }\n  }\n\n  componentWillReceiveProps(np) {\n    this.setState({data: np.data})\n  }\n\n  components = {\n    body: {\n      row: BodyRow,\n    },\n  }\n\n  render() {\n    return (\n      <Table\n        columns={this.state.columns}\n        dataSource={this.state.data}\n        components={this.components}\n        onRow={(record, index) => ({\n          index,\n          moveRow: this.props.moveRow,\n        })}\n        pagination={false}\n      />\n    );\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(DragSortingTable);\n","import React from 'react'\nimport { Table } from 'antd'\nimport ProjectHeader from '../shared/ProjectHeader'\nimport ButtonSubmitTaskList from '../../contractComponents/stage2/SubmitTaskList'\nimport ButtonCheckActive from '../../contractComponents/stage2/CheckActive'\nimport ButtonRewardProposer from '../../contractComponents/stage2/RewardProposer'\nimport DraggableTable from '../shared/DraggableTable'\n\nconst columns = [{\n  title: 'Task Description',\n  dataIndex: 'description',\n  key: 'description'\n}, {\n  title: 'Percentage',\n  dataIndex: 'percentage',\n  key: 'percentage'\n}, {\n  title: 'ETH Reward',\n  dataIndex: 'ethReward',\n  key: 'ethReward'\n}, {\n  title: 'USD Reward',\n  dataIndex: 'usdReward',\n  key: 'usdReward'\n}, {\n  title: '',\n  dataIndex: 'deleteTask',\n  key: 'deleteTask'\n}]\n\nconst submissionColumns = [{\n  title: 'Submitter',\n  dataIndex: 'submitter',\n  key: 'submitter'\n}, {\n  title: 'Submission',\n  dataIndex: 'submission',\n  key: 'submission'\n}, {\n  title: 'Weighting',\n  dataIndex: 'weighting',\n  key: 'weighting'\n}]\n\nexport default ({\n  name,\n  address,\n  photo,\n  summary,\n  location,\n  cost,\n  reputationCost,\n  date,\n  submission,\n  tasks,\n  submissionTasks,\n  moveRow,\n  user\n}) => {\n  return (\n    <div style={{backgroundColor: '#DDE4E5', marginBottom: 30}}>\n      <ProjectHeader\n        name={name}\n        address={address}\n        photo={photo}\n        summary={summary}\n        location={location}\n        cost={cost}\n        reputationCost={reputationCost}\n      />\n      <div style={{marginLeft: 10}}>\n        <ButtonRewardProposer\n          user={user}\n          address={address}\n        />\n      </div>\n      <div style={{padding: 10}}>\n        <div>\n          <div>\n            Task Submission Expires: <strong> {typeof date !== 'undefined' ? `${date}` : 'N/A'}</strong>\n          </div>\n          {submission}\n        </div>\n        <div style={{display: 'flex', flexDirection: 'column', backgroundColor: '#FCFCFC', marginTop: 30}}>\n          <DraggableTable address={address} data={tasks} columns={columns} moveRow={moveRow} />\n        </div>\n        <ButtonSubmitTaskList\n          user={user}\n          address={address}\n        />\n        <div>\n          <div style={{display: 'flex', flexDirection: 'column', backgroundColor: '#FCFCFC', marginTop: 30}}>\n            <Table style={{backgroundColor: '#ffffff'}} dataSource={submissionTasks} columns={submissionColumns} pagination={false} />\n          </div>\n        </div>\n        <ButtonCheckActive\n          user={user}\n          address={address}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport AddComponent from '../../components/project/2Add'\nimport { web3, P } from '../../utilities/blockchain'\nimport update from 'immutability-helper'\nimport { setTaskList, getVerifiedTaskLists } from '../../actions/projectActions'\n\nclass AddProject extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      tempTask: {},\n      taskList: [],\n      nextDeadline: ''\n    }\n    this.handleTaskInput = this.handleTaskInput.bind(this)\n    this.moveRow = this.moveRow.bind(this)\n  }\n\n  componentWillMount () {\n    this.props.getVerifiedTaskLists(this.props.address)\n    this.getNextDeadline()\n  }\n\n  componentWillReceiveProps (np) {\n    if (np.taskList) {\n      this.setState({taskList: JSON.parse(np.taskList)})\n    }\n  }\n\n  onChange (type, val) {\n    try {\n      let temp = Object.assign({}, this.state.tempTask, {[type]: val})\n      this.setState({tempTask: temp})\n    } catch (error) {\n      throw new Error(error)\n    }\n  }\n\n  moveRow (dragIndex, hoverIndex) {\n    const { taskList } = this.state\n    const dragRow = taskList[dragIndex]\n    let newState = update(this.state, {\n      taskList: {\n        $splice: [[dragIndex, 1], [hoverIndex, 0, dragRow]]\n      }\n    })\n    this.props.setTaskList({taskList: newState.taskList}, this.props.address)\n    this.setState(newState)\n  }\n\n  deleteElement (i) {\n    try {\n      let newTaskList = JSON.parse(this.props.taskList)\n      newTaskList.splice(i, 1)\n      this.props.setTaskList({taskList: newTaskList}, this.props.address)\n    } catch (error) {\n      throw new Error(error)\n    }\n  }\n\n  handleTaskInput () {\n    let description = this.state.tempTask.description\n    let percentage = parseInt(this.state.tempTask.percentage, 10)\n    let tempTaskList = this.props.taskList.length === 0 ? [] : JSON.parse(this.props.taskList)\n    tempTaskList.push({description, percentage})\n    this.props.setTaskList({taskList: tempTaskList}, this.props.address)\n    this.setState({tempTask: {}})\n  }\n\n  async getNextDeadline () {\n    let nextDeadline = await P.at(this.props.address).nextDeadline() * 1000\n    this.setState({nextDeadline: new Date(parseInt(nextDeadline))})\n  }\n\n  render () {\n    let tasks, verifiedSubmissions\n    if (this.props.taskList !== null && this.props.taskList.length !== 0) {\n      tasks = JSON.parse(this.props.taskList).map((task, i) => {\n        let ethReward = web3.fromWei(Math.ceil(this.props.project.weiCost / 1.05) * (task.percentage / 100), 'ether')\n        return {\n          key: i,\n          description: task.description,\n          percentage: `${task.percentage}%`,\n          ethReward: `${parseFloat(ethReward).toFixed(5)} ETH`,\n          usdReward: `$${parseFloat(this.props.ethPrice * ethReward).toFixed(2)}`,\n          deleteTask: <Button type='danger' onClick={() => this.deleteElement(i)} >Delete</Button>\n        }\n      })\n    } else {\n      tasks = []\n    }\n    let submission =\n      <div>\n        <input\n          ref={(input) => (this.tasks = input)}\n          placeholder='task description'\n          onChange={(e) => this.onChange('description', this.tasks.value)}\n          value={this.state.tempTask.description || ''}\n        />\n        <input\n          ref={(input) => (this.percentages = input)}\n          style={{marginLeft: 10}}\n          placeholder='% of project cost'\n          onChange={(e) => this.onChange('percentage', this.percentages.value)}\n          value={this.state.tempTask.percentage || ''}\n        />\n        <Button type='primary' onClick={() => this.handleTaskInput()} style={{marginLeft: 10}}>\n          Add Tasks\n        </Button>\n      </div>\n\n    if (typeof this.props.submissions !== 'undefined') {\n      verifiedSubmissions = this.props.submissions.map((submission, i) => {\n        return {\n          key: i,\n          submitter: submission.submitter,\n          submission: submission.content,\n          weighting: submission.weighting\n        }\n      })\n    }\n    return (\n      <AddComponent\n        name={this.props.project.name}\n        address={this.props.address}\n        photo={this.props.project.photo}\n        summary={this.props.project.summary}\n        location={this.props.project.location}\n        cost={web3.fromWei(Math.ceil(this.props.project.weiCost / 1.05), 'ether')}\n        reputationCost={this.props.project.reputationCost}\n        date={this.state.nextDeadline}\n        tasks={tasks}\n        submission={submission}\n        submissionTasks={verifiedSubmissions}\n        moveRow={this.moveRow}\n        user={this.props.user}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[2][ownProps.address],\n    taskList: state.projects[2][ownProps.address].taskList,\n    submissions: state.projects[2][ownProps.address].submittedTasks\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setTaskList: (taskDetails, projectAddress) => dispatch(setTaskList(taskDetails, projectAddress)),\n    getVerifiedTaskLists: (projectAddress) => dispatch(getVerifiedTaskLists(projectAddress))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Sidebar from '../components/shared/Sidebar'\n// import { Button } from 'antd'\nimport { eth } from '../utilities/blockchain'\nimport price from 'crypto-price'\nimport Project from './project/2Add'\n// import fastforward from '../utilities/fastforward'\nimport { getProjects } from '../actions/projectActions'\nimport gql from 'graphql-tag'\n\nlet projQuery = gql`\n  { allProjectsinState(state: 2){\n      address,\n      id,\n      ipfsHash,\n      location,\n      name\n      nextDeadline,\n      photo,\n      reputationBalance,\n      reputationCost,\n      proposer {\n        account\n      },\n      proposerRewarded,\n      state,\n      summary,\n      tokenBalance,\n      taskList,\n      weiBal,\n      weiCost\n    }\n  }`\n\nclass Add extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      projects: []\n    }\n    // this.fastForward = this.fastForward.bind(this)\n  }\n\n  componentWillMount () {\n    this.getProjects()\n    this.setEthPrice()\n  }\n\n  async getProjects () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getProjects()\n          this.setState({user: result[0]})\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  async setEthPrice () {\n    let ethPrice = await price.getCryptoPrice('USD', 'ETH')\n    this.setState({\n      ethPrice: ethPrice.price\n    })\n  }\n\n  // // fast forward Ganache 1 week\n  // async fastForward () {\n  //   await fastforward(7 * 24 * 60 * 60)\n  // }\n\n  render () {\n    const projects = typeof this.props.projects !== `undefined`\n      ? Object.keys(this.props.projects).map((address, i) => {\n        return <Project\n          key={i}\n          index={i}\n          address={address}\n          project={this.props.projects[address]}\n          user={this.state.user}\n          ethPrice={this.state.ethPrice}\n        />\n      })\n      : []\n    return (\n      <div>\n        <Sidebar />\n        <div style={{marginLeft: 200, marginBottom: 30}}>\n          <header className='App-header'>\n            <h3>Add Tasks to Open Projects</h3>\n            { /* <Button type='danger' onClick={this.fastForward}>fast forward 1 week</Button>\n            <h6>ONLY DO THIS IF YOU ARE READY TO MOVE EVERY PROJECT TO THE NEXT STATE</h6>\n            <h6>IF A PROJECT HAS NO TASK SUBMISSIONS IT WILL FAIL AND YOU WILL LOSE YOUR STAKED TOKENS</h6> */ }\n          </header>\n          <div style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n            {projects}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects[2]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjects: () => dispatch(getProjects(2, projQuery))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Add)\n","export const FINAL_TASK_LIST_SUBMITTED = 'FINAL_TASK_LIST_SUBMITTED'\nexport const SUBMIT_FINAL_TASK_LIST = 'SUBMIT_FINAL_TASK_LIST'\nexport const CLAIM_TASK = 'CLAIM_TASK'\nexport const TASK_CLAIMED = 'TASK_CLAIMED'\nexport const SUBMIT_TASK_COMPLETE = 'SUBMIT_TASK_COMPLETE'\nexport const TASK_COMPLETED = 'TASK_COMPLETED'\nexport const VALIDATE_TASK = 'VALIDATE_TASK'\nexport const TASK_VALIDATED = 'TASK_VALIDATED'\nexport const GET_VALIDATIONS = 'GET_VALIDATIONS'\nexport const VALIDATIONS_RECEIVED = 'VALIDATIONS_RECEIVED'\nexport const REWARD_VALIDATOR = 'REWARD_VALIDATOR'\nexport const VALIDATOR_REWARDED = 'VALIDATOR_REWARDED'\nexport const REWARD_TASK = 'REWARD_TASK'\nexport const TASK_REWARDED = 'TASK_REWARDED'\nexport const GET_USER_VALIDATIONS = 'GET_USER_VALIDATIONS'\nexport const USER_VALIDATIONS_RECEIVED = 'USER_VALIDATIONS_RECEIVED'\nexport const COMMIT_VOTE = 'COMMIT_VOTE'\nexport const REVEAL_VOTE = 'REVEAL_VOTE'\nexport const RESCUE_VOTE = 'RESCUE_VOTE'\n","import {\n  SUBMIT_FINAL_TASK_LIST,\n  FINAL_TASK_LIST_SUBMITTED,\n  CLAIM_TASK,\n  TASK_CLAIMED,\n  VALIDATE_TASK,\n  TASK_VALIDATED,\n  SUBMIT_TASK_COMPLETE,\n  TASK_COMPLETED,\n  GET_VALIDATIONS,\n  VALIDATIONS_RECEIVED,\n  REWARD_VALIDATOR,\n  VALIDATOR_REWARDED,\n  REWARD_TASK,\n  TASK_REWARDED,\n  GET_USER_VALIDATIONS,\n  USER_VALIDATIONS_RECEIVED,\n  COMMIT_VOTE,\n  REVEAL_VOTE,\n  RESCUE_VOTE\n} from '../constants/TaskActionTypes'\n// task actions start at submitFinalTaskList because task contract initialized in this action\n\nexport function submitFinalTaskList (address, txObj) {\n  return {\n    type: SUBMIT_FINAL_TASK_LIST,\n    address,\n    txObj\n  }\n}\n\nexport function finalTaskListSubmitted (address, tasks) {\n  return {\n    type: FINAL_TASK_LIST_SUBMITTED,\n    address,\n    tasks\n  }\n}\n\nexport function claimTask (address, index, txObj) {\n  return {\n    type: CLAIM_TASK,\n    address,\n    index,\n    txObj\n  }\n}\n\nexport function taskClaimed (address, index) {\n  return {\n    type: TASK_CLAIMED,\n    address,\n    index\n  }\n}\n\nexport function validateTask (address, taskIndex, validationState, txObj) {\n  return {\n    type: VALIDATE_TASK,\n    address,\n    taskIndex,\n    validationState,\n    txObj\n  }\n}\n\nexport function taskValidated (address, taskIndex, validationState, valFee, validator) {\n  return {\n    type: TASK_VALIDATED,\n    address,\n    taskIndex,\n    validationState,\n    valFee,\n    validator\n  }\n}\n\nexport function taskCompleted (address, index) {\n  return {\n    type: TASK_COMPLETED,\n    address,\n    index\n  }\n}\n\nexport function submitTaskComplete (address, index, txObj) {\n  return {\n    type: SUBMIT_TASK_COMPLETE,\n    address,\n    index,\n    txObj\n  }\n}\n\nexport function getValidations (projectAddress, index) {\n  return {\n    type: GET_VALIDATIONS,\n    projectAddress,\n    index\n  }\n}\n\nexport function validationsReceived (projectAddress, index, result) {\n  return {\n    type: VALIDATIONS_RECEIVED,\n    projectAddress,\n    index,\n    result\n  }\n}\n\nexport function getUserValidations (projectAddress, user, state) {\n  return {\n    type: GET_USER_VALIDATIONS,\n    projectAddress,\n    user,\n    state\n  }\n}\n\nexport function userValidationsReceived (projectAddress, user, result, state) {\n  return {\n    type: USER_VALIDATIONS_RECEIVED,\n    projectAddress,\n    user,\n    result,\n    state\n  }\n}\n\nexport function rewardValidator (projectAddress, index, txObj, state) {\n  return {\n    type: REWARD_VALIDATOR,\n    projectAddress,\n    index,\n    txObj,\n    state\n  }\n}\n\nexport function validatorRewarded (projectAddress, index, amount, state) {\n  return {\n    type: VALIDATOR_REWARDED,\n    projectAddress,\n    index,\n    amount,\n    state\n  }\n}\n\nexport function rewardTask (projectAddress, index, txObj, state) {\n  return {\n    type: REWARD_TASK,\n    projectAddress,\n    index,\n    txObj,\n    state\n  }\n}\n\nexport function taskRewarded (projectAddress, index, amount, claimer, state) {\n  return {\n    type: TASK_REWARDED,\n    projectAddress,\n    index,\n    amount,\n    claimer,\n    state\n  }\n}\n\nexport function commitVote (collateralType, projectAddress, taskIndex, value, secretHash, vote, salt, pollID, txObj) {\n  return {\n    type: COMMIT_VOTE,\n    collateralType,\n    projectAddress,\n    taskIndex,\n    value,\n    secretHash,\n    vote,\n    salt,\n    pollID,\n    txObj\n  }\n}\n\nexport function revealVote (collateralType, projectAddress, taskIndex, vote, salt, txObj) {\n  return {\n    type: REVEAL_VOTE,\n    collateralType,\n    projectAddress,\n    taskIndex,\n    vote,\n    salt,\n    txObj\n  }\n}\n\nexport function rescueVote (collateralType, projectAddress, taskIndex, txObj) {\n  return {\n    type: RESCUE_VOTE,\n    collateralType,\n    projectAddress,\n    taskIndex,\n    txObj\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { submitFinalTaskList } from '../../actions/taskActions'\n\nconst ButtonSubmitFinalTaskList = (props) => {\n  return (<Button\n    disabled={props.project.listSubmitted}\n    onClick={() => props.submitFinalTaskList(props.address, {from: props.user})}>\n      Submit Winning Hash List\n  </Button>)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[3][ownProps.address]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitFinalTaskList: (address, txObj) => dispatch(submitFinalTaskList(address, txObj))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonSubmitFinalTaskList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { checkValidateStatus } from '../../actions/projectActions'\n\nconst ButtonCheckValidate = (props) => {\n  return (<Button\n    onClick={() => props.checkValidateStatus(props.address, {from: props.user})}>\n      Check Validate\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkValidateStatus: (address, txObj) => dispatch(checkValidateStatus(address, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonCheckValidate)\n","import React from 'react'\nimport ProjectHeader from '../shared/ProjectHeader'\nimport ButtonSubmitFinalTaskList from '../../contractComponents/stage3/SubmitFinalTaskList'\nimport ButtonCheckValidate from '../../contractComponents/stage3/CheckValidate'\nimport { Table } from 'antd'\n\nconst columns = [{\n  title: 'Task Description',\n  dataIndex: 'description',\n  key: 'description'\n}, {\n  title: 'ETH Reward',\n  dataIndex: 'ethReward',\n  key: 'ethReward'\n}, {\n  title: 'Rep to Claim',\n  dataIndex: 'repClaim',\n  key: 'repClaim'\n}, {\n  title: 'USD Reward',\n  dataIndex: 'usdReward',\n  key: 'usdReward'\n}, {\n  title: '',\n  dataIndex: 'buttons',\n  key: 'buttons'\n}]\n\nexport default ({\n  name,\n  address,\n  photo,\n  user,\n  summary,\n  location,\n  cost,\n  reputationCost,\n  date,\n  tasks,\n  checkValidateStatus\n}) => {\n  return (\n    <div style={{backgroundColor: '#DDE4E5', marginBottom: 30}}>\n      <ProjectHeader\n        name={name}\n        address={address}\n        photo={photo}\n        summary={summary}\n        location={location}\n        cost={cost}\n        reputationCost={reputationCost}\n      />\n      <div style={{padding: 10}}>\n        <div>\n          <div>\n            Task Completion Expires: <strong>{typeof date !== 'undefined' ? `${date}` : 'N/A'}</strong>\n          </div>\n        </div>\n        <div style={{display: 'flex', flexDirection: 'column', backgroundColor: '#FCFCFC', marginTop: 30}}>\n          <Table dataSource={tasks} columns={columns} pagination={false} />\n        </div>\n      </div>\n      <div style={{margin: 20}}>\n        <ButtonSubmitFinalTaskList\n          address={address}\n          user={user}\n        />\n        <ButtonCheckValidate\n          address={address}\n          user={user}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { claimTask } from '../../actions/taskActions'\n\nconst ButtonClaimTask = (props) => {\n  return (<Button\n    disabled={!props.project.listSubmitted || props.tasks[props.i] === undefined || props.tasks[props.i].claimed}\n    type='danger'\n    onClick={() => props.claimTask(props.address, props.i, {from: props.user})}>\n      Claim Task\n  </Button>)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[3][ownProps.address],\n    tasks: state.projects[3][ownProps.address].tasks\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    claimTask: (address, index, txObj) => dispatch(claimTask(address, index, txObj))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonClaimTask)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { submitTaskComplete } from '../../actions/taskActions'\n\nconst ButtonTaskComplete = (props) => {\n  return (<Button\n    disabled={!props.project.listSubmitted || props.tasks[props.i] === undefined || !props.tasks[props.i].claimed || (props.tasks[props.i].claimed && props.tasks[props.i].complete)}\n    type='danger'\n    onClick={() => props.submitTaskComplete(props.address, props.i, {from: props.user})}>\n      Task Complete\n  </Button>)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[3][ownProps.address],\n    tasks: state.projects[3][ownProps.address].tasks\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitTaskComplete: (address, index, txObj) => dispatch(submitTaskComplete(address, index, txObj))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonTaskComplete)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ClaimComponent from '../../components/project/3Claim'\nimport ButtonClaimTask from '../../contractComponents/stage3/ClaimTask'\nimport ButtonTaskComplete from '../../contractComponents/stage3/TaskComplete'\nimport { Button } from 'antd'\nimport { web3, P } from '../../utilities/blockchain'\nconst ButtonGroup = Button.Group\n\nclass ClaimProject extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      tasks: [],\n      nextDeadline: ''\n    }\n  }\n\n  componentWillMount () {\n    this.getNextDeadline()\n  }\n\n  async getNextDeadline () {\n    let nextDeadline = await P.at(this.props.address).nextDeadline() * 1000\n    this.setState({nextDeadline: new Date(parseInt(nextDeadline))})\n  }\n\n  render () {\n    let tasks\n    if (this.props.project.taskList !== null && typeof this.props.project.tasks !== 'undefined') {\n      let reputationCost = this.props.project.reputationCost\n      let weiCost = Math.ceil(this.props.project.weiCost / 1.05)\n      tasks = JSON.parse(this.props.project.taskList).map((task, i) => {\n        let weiReward = Math.floor(weiCost * task.percentage / 100)\n        return {\n          key: i,\n          description: task.description,\n          ethReward: `${parseFloat(web3.fromWei(weiReward, 'ether')).toFixed(5)} ETH`,\n          usdReward: `$${parseFloat(this.props.ethPrice * web3.fromWei(weiReward, 'ether')).toFixed(2)}`,\n          repClaim: typeof reputationCost !== 'undefined' && typeof weiCost !== 'undefined' && typeof weiReward !== 'undefined' ? `${Math.floor(reputationCost * weiReward / weiCost)} rep` : '',\n          buttons: <ButtonGroup>\n            <ButtonClaimTask\n              user={this.props.user}\n              i={i}\n              address={this.props.address}\n            />\n            <ButtonTaskComplete\n              user={this.props.user}\n              i={i}\n              address={this.props.address}\n            />\n          </ButtonGroup>\n        }\n      })\n    } else {\n      tasks = []\n    }\n\n    return (\n      <ClaimComponent\n        name={this.props.project.name}\n        user={this.props.user}\n        address={this.props.address}\n        photo={this.props.project.photo}\n        summary={this.props.project.summary}\n        location={this.props.project.location}\n        cost={web3.fromWei(Math.ceil(this.props.project.weiCost / 1.05), 'ether')}\n        reputationCost={this.props.project.reputationCost}\n        date={this.state.nextDeadline}\n        tasks={tasks}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[3][ownProps.address]\n  }\n}\n\nexport default connect(mapStateToProps)(ClaimProject)\n","import React from 'react'\nimport { connect } from 'react-redux'\n// import { Button } from 'antd'\nimport Sidebar from '../components/shared/Sidebar'\nimport { eth } from '../utilities/blockchain'\nimport price from 'crypto-price'\nimport Project from './project/3Claim'\n// import fastforward from '../utilities/fastforward'\nimport { getProjects } from '../actions/projectActions'\nimport gql from 'graphql-tag'\n\nlet projQuery = gql`\n  { allProjectsinState(state: 3){\n      address,\n      id,\n      ipfsHash,\n      location,\n      listSubmitted,\n      name\n      nextDeadline,\n      photo,\n      reputationBalance,\n      reputationCost,\n      summary,\n      state,\n      tokenBalance,\n      topTaskHash,\n      taskList,\n      weiBal,\n      weiCost,\n      state,\n      tasks {\n        id,\n        address,\n        claimer {\n          account\n        },\n        claimed,\n        claimedAt,\n        complete,\n        description,\n        index,\n        weighting,\n        validationRewardClaimable,\n        workerRewardClaimable,\n        workerRewarded\n      }\n    }\n  }`\n\nclass Claim extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      projects: []\n    }\n    // this.fastForward = this.fastForward.bind(this)\n  }\n\n  componentWillMount () {\n    this.getProjects()\n    this.setEthPrice()\n  }\n\n  async getProjects () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getProjects()\n          this.setState({user: result[0]})\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  async setEthPrice () {\n    let ethPrice = await price.getCryptoPrice('USD', 'ETH')\n    this.setState({\n      ethPrice: ethPrice.price\n    })\n  }\n\n  // // fast forward Ganache 2 weeks\n  // async fastForward () {\n  //   await fastforward(2 * 7 * 24 * 60 * 60)\n  // }\n\n  render () {\n    const projects = typeof this.props.projects !== `undefined`\n      ? Object.keys(this.props.projects).map((address, i) => {\n        return <Project\n          key={i}\n          index={i}\n          address={address}\n          user={this.state.user}\n          project={this.props.projects[address]}\n          ethPrice={this.state.ethPrice}\n        />\n      })\n      : []\n    return (\n      <div>\n        <Sidebar />\n        <div style={{marginLeft: 200, marginBottom: 30}}>\n          <header className='App-header'>\n            <h3>Claim Tasks from Active Projects</h3>\n            { /* <Button type='danger' onClick={this.fastForward}>fast forward 2 weeks</Button>\n            <h6>ONLY DO THIS IF YOU ARE READY TO MOVE EVERY PROJECT TO THE NEXT STATE</h6>\n            <h6>IF A PROJECT HAS UNCLAIMED TASKS IT WILL FAIL AND YOU WILL LOSE YOUR STAKED TOKENS</h6> */ }\n          </header>\n          <div style={{paddingLeft: '30px', paddingRight: '30px'}}>\n            {projects}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects[3]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjects: () => dispatch(getProjects(3, projQuery))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Claim)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { checkVotingStatus } from '../../actions/projectActions'\n\nconst ButtonCheckVoting = (props) => {\n  return (<Button\n    style={{margin: 20}}\n    onClick={() => props.checkVotingStatus(props.address, {from: props.user})}>\n      Check Voting\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkVotingStatus: (address, txObj) => dispatch(checkVotingStatus(address, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonCheckVoting)\n","import React from 'react'\nimport ProjectHeader from '../shared/ProjectHeader'\nimport ButtonCheckVoting from '../../contractComponents/stage4/CheckVoting'\nimport { Table } from 'antd'\n\nconst columns = [{\n  title: 'Task Description',\n  dataIndex: 'description',\n  key: 'description'\n}, {\n  title: 'ETH Reward',\n  dataIndex: 'ethReward',\n  key: 'ethReward'\n}, {\n  title: 'USD Reward',\n  dataIndex: 'usdReward',\n  key: 'usdReward'\n}, {\n  title: '',\n  dataIndex: 'input',\n  key: 'input'\n}]\n\nexport default ({\n  name,\n  address,\n  photo,\n  summary,\n  location,\n  cost,\n  reputationCost,\n  date,\n  tasks,\n  user\n}) => {\n  return (\n    <div style={{backgroundColor: '#DDE4E5', marginBottom: 30}}>\n      <ProjectHeader\n        name={name}\n        address={address}\n        photo={photo}\n        summary={summary}\n        location={location}\n        cost={cost}\n        reputationCost={reputationCost}\n      />\n      <div style={{padding: 10}}>\n        <div>\n          <div>\n            Validation Expires: <strong>{typeof date !== 'undefined' ? `${date}` : 'N/A'}</strong>\n          </div>\n        </div>\n        <div style={{display: 'flex', flexDirection: 'column', backgroundColor: '#FCFCFC', marginTop: 30}}>\n          <Table dataSource={tasks} columns={columns} pagination={false} />\n        </div>\n      </div>\n      <ButtonCheckVoting\n        user={user}\n        address={address}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Table } from 'antd'\n\nconst columns = [{\n  title: 'Validators',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: 'Amount of Tokens',\n  dataIndex: 'amount',\n  key: 'amount'\n}, {\n  title: 'Validation State',\n  dataIndex: 'state',\n  key: 'state'\n}]\n\nexport default ({\n  validations\n}) => {\n  return (\n    <div style={{backgroundColor: '#DDE4E5', marginBottom: 30}}>\n      <Table dataSource={validations} columns={columns} pagination={false} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ValidateTaskComponent from '../../components/task/4Validate'\nimport { getValidations } from '../../actions/taskActions'\n\nclass ValidateTasks extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n    }\n    this.getValidations = this.getValidations.bind(this)\n  }\n\n  componentWillMount () {\n    this.getValidations()\n  }\n\n  getValidations () {\n    this.props.getValidations(this.props.address, this.props.index)\n  }\n\n  render () {\n    let validations\n    if (typeof this.props.validations !== 'undefined') {\n      validations = this.props.validations.map((validation, i) => {\n        return {\n          key: i,\n          address: validation.user,\n          amount: validation.amount,\n          state: (validation.state).toString()\n        }\n      })\n    } else {\n      validations = []\n    }\n    return (\n      <ValidateTaskComponent\n        validations={validations}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    validations: state.projects[4][ownProps.address].tasks[ownProps.index].validations\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getValidations: (address, index) => dispatch(getValidations(address, index))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ValidateTasks)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { validateTask } from '../../actions/taskActions'\n\nconst ButtonValidateTask = (props) => {\n  let state\n  props.state === 'Yes'\n    ? state = true\n    : state = false\n  return (<Button\n    type='danger'\n    onClick={() => props.validateTask(props.address, props.i, state, {from: props.user})}>\n    {`${props.state}`}\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    validateTask: (address, taskIndex, validationState, txObj) => dispatch(validateTask(address, taskIndex, validationState, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonValidateTask)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Icon } from 'antd'\nimport ValidateComponent from '../../components/project/4Validate'\nimport ValidateTask from '../task/4Validate'\nimport ButtonValidateTask from '../../contractComponents/stage4/ValidateTask'\nimport { web3, P } from '../../utilities/blockchain'\n\nclass ValidateTasks extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      nextDeadline: ''\n    }\n  }\n\n  onChange (e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  componentWillMount () {\n    this.getNextDeadline()\n  }\n\n  async getNextDeadline () {\n    let nextDeadline = await P.at(this.props.address).nextDeadline() * 1000\n    this.setState({nextDeadline: new Date(parseInt(nextDeadline))})\n  }\n\n  render () {\n    let tasks\n    let returnInput = (i) => (\n      <div>\n        <div>\n          <ButtonValidateTask\n            user={this.props.user}\n            address={this.props.address}\n            state='Yes'\n            i={i}\n          />\n          <ButtonValidateTask\n            user={this.props.user}\n            address={this.props.address}\n            state='No'\n            i={i}\n          />\n        </div>\n        <div>\n          <ValidateTask\n            index={i}\n            address={this.props.address}\n          />\n        </div>\n      </div>)\n    if (typeof this.props.tasks !== 'undefined') {\n      tasks = this.props.tasks.slice(0).sort(function (a, b) {\n        return a.index - b.index\n      })\n      tasks = tasks.map((task, i) => {\n        let ethReward = web3.fromWei(Math.ceil(this.props.project.weiCost / 1.05) * (task.weighting / 100), 'ether')\n        if (task.complete === false) {\n          return {\n            key: i,\n            description: task.description,\n            ethReward: <Icon type='close' />,\n            usdReward: <Icon type='close' />,\n            input: <div>This task was never completed.</div>\n          }\n        } else {\n          return {\n            key: i,\n            description: task.description,\n            ethReward: `${parseFloat(ethReward).toFixed(5)} ETH`,\n            usdReward: `$${parseFloat(this.props.ethPrice * ethReward).toFixed(2)}`,\n            input: returnInput(i)\n          }\n        }\n      })\n    } else {\n      tasks = []\n    }\n\n    return (\n      <ValidateComponent\n        name={this.props.project.name}\n        address={this.props.address}\n        photo={this.props.project.photo}\n        summary={this.props.project.summary}\n        location={this.props.project.location}\n        cost={web3.fromWei(Math.ceil(this.props.project.weiCost / 1.05), 'ether')}\n        reputationCost={this.props.project.reputationCost}\n        date={this.state.nextDeadline}\n        tasks={tasks}\n        user={this.props.user}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[4][ownProps.address],\n    tasks: state.projects[4][ownProps.address].tasks\n  }\n}\n\nexport default connect(mapStateToProps)(ValidateTasks)\n","import React from 'react'\n// import { Button } from 'antd'\nimport Sidebar from '../components/shared/Sidebar'\nimport Project from './project/4Validate'\n// import fastforward from '../utilities/fastforward'\nimport { connect } from 'react-redux'\nimport { eth } from '../utilities/blockchain'\nimport price from 'crypto-price'\nimport { getProjects } from '../actions/projectActions'\nimport gql from 'graphql-tag'\n\nlet projQuery = gql`\n  { allProjectsinState(state: 4){\n      address,\n      id,\n      ipfsHash,\n      location,\n      name,\n      tasks {\n        id,\n        address,\n        claimer {\n          account\n        },\n        claimed,\n        claimedAt,\n        complete,\n        description,\n        index,\n        weighting,\n        validationRewardClaimable,\n        workerRewardClaimable,\n        workerRewarded\n      }\n      nextDeadline,\n      photo,\n      reputationBalance,\n      reputationCost,\n      summary,\n      state,\n      tokenBalance,\n      weiBal,\n      weiCost\n    }\n  }`\n\nclass Validate extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      projects: []\n    }\n    // this.fastForward = this.fastForward.bind(this)\n  }\n\n  componentWillMount () {\n    this.getProjects()\n    this.setEthPrice()\n  }\n\n  async getProjects () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getProjects()\n          this.setState({user: result[0]})\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  async setEthPrice () {\n    let ethPrice = await price.getCryptoPrice('USD', 'ETH')\n    this.setState({\n      ethPrice: ethPrice.price\n    })\n  }\n\n  // async fastForward () {\n  //   await fastforward(7 * 24 * 60 * 60)\n  // }\n\n  render () {\n    const projects = typeof this.props.projects !== `undefined`\n      ? Object.keys(this.props.projects).map((address, i) => {\n        return <Project\n          key={i}\n          index={i}\n          address={address}\n          project={this.props.projects[address]}\n          user={this.state.user}\n          ethPrice={this.state.ethPrice}\n        />\n      })\n      : []\n\n    return (\n      <div>\n        <Sidebar />\n        <div style={{marginLeft: 200, marginBottom: 30}}>\n          <header className='App-header'>\n            <h3>Validate Tasks</h3>\n            { /* <Button type='danger' onClick={this.fastForward}>fast forward 1 week</Button>\n            <h6>ONLY DO THIS IF YOU ARE READY TO MOVE EVERY PROJECT TO THE NEXT STATE</h6>\n            <h6>IF A PROJECT HAS UNCLAIMED TASKS IT WILL FAIL AND YOU WILL LOSE YOUR STAKED TOKENS</h6> */ }\n          </header>\n          <div style={{paddingLeft: '30px', paddingRight: '30px'}}>\n            {projects}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: state.projects[4]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjects: () => dispatch(getProjects(4, projQuery))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Validate)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { checkFinalStatus } from '../../actions/projectActions'\n\nconst ButtonCheckFinal = (props) => {\n  return (<Button\n    style={{margin: 20}}\n    onClick={() => props.checkFinalStatus(props.address, {from: props.user})}>\n      Check Final\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkFinalStatus: (address, txObj) => dispatch(checkFinalStatus(address, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonCheckFinal)\n","import React from 'react'\nimport ProjectHeader from '../shared/ProjectHeader'\nimport { Table } from 'antd'\nimport ButtonCheckFinal from '../../contractComponents/stage5/CheckFinal'\n\nconst columns = [{\n  title: 'Task Description',\n  dataIndex: 'description',\n  key: 'description'\n}, {\n  title: 'ETH Reward',\n  dataIndex: 'ethReward',\n  key: 'ethReward'\n}, {\n  title: 'Reward Validator?',\n  dataIndex: 'rewardValidator',\n  key: 'rewardValidator'\n}, {\n  title: 'Reward Worker?',\n  dataIndex: 'rewardWorker',\n  key: 'rewardWorker'\n}, {\n  title: 'Task Needs Vote?',\n  dataIndex: 'taskNeedsVote',\n  key: 'taskNeedsVote'\n}, {\n  title: 'Pending Votes',\n  dataIndex: 'votes',\n  key: 'votes'\n}]\n\nexport default ({\n  name,\n  address,\n  photo,\n  summary,\n  location,\n  cost,\n  reputationCost,\n  date,\n  tasks,\n  user,\n  votes\n}) => {\n  return (\n    <div style={{backgroundColor: '#DDE4E5', marginBottom: 30}}>\n      <ProjectHeader\n        name={name}\n        address={address}\n        photo={photo}\n        summary={summary}\n        location={location}\n        cost={cost}\n        reputationCost={reputationCost}\n      />\n      <div style={{padding: 10}}>\n        <div>\n          <div>\n            Voting Period Expires: <strong>{typeof date !== 'undefined' ? `${date}` : 'N/A'}</strong>\n            <br />One week before this date you may no longer submit votes but you may reveal them.\n          </div>\n        </div>\n        <div style={{display: 'flex', flexDirection: 'column', backgroundColor: '#FCFCFC', marginTop: 30}}>\n          <Table dataSource={tasks} columns={columns} pagination={false} />\n        </div>\n      </div>\n      {votes}\n      <ButtonCheckFinal\n        user={user}\n        address={address}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { rewardValidator } from '../../actions/taskActions'\n\nconst ButtonRewardValidator = (props) => {\n  return (<Button\n    disabled={props.project.valRewarded === undefined || props.project.valRewarded[props.i] === undefined || props.project.valRewarded[props.i].rewarded}\n    type='danger'\n    onClick={() => props.rewardValidator(props.address, props.i, {from: props.user}, props.state)}>\n    {`Reward ${props.type} Validator`}\n  </Button>)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[ownProps.state][ownProps.address]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    rewardValidator: (address, index, txObj, state) => dispatch(rewardValidator(address, index, txObj, state))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonRewardValidator)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { rewardTask } from '../../actions/taskActions'\n\nconst ButtonRewardTask = (props) => {\n  return (<Button\n    disabled={props.tasks[props.i].claimer.account !== props.user || props.tasks[props.i].workerRewarded}\n    type='danger'\n    onClick={() => props.rewardTask(props.address, props.i, {from: props.user}, props.state)}>\n    Reward Task\n  </Button>)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[ownProps.state][ownProps.address]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    rewardTask: (address, index, txObj, state) => dispatch(rewardTask(address, index, txObj, state))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonRewardTask)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { commitVote } from '../../actions/taskActions'\nimport { utils } from 'ethers'\nimport { P, T } from '../../utilities/blockchain'\nimport * as _ from 'lodash'\n\nconst ButtonCommitVote = (props) => {\n  let disabled\n  _.find(props.votes, function (vote) { return vote.task.index === props.i && vote.project === props.address }) !== undefined\n    ? disabled = true\n    : disabled = false\n  async function commitVote () {\n    let status\n    props.status === 'Yes'\n      ? status = '1'\n      : status = '0'\n    let salt = Math.floor(Math.random() * Math.floor(1000000000000000000000)).toString() // get random salt between 0 and 10000\n    // convert status and salt to strings\n    // let salt = 10000\n    // let salt = ethUtil.bufferToHex(ethUtil.setLengthLeft(10000, 32))\n    // console.log(salt, 'waw')\n    // status = ethUtil.bufferToHex(ethUtil.setLengthLeft(status, 32))\n    // console.log(status + salt)\n    // props.storeVote(i, status, salt)\n    // let vote = {key: i, status, salt, revealed: false, rescued: false}\n    // this.setState({votes: Object.assign({}, this.state.votes, {[i]: vote})})\n    let secretHash = utils.solidityKeccak256(['int', 'int'], [status, salt])\n    // console.log(i, type, status, this.state['tokVal' + i], this.state['repVal' + i])\n    // console.log(props.users)\n    let taskAddr = await P.at(props.address).tasks(props.i)\n    let task = await T.at(taskAddr)\n    let pollID = await task.pollId()\n    props.commitVote(props.type, props.address, props.i, props.input, secretHash, status, salt, pollID, {from: props.user})\n  }\n  return (<Button\n    type='danger'\n    disabled={disabled}\n    onClick={() => commitVote()}>\n    {`${props.status}`}\n  </Button>)\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    votes: state.user.votes\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    commitVote: (collateralType, projectAddress, taskIndex, value, secretHash, vote, salt, pollID, txObj) => dispatch(commitVote(collateralType, projectAddress, taskIndex, value, secretHash, vote, salt, pollID, txObj))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonCommitVote)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { revealVote } from '../../actions/taskActions'\n\nconst ButtonRevealVote = (props) => {\n  return (<Button\n    type='danger'\n    onClick={() => props.revealVote(props.type, props.address, props.i, props.status, parseInt(props.salt, 10), {from: props.user})}>\n    {`Reveal Vote (${props.type === 'tokens' ? 'T' : 'R'}${props.status ? '' : 'A'})`}\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    revealVote: (collateralType, projectAddress, taskIndex, vote, salt, txObj) => dispatch(revealVote(collateralType, projectAddress, taskIndex, vote, salt, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonRevealVote)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport VoteComponent from '../../components/project/5Vote'\nimport { Icon } from 'antd'\nimport { eth, web3, P } from '../../utilities/blockchain'\nimport { getUserValidations } from '../../actions/taskActions'\nimport ButtonRewardValidator from '../../contractComponents/stage5/RewardValidator'\nimport ButtonRewardTask from '../../contractComponents/stage5/RewardTask'\nimport ButtonCommitVote from '../../contractComponents/stage5/CommitVote'\nimport ButtonRevealVote from '../../contractComponents/stage5/RevealVote'\nimport * as _ from 'lodash'\n\nclass VoteTasks extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      tasks: [],\n      votes: {},\n      nextDeadline: ''\n    }\n  }\n\n  componentWillMount () {\n    this.getUserValidations()\n    this.getNextDeadline()\n  }\n\n  async getUserValidations () {\n    eth.getAccounts(async (err, accounts) => {\n      if (!err) {\n        this.props.getUserValidations(this.props.address, accounts[0], 5)\n      }\n    })\n  }\n\n  async getNextDeadline () {\n    let nextDeadline = await P.at(this.props.address).nextDeadline() * 1000\n    this.setState({nextDeadline: new Date(parseInt(nextDeadline))})\n  }\n\n  onChange (e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  render () {\n    let tasks, votes\n    if (typeof this.props.tasks !== 'undefined') {\n      tasks = this.props.tasks.slice(0).sort(function (a, b) {\n        return a.index - b.index\n      })\n      tasks = tasks.map((task, i) => {\n        votes = _.filter(this.props.votes, (vote) => {\n          if (vote.task.id !== undefined) {\n            return vote.task.id === task.id ? vote : null\n          } else {\n            return vote.task.index === task.index ? vote : null\n          }\n        })\n        let rewardVal, rewardWork, needsVote\n        if (tasks[i].validationRewardClaimable) {\n          if (tasks[i].workerRewardClaimable) {\n            // validators and workers can claim\n            // check to see if user can claim, then once they claim turn off the button\n            // pull validations from task, filtered by current metamask address\n            rewardVal =\n              <div>\n                <ButtonRewardValidator\n                  type='Yes'\n                  user={this.props.user}\n                  address={this.props.address}\n                  i={i}\n                  state={5}\n                />\n              </div>\n            rewardWork =\n              <div>\n                <ButtonRewardTask\n                  user={this.props.user}\n                  address={this.props.address}\n                  tasks={tasks}\n                  i={i}\n                  state={5}\n                />\n              </div>\n            needsVote = <Icon type='close' />\n          } else {\n            // validators can claim, task fails\n            rewardVal =\n              <div>\n                <ButtonRewardValidator\n                  type='No'\n                  user={this.props.user}\n                  address={this.props.address}\n                  i={i}\n                  state={5}\n                />\n              </div>\n            rewardWork = <Icon type='close' />\n            needsVote = <Icon type='close' />\n          }\n        } else if (task.complete === false) {\n          rewardVal = <Icon type='close' />\n          rewardWork = <Icon type='close' />\n          needsVote = <Icon type='close' />\n          votes = <div>This task was never completed.</div>\n        } else {\n          // vote needs to happen\n          rewardVal = <Icon type='clock-circle-o' />\n          rewardWork = <Icon type='clock-circle-o' />\n          votes = votes.map((vote, i) => {\n            return !vote.revealed\n              ? <div key={i}>\n                <div>\n                  <div>{`Poll ID: ${vote.pollID}`}</div>\n                  <div>{`Amount: ${vote.amount}`}</div>\n                  <div>{`Salt: ${vote.salt}`}</div>\n                  <div>{`Vote: ${parseInt(vote.vote, 10) ? 'Approve' : 'Deny'}`}</div>\n                  { vote.type === 'tokens'\n                    ? parseInt(vote.vote, 10)\n                      ? (<ButtonRevealVote\n                        user={this.props.user}\n                        address={this.props.address}\n                        i={vote.task.index}\n                        type='tokens'\n                        status={1}\n                        salt={vote.salt}\n                        revealed={vote.revealed}\n                      />)\n                      : (<ButtonRevealVote\n                        user={this.props.user}\n                        address={this.props.address}\n                        i={task.index}\n                        type='tokens'\n                        status={0}\n                        salt={vote.salt}\n                        revealed={vote.revealed}\n                      />)\n                    : parseInt(vote.vote, 10)\n                      ? (<ButtonRevealVote\n                        user={this.props.user}\n                        address={this.props.address}\n                        i={vote.task.index}\n                        type='reputation'\n                        status={1}\n                        salt={vote.salt}\n                        revealed={vote.revealed}\n                      />)\n                      : (<ButtonRevealVote\n                        user={this.props.user}\n                        address={this.props.address}\n                        i={vote.task.index}\n                        type='reputation'\n                        status={0}\n                        salt={vote.salt}\n                        revealed={vote.revealed}\n                      />)\n                  }\n                </div>\n              </div> : null\n          })\n          needsVote =\n            <div>\n              <div>\n                <input\n                  name={'tokVal' + i}\n                  placeholder='tokens'\n                  onChange={(e) => this.onChange(e)}\n                  value={this.state['tokVal' + i] || ''}\n                />\n                <ButtonCommitVote\n                  user={this.props.user}\n                  address={this.props.address}\n                  i={i}\n                  status='Yes'\n                  type='tokens'\n                  input={this.state['tokVal' + i]}\n                />\n                <ButtonCommitVote\n                  user={this.props.user}\n                  address={this.props.address}\n                  i={i}\n                  status='No'\n                  type='tokens'\n                  input={this.state['tokVal' + i]}\n                />\n              </div>\n              <div>\n                <input\n                  name={'repVal' + i}\n                  placeholder='reputation'\n                  onChange={(e) => this.onChange(e)}\n                  value={this.state['repVal' + i] || ''}\n                />\n                <ButtonCommitVote\n                  user={this.props.user}\n                  address={this.props.address}\n                  i={i}\n                  status='Yes'\n                  type='reputation'\n                  input={this.state['repVal' + i]}\n                />\n                <ButtonCommitVote\n                  user={this.props.user}\n                  address={this.props.address}\n                  i={i}\n                  status='No'\n                  type='reputation'\n                  input={this.state['repVal' + i]}\n                />\n              </div>\n            </div>\n        }\n\n        return {\n          key: i,\n          description: task.description,\n          ethReward: `${(parseFloat(web3.fromWei(Math.ceil(this.props.project.weiCost / 1.05) * (task.weighting / 100), 'ether')).toFixed(5))} ETH`,\n          rewardValidator: rewardVal,\n          rewardWorker: rewardWork,\n          taskNeedsVote: needsVote,\n          votes: votes\n        }\n      })\n    } else {\n      tasks = []\n    }\n\n    return (\n      <VoteComponent\n        name={this.props.project.name}\n        address={this.props.address}\n        photo={this.props.project.photo}\n        summary={this.props.project.summary}\n        location={this.props.project.location}\n        cost={web3.fromWei(Math.ceil(this.props.project.weiCost / 1.05), 'ether')}\n        reputationCost={this.props.project.reputationCost}\n        date={this.state.nextDeadline}\n        tasks={tasks}\n        user={this.props.user}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[5][ownProps.address],\n    tasks: state.projects[5][ownProps.address].tasks,\n    votes: state.user.votes\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUserValidations: (address, user, state) => dispatch(getUserValidations(address, user, state))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VoteTasks)\n","import React from 'react'\n// import { Button } from 'antd'\nimport Sidebar from '../components/shared/Sidebar'\nimport Project from './project/5Vote'\n// import fastforward from '../utilities/fastforward'\nimport { connect } from 'react-redux'\nimport { eth } from '../utilities/blockchain'\nimport { getProjects } from '../actions/projectActions'\nimport { getUserVotes } from '../actions/userActions'\n\nimport gql from 'graphql-tag'\n\nlet projQuery = gql`\n  { allProjectsinState(state: 5){\n      address,\n      id,\n      ipfsHash,\n      location,\n      name,\n      tasks {\n        id,\n        address,\n        claimer {\n          account\n        },\n        claimed,\n        claimedAt,\n        complete,\n        description,\n        index,\n        hash,\n        weighting,\n        validationRewardClaimable,\n        workerRewardClaimable,\n        workerRewarded\n      }\n      nextDeadline,\n      photo,\n      reputationBalance,\n      reputationCost,\n      summary,\n      tokenBalance,\n      weiBal,\n      weiCost\n    }\n  }`\n\nclass Vote extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      projects: []\n    }\n    // this.fastForward = this.fastForward.bind(this)\n  }\n\n  componentWillMount () {\n    this.getProjects()\n    this.getVotes()\n  }\n\n  async getProjects () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getProjects()\n          this.setState({user: result[0]})\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  getVotes () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getUserVotes(result[0])\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  // async fastForward () {\n  //   await fastforward(7 * 24 * 60 * 60)\n  // }\n\n  getPrevPollID (numTokens, user) {\n    let pollInfo = this.props.users[user] // get object of poll data w/pollID's as keys\n    if (typeof pollInfo === 'undefined') return 0\n    let keys = Object.keys(pollInfo)\n    let currPollID = 0\n    let currNumTokens = 0\n    // iterate through all poll info\n    for (let i = 0; i < keys.length; i++) {\n      // if pollInfo at index has less than or equal tokens to the number of tokens being inserted and the curr poss num tokens is greater than currHolder than inser\n      if ((pollInfo[keys[i]].numTokens <= numTokens) && (pollInfo[keys[i]].numTokens > currNumTokens)) {\n        currNumTokens = pollInfo[keys[i]].numTokens\n        currPollID = keys[i]\n      }\n    }\n    return currPollID\n  }\n\n  render () {\n    const projects = typeof this.props.projects !== `undefined`\n      ? Object.keys(this.props.projects).map((address, i) => {\n        return <Project\n          key={i}\n          index={i}\n          address={address}\n          project={this.props.projects[address]}\n          user={this.state.user}\n        />\n      })\n      : []\n    return (\n      <div>\n        <Sidebar />\n        <div style={{marginLeft: 200, marginBottom: 30}}>\n          <header className='App-header'>\n            <h3>Vote Tasks</h3>\n            { /* <Button type='danger' onClick={this.fastForward}>fast forward 1 week</Button>\n            <h6>ONLY DO THIS IF YOU ARE READY TO MOVE EVERY PROJECT TO THE NEXT STATE</h6>\n            <h6>IF A PROJECT HAS UNCLAIMED TASKS IT WILL FAIL AND YOU WILL LOSE YOUR STAKED TOKENS</h6> */ }\n          </header>\n          <div style={{paddingLeft: '30px', paddingRight: '30px'}}>\n            {projects}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: state.projects[5]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjects: () => dispatch(getProjects(5, projQuery)),\n    getUserVotes: (account) => dispatch(getUserVotes(account))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vote)\n","import React from 'react'\nimport ProjectHeader from '../shared/ProjectHeader'\nimport { Table } from 'antd'\n\nconst columns = [{\n  title: 'Task Description',\n  dataIndex: 'description',\n  key: 'description'\n}, {\n  title: 'ETH Reward',\n  dataIndex: 'ethReward',\n  key: 'ethReward'\n}, {\n  title: 'Reward Validator?',\n  dataIndex: 'rewardValidator',\n  key: 'rewardValidator'\n}, {\n  title: 'Reward Worker?',\n  dataIndex: 'rewardWorker',\n  key: 'rewardWorker'\n}, {\n  title: 'Rescue Vote?',\n  dataIndex: 'rescueVote',\n  key: 'rescueVote'\n}]\n\nexport default ({\n  name,\n  address,\n  photo,\n  summary,\n  location,\n  cost,\n  reputationCost,\n  state,\n  tasks,\n  votes\n}) => {\n  return (\n    <div style={{backgroundColor: '#DDE4E5', marginBottom: 30}}>\n      <ProjectHeader\n        name={name}\n        address={address}\n        photo={photo}\n        summary={summary}\n        location={location}\n        cost={cost}\n        reputationCost={reputationCost}\n      />\n      <div style={{padding: 10}}>\n        <div style={{display: 'flex', flexDirection: 'column', backgroundColor: '#FCFCFC', marginTop: 30}}>\n          <Table dataSource={tasks} columns={columns} pagination={false} />\n        </div>\n      </div>\n      {votes}\n    </div>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport { rescueVote } from '../../actions/taskActions'\n\nconst ButtonRescueVote = (props) => {\n  return (<Button\n    type='danger'\n    onClick={() => props.rescueVote(props.type, props.address, props.i, {from: props.user})}>\n    {`Rescue (${props.type === 'tokens' ? 'T' : 'R'})`}\n  </Button>)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    rescueVote: (collateralType, projectAddress, taskIndex, txObj) => dispatch(rescueVote(collateralType, projectAddress, taskIndex, txObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ButtonRescueVote)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport FinishedComponent from '../../components/project/Finished'\nimport { getUserValidations } from '../../actions/taskActions'\nimport ButtonRewardValidator from '../../contractComponents/stage5/RewardValidator'\nimport ButtonRewardTask from '../../contractComponents/stage5/RewardTask'\nimport ButtonRescueVote from '../../contractComponents/stage5/RescueVote'\nimport { web3, eth, P } from '../../utilities/blockchain'\nimport { Icon } from 'antd'\nimport * as _ from 'lodash'\n\nclass FinishedProject extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      tasks: [],\n      nextDeadline: ''\n    }\n  }\n\n  componentWillMount () {\n    this.getUserValidations()\n    this.getNextDeadline()\n  }\n\n  async getUserValidations () {\n    eth.getAccounts(async (err, accounts) => {\n      if (!err) {\n        this.props.getUserValidations(this.props.address, accounts[0], this.props.state)\n      }\n    })\n  }\n\n  async getNextDeadline () {\n    let nextDeadline = await P.at(this.props.address).nextDeadline() * 1000\n    this.setState({nextDeadline: new Date(parseInt(nextDeadline))})\n  }\n\n  render () {\n    let tasks, votes\n    if (typeof this.props.tasks !== 'undefined') {\n      tasks = this.props.tasks.slice(0).sort(function (a, b) {\n        return a.index - b.index\n      })\n      tasks = tasks.map((task, i) => {\n        votes = _.filter(this.props.votes, (vote) => { return vote.task.id === task.id ? vote : null })\n        let rewardVal, rewardWork, rescueVote\n        task.validationRewardClaimable\n          ? rewardVal =\n            <div>\n              <ButtonRewardValidator\n                type='Yes'\n                user={this.props.user}\n                address={this.props.address}\n                i={i}\n                state={this.props.state}\n              />\n            </div>\n          : rewardVal =\n            <Icon type='close' />\n\n        task.workerRewardClaimable\n          ? rewardWork =\n            <div>\n              <ButtonRewardTask\n                user={this.props.user}\n                address={this.props.address}\n                tasks={tasks}\n                i={i}\n                state={this.props.state}\n              />\n            </div>\n          : rewardWork =\n            <Icon type='close' />\n        votes.length !== 0 && !votes[0].revealed && !votes[0].rescued\n          ? rescueVote =\n            <div>\n              <ButtonRescueVote\n                user={this.props.user}\n                address={this.props.address}\n                i={i}\n                type={votes[0].type}\n              />\n            </div>\n          : rescueVote =\n            <Icon type='close' />\n\n        return {\n          key: i,\n          description: task.description,\n          ethReward: `${web3.fromWei(this.props.project.weiCost) * (task.weighting / 100)} ETH`,\n          rewardValidator: rewardVal,\n          rewardWorker: rewardWork,\n          rescueVote: rescueVote,\n          votes: votes\n        }\n      })\n    } else {\n      tasks = []\n    }\n\n    return (\n      <FinishedComponent\n        name={this.props.project.name}\n        address={this.props.address}\n        photo={this.props.project.photo}\n        summary={this.props.project.summary}\n        location={this.props.project.location}\n        cost={web3.fromWei(this.props.project.cost, 'ether')}\n        reputationCost={this.props.project.reputationCost}\n        date={this.state.nextDeadline}\n        user={this.props.user}\n        tasks={tasks}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: state.projects[ownProps.state][ownProps.address],\n    tasks: state.projects[ownProps.state][ownProps.address].tasks,\n    votes: state.user.votes\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getUserValidations: (address, user, state) => dispatch(getUserValidations(address, user, state))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishedProject)\n","import React from 'react'\nimport Sidebar from '../../components/shared/Sidebar'\nimport Project from '../project/Finished'\nimport { connect } from 'react-redux'\nimport { eth } from '../../utilities/blockchain'\nimport { getProjects } from '../../actions/projectActions'\nimport { getUserVotes } from '../../actions/userActions'\n\nimport gql from 'graphql-tag'\n\nlet projQuery = gql`\n  { allProjectsinState(state: 6){\n      address,\n      id,\n      ipfsHash,\n      location,\n      name,\n      tasks {\n        id,\n        address,\n        claimer {\n          account\n        },\n        claimed,\n        claimedAt,\n        complete,\n        description,\n        index,\n        hash,\n        weighting,\n        validationRewardClaimable,\n        workerRewardClaimable,\n        workerRewarded\n      }\n      nextDeadline,\n      photo,\n      reputationBalance,\n      reputationCost,\n      summary,\n      tokenBalance,\n      weiBal,\n      weiCost\n    }\n  }`\n\nclass Complete extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      projects: []\n    }\n  }\n\n  componentWillMount () {\n    this.getProjects()\n    this.getVotes()\n  }\n\n  async getProjects () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getProjects()\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  getVotes () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getUserVotes(result[0])\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  render () {\n    const projects = typeof this.props.projects !== `undefined`\n      ? Object.keys(this.props.projects).map((address, i) => {\n        return <Project\n          key={i}\n          index={i}\n          address={address}\n          project={this.props.projects[address]}\n          state={6}\n        />\n      })\n      : []\n    return (\n      <div>\n        <Sidebar />\n        <div style={{marginLeft: 200, marginBottom: 30}}>\n          <header className='App-header'>\n            <h3>Completed Projects</h3>\n          </header>\n          <div style={{paddingLeft: '30px', paddingRight: '30px'}}>\n            {projects}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: state.projects[6]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjects: () => dispatch(getProjects(6, projQuery)),\n    getUserVotes: (account) => dispatch(getUserVotes(account))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Complete)\n","import React from 'react'\nimport Sidebar from '../../components/shared/Sidebar'\nimport Project from '../project/Finished'\nimport { connect } from 'react-redux'\nimport { eth } from '../../utilities/blockchain'\nimport { getProjects } from '../../actions/projectActions'\nimport { getUserVotes } from '../../actions/userActions'\n\nimport gql from 'graphql-tag'\n\nlet projQuery = gql`\n  { allProjectsinState(state: 7){\n      address,\n      id,\n      ipfsHash,\n      location,\n      name,\n      tasks {\n        id,\n        address,\n        claimer {\n          account\n        },\n        claimed,\n        claimedAt,\n        complete,\n        description,\n        index,\n        hash,\n        weighting,\n        validationRewardClaimable,\n        workerRewardClaimable,\n        workerRewarded\n      }\n      nextDeadline,\n      photo,\n      reputationBalance,\n      reputationCost,\n      summary,\n      tokenBalance,\n      weiBal,\n      weiCost\n    }\n  }`\n\nclass Failed extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      projects: []\n    }\n  }\n\n  componentWillMount () {\n    this.getProjects()\n    this.getVotes()\n  }\n\n  async getProjects () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getProjects()\n          this.setState({user: result[0]})\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  getVotes () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getUserVotes(result[0])\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  render () {\n    const projects = typeof this.props.projects !== `undefined`\n      ? Object.keys(this.props.projects).map((address, i) => {\n        return <Project\n          key={i}\n          index={i}\n          address={address}\n          user={this.state.user}\n          project={this.props.projects[address]}\n          state={7}\n        />\n      })\n      : []\n    return (\n      <div>\n        <Sidebar />\n        <div style={{marginLeft: 200, marginBottom: 30}}>\n          <header className='App-header'>\n            <h3>Failed Projects</h3>\n          </header>\n          <div style={{paddingLeft: '30px', paddingRight: '30px'}}>\n            {projects}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: state.projects[7]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjects: () => dispatch(getProjects(7, projQuery)),\n    getUserVotes: (account) => dispatch(getUserVotes(account))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Failed)\n","import React from 'react'\nimport ProjectHeader from '../shared/ProjectHeader'\nimport { web3 } from '../../utilities/blockchain'\n\nexport default ({\n  project\n}) => {\n  return (\n    <div style={{backgroundColor: '#DDE4E5', marginBottom: 30}}>\n      <ProjectHeader\n        name={project.name}\n        address={project.address}\n        photo={project.photo}\n        summary={project.summary}\n        location={project.location}\n        cost={web3.fromWei(project.weiCost, 'ether')}\n        reputationCost={project.reputationCost}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport Sidebar from '../../components/shared/Sidebar'\nimport Project from '../../components/project/Expired'\nimport { connect } from 'react-redux'\nimport { eth } from '../../utilities/blockchain'\nimport { getProjects } from '../../actions/projectActions'\n\nimport gql from 'graphql-tag'\n\nlet projQuery = gql`\n  { allProjectsinState(state: 8){\n      address,\n      id,\n      ipfsHash,\n      location,\n      name,\n      tasks {\n        id,\n        address,\n        claimer {\n          account\n        },\n        claimed,\n        claimedAt,\n        complete,\n        description,\n        index,\n        hash,\n        weighting,\n        validationRewardClaimable,\n        workerRewardClaimable,\n        workerRewarded\n      }\n      nextDeadline,\n      photo,\n      reputationBalance,\n      reputationCost,\n      summary,\n      tokenBalance,\n      weiBal,\n      weiCost\n    }\n  }`\n\nclass Expired extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      projects: []\n    }\n  }\n\n  componentWillMount () {\n    this.getProjects()\n  }\n\n  async getProjects () {\n    eth.getAccounts(async (err, result) => {\n      if (!err) {\n        if (result.length) {\n          this.props.getProjects()\n          this.setState({user: result[0]})\n        } else {\n          console.log('Please Unlock MetaMask')\n        }\n      }\n    })\n  }\n\n  render () {\n    const projects = typeof this.props.projects !== `undefined`\n      ? Object.keys(this.props.projects).map((address, i) => {\n        return <Project\n          key={i}\n          index={i}\n          address={address}\n          user={this.state.user}\n          project={this.props.projects[address]}\n        />\n      })\n      : []\n    return (\n      <div>\n        <Sidebar />\n        <div style={{marginLeft: 200, marginBottom: 30}}>\n          <header className='App-header'>\n            <h3>Expired Projects</h3>\n          </header>\n          <div style={{paddingLeft: '30px', paddingRight: '30px'}}>\n            {projects}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: state.projects[8]\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProjects: () => dispatch(getProjects(8, projQuery))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Expired)\n","import { distributeClientID, distributePK } from '../private'\nimport { Connect, SimpleSigner } from 'uport-connect'\n\nconst uport = new Connect('distribute')\n  /*, {\n  clientId: distributeClientID,\n  network: 'rinkeby'\n  // signer: SimpleSigner(distributePK)\n})*/\n\nexport default uport\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { eth } from '../utilities/blockchain'\nimport uport from '../utilities/uport'\nimport { Button } from 'antd'\nimport { loginUser } from '../actions/userActions'\nimport { getNetworkStatus } from '../actions/networkActions'\n\nclass Landing extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      metamask: false\n    }\n    this.getUport = this.getUport.bind(this)\n    this.checkMetamaskConnected = this.checkMetamaskConnected.bind(this)\n    this.checkMetamask = this.checkMetamask.bind(this)\n  }\n\n  componentWillMount () {\n    this.checkMetamaskConnected()\n  }\n\n  checkMetamaskConnected () {\n    if (!this.state.metamask && window.ethereum._metamask.isEnabled()) {\n      this.checkMetamask()\n    } else if (!window.ethereum._metamask.isEnabled()) {\n      window.ethereum.enable()\n    }\n    setTimeout(() => {\n      this.checkMetamaskConnected()\n    }, 1000)\n  }\n\n  checkMetamask () {\n    eth.getAccounts(async (err, accounts) => {\n      if (!err) {\n        this.setState({metamask: accounts.length})\n      }\n    })\n  }\n\n  getUport () {\n    if (this.state.metamask) {\n      const reqObj = {\n        requested: ['name', 'avatar', 'country'],\n        notifications: true\n      } \n      uport.requestDisclosure(reqObj)\n      uport.onResponse('disclosureReq').then(res => { \n        this.props.getNetworkStatus()\n        this.props.loginUser(res.payload)\n      })\n    } else {\n      alert('please consent to metamask')\n    }\n  }\n\n  render () {\n    return (\n      <div style={{padding: 30}}>\n        <h1 className='display-3'>Welcome to Distribute</h1>\n        <hr className='my-2' />\n        <p>You need a uPort to continue. You can download the mobile app with one of the links below.</p>\n        <p>Upon login, you will be prompted to receive your first reputation points.</p>\n        <span>\n          <a href='https://itunes.apple.com/us/app/uport-identity-wallet-ethereum/id1123434510?mt=8'>uPort iOS</a>\n          <span> | </span>\n          <a href='https://play.google.com/store/apps/details?id=com.uportMobile'>uPort Android</a>\n        </span>\n\n        <p className='lead' style={{marginTop: 30, alignItems: 'center'}}>\n          <Button color='primary' onClick={this.getUport}>\n            Connect with uPort\n          </Button>\n        </p>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginUser: (credentials) => dispatch(loginUser(credentials)),\n    getNetworkStatus: () => dispatch(getNetworkStatus())\n  }\n}\nexport default connect(null, mapDispatchToProps)(Landing)\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Status from './Status'\n// import CurrentProjects from './CurrentProjects'\nimport Propose from './0Propose'\nimport Stake from './1Stake'\nimport Add from './2Add'\nimport Claim from './3Claim'\nimport Validate from './4Validate'\nimport Vote from './5Vote'\nimport Complete from './finished/Complete'\nimport Failed from './finished/Failed'\nimport Expired from './finished/Expired'\nimport Landing from './Landing'\n\nconst Main = () =>\n  <main>\n    <Switch>\n      <Route exact path='/' component={Landing} />\n      <Route path='/status' component={Status} />\n      {/* <Route path='/projects' component={CurrentProjects} /> */}\n      <Route path='/propose' component={Propose} />\n      <Route path='/stake' component={Stake} />\n      <Route path='/add' component={Add} />\n      <Route path='/claim' component={Claim} />\n      <Route path='/validate' component={Validate} />\n      <Route path='/vote' component={Vote} />\n      <Route path='/complete' component={Complete} />\n      <Route path='/failed' component={Failed} />\n      <Route path='/expired' component={Expired} />\n    </Switch>\n  </main>\n\nexport default Main\n","import React from 'react'\nimport Main from './containers/Main'\n// import logo from './logo.svg';\nimport './App.css'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <div style={{backgroundColor: '#FCFCFC'}}>\n        <Main />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  route: '/'\n}\n\nfunction navigationReducer (state = initialState, action) {\n  // For now, don't handle any actions\n  // and just return the state given to us.\n  // console.log('navigationReducer')\n  return state\n}\n\nexport default navigationReducer\n","export const VOTE_COMMITTED = 'VOTE_COMMITTED'\nexport const VOTE_REVEALED = 'VOTE_REVEALED'\nexport const VOTE_RESCUED = 'VOTE_RESCUED'\n","import { LOGGED_IN_USER, LOGOUT_USER, USER_STATUS_RECEIVED, REGISTERED_USER, USER_VOTES_RECEIVED } from '../constants/UserActionTypes'\nimport { TOKENS_MINTED, TOKENS_SOLD } from '../constants/TokenActionTypes'\nimport { VOTE_COMMITTED, VOTE_REVEALED } from '../constants/PollActionTypes'\nimport * as _ from 'lodash'\n\nconst initialState = {\n  userTokens: 0,\n  userReputation: 0,\n  registering: false,\n  votes: []\n}\n\nexport default function userReducer (state = initialState, action) {\n  switch (action.type) {\n    case REGISTERED_USER:\n      return Object.assign({}, state, {userReputation: 10000, registering: true})\n    case LOGGED_IN_USER:\n      return Object.assign({}, state, {user: action.userObj})\n    case LOGOUT_USER:\n      return Object.assign({}, state, {user: {}})\n    case USER_STATUS_RECEIVED:\n      if (!action.responseDetails.data.user) {\n        return state\n      } else {\n        return Object.assign({}, state, {userTokens: action.responseDetails.data.user.tokenBalance, userReputation: action.responseDetails.data.user.reputationBalance})\n      }\n    case TOKENS_MINTED:\n      return Object.assign({}, state, {userTokens: state.userTokens + action.receipt.amountMinted.toNumber()})\n    case TOKENS_SOLD:\n      return Object.assign({}, state, {userTokens: state.userTokens - action.receipt.amountWithdrawn.toNumber()})\n    case USER_VOTES_RECEIVED:\n      return Object.assign({}, state, {votes: action.votes})\n    case VOTE_COMMITTED:\n      let length = state.votes.length\n      let newState = Object.assign([], state.votes, {[length]: {project: action.voteDetails.projectAddress, amount: action.voteDetails.value, task: {index: action.voteDetails.taskIndex}, rescued: false, revealed: false, salt: action.voteDetails.salt, type: action.voteDetails.type, pollID: action.voteDetails.txReceipt.logs[0].args.pollId.toNumber(), vote: action.voteDetails.vote}})\n      return Object.assign({}, state, {votes: newState})\n    case VOTE_REVEALED:\n      let index = _.findIndex(state.votes, function (vote) {\n        return vote.task.index === action.voteDetails.taskIndex && vote.project === action.voteDetails.projectAddress\n      })\n      let vote = Object.assign({}, state.votes[index], {revealed: true})\n      newState = Object.assign([], state.votes, {[index]: vote})\n      return Object.assign({}, state, {votes: newState})\n    default:\n  }\n  return state\n}\n","import { VOTE_COMMITTED, VOTE_REVEALED } from '../constants/PollActionTypes'\n\nconst initialState = {\n  allUsers: {}\n}\n\nexport default function pollReducer (state = initialState, action) {\n  let allUsers, poll, voter, status, pollID, salt, numTokens\n  let updateAllUsers = (state, user, poll) => {\n    allUsers = Object.assign({}, state.allUsers, {[user]: poll})\n    return Object.assign({}, state, {allUsers})\n  }\n  switch (action.type) {\n    case VOTE_COMMITTED:\n      ({status, voter, pollID, salt, numTokens} = action.voteDetails)\n      poll = Object.assign({}, state.allUsers[voter], {[pollID]: {salt: salt, status: status, numTokens: numTokens}})\n      return updateAllUsers(state, voter, poll)\n    case VOTE_REVEALED:\n      return state\n    default:\n  }\n  return state\n}\n","import { NETWORK_STATUS_RECEIVED } from '../constants/NetworkActionTypes'\nimport { TOKENS_MINTED, TOKENS_SOLD } from '../constants/TokenActionTypes'\nimport { REGISTERED_USER } from '../constants/UserActionTypes'\n\nconst initialState = {\n  totalTokens: 0,\n  totalReputation: 0,\n  userTokens: 0,\n  userReputation: 0\n}\n\nexport default function networkReducer (state = initialState, action) {\n  switch (action.type) {\n    case NETWORK_STATUS_RECEIVED:\n      if (!action.responseDetails.data.network) {\n        return state\n      } else {\n        return Object.assign({}, state, {totalTokens: action.responseDetails.data.network.totalTokens, totalReputation: action.responseDetails.data.network.totalReputation})\n      }\n    case REGISTERED_USER:\n      return Object.assign({}, state, {totalReputation: state.totalReputation + 10000})\n    case TOKENS_MINTED:\n      return Object.assign({}, state, {totalTokens: state.totalTokens + action.receipt.amountMinted.toNumber()})\n    case TOKENS_SOLD:\n      return Object.assign({}, state, {totalTokens: state.totalTokens - action.receipt.amountWithdrawn.toNumber()})\n    default:\n  }\n  return state\n}\n","import { PROJECTS_RECEIVED, TASK_LIST_SET, HASHED_TASK_LIST_SUBMITTED, PROJECT_STAKED, PROJECT_UNSTAKED, VERIFIED_TASK_LISTS_RECEIVED, PROPOSER_REWARDED } from '../constants/ProjectActionTypes'\nimport { FINAL_TASK_LIST_SUBMITTED, VALIDATIONS_RECEIVED, TASK_CLAIMED, TASK_COMPLETED, TASK_VALIDATED, VALIDATOR_REWARDED, TASK_REWARDED, USER_VALIDATIONS_RECEIVED } from '../constants/TaskActionTypes'\n\nconst initialState = {\n}\n\nexport default function projectReducer (state = initialState, action) {\n  switch (action.type) {\n    case PROJECTS_RECEIVED:\n      if (!action.projects.length) {\n        return state\n      } else {\n        let object = action.projects.reduce((obj, item) => (obj[item.address] = item, obj), {})\n        return Object.assign({}, state, {[action.state]: object})\n      }\n    case TASK_LIST_SET:\n      let project = Object.assign({}, state[2][action.projectAddress], {taskList: action.taskDetails})\n      let projects = Object.assign({}, state[2], {[action.projectAddress]: project})\n      return Object.assign({}, state, {2: projects})\n    case HASHED_TASK_LIST_SUBMITTED:\n      let oldSubmissions\n      typeof state[2][action.projectAddress].submittedTasks === 'undefined'\n        ? oldSubmissions = []\n        : oldSubmissions = state[2][action.projectAddress].submittedTasks\n      let newSubmissions = oldSubmissions\n      let overwrite = oldSubmissions.findIndex(function (element) { return element.submitter === action.submitterAddress })\n      if (overwrite === -1) {\n        let length = newSubmissions.length\n        newSubmissions = Object.assign([], newSubmissions, {[length]: {content: action.tasks, submitter: action.submitterAddress, weighting: action.receipt}})\n      } else {\n        newSubmissions = Object.assign([], newSubmissions, {[overwrite]: {content: action.tasks, submitter: action.submitterAddress, weighting: action.receipt}})\n      }\n      project = Object.assign({}, state[2][action.projectAddress], {submittedTasks: newSubmissions})\n      projects = Object.assign({}, state[2], {[action.projectAddress]: project})\n      return Object.assign({}, state, {2: projects})\n    case PROJECT_STAKED:\n      if (action.collateralType === 'tokens') {\n        let weiBal = parseInt(state[1][action.result.projectAddress].weiBal, 10)\n        let weiChange = parseInt(action.result.weiChange, 10)\n        project = Object.assign({}, state[1][action.result.projectAddress], {weiBal: weiBal + weiChange, currentPrice: action.currentPrice})\n      } else if (action.collateralType === 'reputation') {\n        let repBalance = parseInt(state[1][action.result.projectAddress].reputationBalance, 10)\n        let repStaked = action.result.reputation.toNumber()\n        project = Object.assign({}, state[1][action.result.projectAddress], {reputationBalance: repBalance + repStaked, currentPrice: action.currentPrice})\n      }\n      projects = Object.assign({}, state[1], {[action.result.projectAddress]: project})\n      return Object.assign({}, state, {1: projects})\n    case PROJECT_UNSTAKED:\n      if (action.collateralType === 'tokens') {\n        let weiBal = parseInt(state[1][action.result.projectAddress].weiBal, 10)\n        let weiChange = parseInt(action.result.weiChange, 10)\n        project = Object.assign({}, state[1][action.result.projectAddress], {weiBal: weiBal - weiChange, currentPrice: action.currentPrice})\n      } else if (action.collateralType === 'reputation') {\n        let repBalance = parseInt(state[1][action.result.projectAddress].reputationBalance, 10)\n        let repStaked = action.result.reputation.toNumber()\n        project = Object.assign({}, state[1][action.result.projectAddress], {reputationBalance: repBalance - repStaked, currentPrice: action.currentPrice})\n      }\n      projects = Object.assign({}, state[1], {[action.result.projectAddress]: project})\n      return Object.assign({}, state, {1: projects})\n    case VERIFIED_TASK_LISTS_RECEIVED:\n      project = Object.assign({}, state[2][action.address], {submittedTasks: action.result})\n      projects = Object.assign({}, state[2], {[action.address]: project})\n      return Object.assign({}, state, {2: projects})\n    case PROPOSER_REWARDED:\n      project = Object.assign({}, state[2][action.projectAddress], {proposerRewarded: true})\n      projects = Object.assign({}, state[2], {[action.projectAddress]: project})\n      return Object.assign({}, state, {2: projects})\n    case FINAL_TASK_LIST_SUBMITTED:\n      project = Object.assign({}, state[3][action.address], {tasks: action.tasks, listSubmitted: true})\n      projects = Object.assign({}, state[3], {[action.address]: project})\n      return Object.assign({}, state, {3: projects})\n    case TASK_CLAIMED:\n      let task, tasks\n      task = Object.assign({}, state[3][action.address].tasks[action.index], {claimed: true})\n      tasks = Object.assign([], state[3][action.address].tasks, {[action.index]: task})\n      project = Object.assign({}, state[3][action.address], {tasks: tasks})\n      projects = Object.assign({}, state[3], {[action.address]: project})\n      return Object.assign({}, state, {3: projects})\n    case TASK_COMPLETED:\n      task = Object.assign({}, state[3][action.address].tasks[action.index], {complete: true})\n      tasks = Object.assign([], state[3][action.address].tasks, {[action.index]: task})\n      project = Object.assign({}, state[3][action.address], {tasks: tasks})\n      projects = Object.assign({}, state[3], {[action.address]: project})\n      return Object.assign({}, state, {3: projects})\n    // called for every task\n    case VALIDATIONS_RECEIVED:\n      let validation = []\n      // action.result.length is the number of validations for this task\n      for (let i = 0; i < action.result.length; i++) {\n        validation = Object.assign(validation, {[i]: {amount: action.result[i].amount, state: action.result[i].state, user: action.result[i].user}})\n      }\n      task = Object.assign({}, state[4][action.projectAddress].tasks[action.index], {validations: validation})\n      tasks = Object.assign([], state[4][action.projectAddress].tasks, {[action.index]: task})\n      project = Object.assign({}, state[4][action.projectAddress], {tasks: tasks})\n      projects = Object.assign({}, state[4], {[action.projectAddress]: project})\n      return Object.assign({}, state, {4: projects})\n    case USER_VALIDATIONS_RECEIVED:\n      let valRewarded = []\n      for (let i = 0; i < action.result.length; i++) {\n        valRewarded = Object.assign(valRewarded, {[action.result[i].task.index]: {state: action.result[i].state, rewarded: action.result[i].rewarded}})\n      }\n      project = Object.assign({}, state[action.state][action.projectAddress], {valRewarded: valRewarded})\n      projects = Object.assign({}, state[action.state], {[action.projectAddress]: project})\n      return Object.assign({}, state, {[action.state]: projects})\n    case TASK_VALIDATED:\n      validation = Object.assign([], state[4][action.address].tasks[action.taskIndex].validations, {[state[4][action.address].tasks[action.taskIndex].validations.length]: {amount: action.valFee.toNumber(), state: action.validationState, user: action.validator}})\n      task = Object.assign({}, state[4][action.address].tasks[action.taskIndex], {validations: validation})\n      tasks = Object.assign([], state[4][action.address].tasks, {[action.taskIndex]: task})\n      project = Object.assign({}, state[4][action.address], {tasks: tasks})\n      projects = Object.assign({}, state[4], {[action.address]: project})\n      return Object.assign({}, state, {4: projects})\n    case VALIDATOR_REWARDED:\n      valRewarded = Object.assign(state[action.state][action.projectAddress].valRewarded, {[action.index]: {rewarded: true}})\n      project = Object.assign({}, state[action.state][action.projectAddress], {valRewarded: valRewarded})\n      projects = Object.assign({}, state[action.state], {[action.projectAddress]: project})\n      return Object.assign({}, state, {[action.state]: projects})\n    case TASK_REWARDED:\n      task = Object.assign({}, state[action.state][action.projectAddress].tasks[action.index], {workerRewarded: true})\n      tasks = Object.assign([], state[action.state][action.projectAddress].tasks, {[action.index]: task})\n      project = Object.assign({}, state[action.state][action.projectAddress], {tasks: tasks})\n      projects = Object.assign({}, state[action.state], {[action.projectAddress]: project})\n      return Object.assign({}, state, {[action.state]: projects})\n    default:\n  }\n  return state\n}\n","import NavigationReducer from './NavigationReducer'\nimport userReducer from './userReducer'\nimport pollReducer from './pollReducer'\nimport networkReducer from './networkReducer'\nimport projectReducer from './projectReducer'\nimport { routerReducer } from 'react-router-redux'\nimport { combineReducers } from 'redux'\n\nconst Nemo = combineReducers({\n  navigation: NavigationReducer,\n  user: userReducer,\n  projects: projectReducer,\n  polls: pollReducer,\n  router: routerReducer,\n  network: networkReducer\n})\n\nexport default Nemo\n","import { GET_NETWORK_STATUS } from '../constants/NetworkActionTypes'\nimport { networkStatusReceived } from '../actions/networkActions'\nimport { map, mergeMap } from 'rxjs/operators'\nimport { client } from '../index'\nimport gql from 'graphql-tag'\n\nconst networkQuery = gql`\n  {\n    network {\n      totalTokens\n      totalReputation\n      currentPrice\n      ethPrice\n      weiBal\n    }\n  }\n`\nexport const getNetworkStatusEpic = action$ =>\n  action$.ofType(GET_NETWORK_STATUS).pipe(\n  // pull value from database\n    mergeMap(action => client.query({query: networkQuery})),\n    map(result => networkStatusReceived(result))\n  )\n","import { LOGIN_USER, REGISTER_USER, GET_USER_STATUS, GET_USER_VOTES } from '../constants/UserActionTypes'\nimport { userStatusReceived, loggedInUser, registerUser, registeredUser, userVotesReceived } from '../actions/userActions'\nimport { from, of, iif, concat, merge } from 'rxjs'\nimport { map, mergeMap, flatMap } from 'rxjs/operators'\nimport { client } from '../index'\nimport { web3, rr } from '../utilities/blockchain'\nimport { push } from 'react-router-redux'\nimport gql from 'graphql-tag'\nimport * as _ from 'lodash'\n\nconst getUserEpic = action$ => {\n  let credentials\n  let accounts\n  web3.eth.getAccounts((err, res) => {\n    if (err) return err\n    accounts = res\n  })\n  return action$.ofType(LOGIN_USER).pipe(\n    mergeMap(action => {\n      credentials = action.credentials\n      let query = gql`\n        query ($account: String!) {\n          user(account: $account) {\n            id,\n            reputationBalance\n          }\n        }\n      `\n      return client.query({query, variables: {account: accounts[0]}})\n    }),\n    flatMap(result => {\n      return iif(\n        () => !result.data.user || result.data.user.reputationBalance === 0,\n        of(registerUser(credentials, accounts[0])),\n        concat(\n          of(loggedInUser(result)),\n          of(push('/status'))\n        )\n      )\n    })\n  )\n}\n\nconst registerUserEpic = action$ => {\n  let account\n  return action$.ofType(REGISTER_USER).pipe(\n    mergeMap(action => {\n      account = action.account\n      let mutation = gql`\n        mutation addUser($input: CredentialInput, $account: String!) {\n          addUser(input: $input, account: $account) {\n            id\n          }\n        }\n      `\n      return client.mutate({\n        mutation: mutation,\n        variables: {\n          input: _.omit(action.credentials, ['@type', '@context']),\n          account: action.account\n        }\n      })\n    }),\n    map(result => from(rr.register({from: account}))),\n    flatMap(result => concat(\n      of(registeredUser(result)),\n      of(push('/status'))\n    ))\n  )\n}\n\nconst getUserStatusEpic = action$ =>\n  action$.ofType(GET_USER_STATUS).pipe(\n  // pull value from database\n    mergeMap(action => {\n      let query = gql`\n        query ($account: String!) {\n          user(account: $account) {\n            id\n            reputationBalance\n            tokenBalance\n          }\n        }\n      `\n      return client.query({query: query, variables: {account: action.payload}})\n    }),\n    map(result => userStatusReceived(result))\n  )\n\nconst getUserVotesEpic = action$ => {\n  let account\n  return action$.ofType(GET_USER_VOTES).pipe(\n  // pull value from database\n    mergeMap(action => {\n      account = action.account\n      let query = gql`\n        query ($account: String!) {\n          userVoteRecords(account: $account) {\n            id\n            pollID\n            project\n            amount\n            rescued\n            revealed\n            salt\n            type\n            vote\n            task {\n              id\n              index\n            }\n          }\n        }\n      `\n      return client.query({query: query, variables: {account: account}})\n    }),\n    map(result => userVotesReceived(result.data.userVoteRecords))\n  )\n}\n\nexport default (action$, store) => merge(\n  getUserEpic(action$, store),\n  getUserStatusEpic(action$, store),\n  registerUserEpic(action$, store),\n  getUserVotesEpic(action$, store)\n)\n","import { MINT_TOKENS, SELL_TOKENS } from '../constants/TokenActionTypes'\nimport { tokensMinted, tokensSold } from '../actions/tokenActions'\nimport { map, mergeMap } from 'rxjs/operators'\nimport { from, merge } from 'rxjs'\nimport { dt } from '../utilities/blockchain'\n\nconst mintTokensEpic = action$ =>\n  action$.ofType(MINT_TOKENS).pipe(\n    mergeMap(action =>\n      from(dt.mint(action.amount, action.txObj))\n    ),\n    map(receipt => tokensMinted(receipt.logs[0].args))\n  )\n\nconst sellTokensEpic = action$ =>\n  action$.ofType(SELL_TOKENS).pipe(\n    mergeMap(action =>\n      from(dt.sell(action.amount, action.txObj))\n    ),\n    map(receipt => tokensSold(receipt.logs[0].args))\n  )\n\nexport default (action$, store) => merge(\n  mintTokensEpic(action$, store),\n  sellTokensEpic(action$, store)\n)\n","import {\n  SUBMIT_FINAL_TASK_LIST,\n  CLAIM_TASK,\n  SUBMIT_TASK_COMPLETE,\n  VALIDATE_TASK,\n  GET_VALIDATIONS,\n  REWARD_VALIDATOR,\n  REWARD_TASK,\n  GET_USER_VALIDATIONS,\n  COMMIT_VOTE,\n  REVEAL_VOTE,\n  RESCUE_VOTE\n} from '../constants/TaskActionTypes'\nimport {\n  finalTaskListSubmitted,\n  taskClaimed,\n  taskCompleted,\n  taskValidated,\n  validationsReceived,\n  validatorRewarded,\n  taskRewarded,\n  userValidationsReceived\n} from '../actions/taskActions'\nimport { voteCommitted, voteRevealed, voteRescued } from '../actions/pollActions'\nimport { map, mergeMap, concatMap } from 'rxjs/operators'\nimport { merge, from } from 'rxjs'\nimport { client } from '../index'\nimport { tr, rr, pr, T, P } from '../utilities/blockchain'\nimport { hashTasks } from '../utilities/hashing'\nimport gql from 'graphql-tag'\n\nconst submitFinalTaskListEpic = action$ => {\n  let address\n  let taskArray\n  let txObj\n  let tasks\n  return action$.ofType(SUBMIT_FINAL_TASK_LIST).pipe(\n    mergeMap(action => {\n      address = action.address\n      txObj = action.txObj\n      // get topTaskHash from contract logs\n      let query = gql`\n      query ($address: String!) {\n        project(address: $address){\n          topTaskHash\n        }\n      }`\n      return client.query({query: query, variables: {address: address}})\n    }),\n    // find the prelim task list in the db that matches toptask hash\n    mergeMap(result => {\n      let query = gql`\n      query($address: String!, $topTaskHash: String!) {\n        findFinalTaskHash(address: $address, topTaskHash: $topTaskHash) {\n          hash,\n          content\n        }\n      }`\n      return client.query({query: query, variables: {address: address, topTaskHash: result.data.project.topTaskHash}})\n    }),\n    mergeMap(result => {\n      tasks = result.data.findFinalTaskHash.content\n      taskArray = hashTasks(JSON.parse(tasks))\n      return from(pr.submitHashList(address, taskArray, txObj))\n    }),\n    map(result => finalTaskListSubmitted(address, tasks))\n  )\n}\n\nconst claimTaskEpic = action$ => {\n  let address\n  let txObj\n  let index\n  return action$.ofType(CLAIM_TASK).pipe(\n    mergeMap(action => {\n      address = action.address\n      txObj = action.txObj\n      index = action.index\n      let query = gql`\n      query($address: String!, $index: Int!) {\n        findTaskByIndex(address: $address, index: $index) {\n          description,\n          weighting\n        }\n      }`\n      return client.query({query: query, variables: {address: address, index: index}})\n    }),\n    mergeMap(result => {\n      return from(rr.claimTask(address, index, result.data.findTaskByIndex.description, result.data.findTaskByIndex.weighting, txObj))\n    }),\n    map(result => taskClaimed(address, index))\n  )\n}\n\nconst submitTaskCompleteEpic = action$ => {\n  let address\n  let index\n  return action$.ofType(SUBMIT_TASK_COMPLETE).pipe(\n    mergeMap(action => {\n      address = action.address\n      index = action.index\n      return from(pr.submitTaskComplete(address, index, action.txObj))\n    }),\n    map(result => taskCompleted(address, index))\n  )\n}\n\nconst validateTaskEpic = action$ => {\n  let address\n  let index\n  let validationState\n  let txObj\n  return action$.ofType(VALIDATE_TASK).pipe(\n    mergeMap(action => {\n      address = action.address\n      index = action.taskIndex\n      validationState = action.validationState\n      txObj = action.txObj\n      return from(tr.validateTask(address, index, validationState, action.txObj))\n    }),\n    mergeMap(result => {\n      return from(P.at(address).tasks(index))\n    }),\n    mergeMap(result => {\n      return from(T.at(result).validationEntryFee())\n    }),\n    map(result => taskValidated(address, index, validationState, result, txObj.from))\n  )\n}\n\nconst getValidationsEpic = action$ => {\n  let address\n  let index\n  return action$.ofType(GET_VALIDATIONS).pipe(\n    concatMap(action => {\n      address = action.projectAddress\n      index = action.index\n      let query = gql`\n      query($address: String!, $index: Int!) {\n        getValidations(address: $address, index: $index) {\n          id,\n          amount,\n          user,\n          state,\n          address\n        }\n      }`\n      return client.query({query: query, variables: {address: address, index: index}}\n      )\n    }),\n    map(result =>\n      validationsReceived(address, index, result.data.getValidations)\n    )\n  )\n}\n\nconst getUserValidationsEpic = action$ => {\n  let address, user, state\n  return action$.ofType(GET_USER_VALIDATIONS).pipe(\n    mergeMap(action => {\n      address = action.projectAddress\n      user = action.user\n      state = action.state\n      let query = gql`\n      query($address: String!, $user: String!) {\n        getUserValidationsinProject(address: $address, user: $user) {\n          id,\n          amount,\n          user,\n          task {\n            address,\n            index\n          },\n          state,\n          address,\n          rewarded\n        }\n      }`\n      return client.query({query: query, variables: {address: address, user: user}}\n      )\n    }),\n    map(result => userValidationsReceived(address, user, result.data.getUserValidationsinProject, state))\n  )\n}\n\nconst rewardValidatorEpic = action$ => {\n  let address, index, txObj, state\n  return action$.ofType(REWARD_VALIDATOR).pipe(\n    mergeMap(action => {\n      address = action.projectAddress\n      index = action.index\n      txObj = action.txObj\n      state = action.state\n      return from(tr.rewardValidator(address, index, txObj))\n    }),\n    map(result =>\n      validatorRewarded(address, index, result, state)\n    )\n  )\n}\n\nconst rewardTaskEpic = action$ => {\n  let address\n  let index\n  let txObj\n  let state\n  return action$.ofType(REWARD_TASK).pipe(\n    mergeMap(action => {\n      address = action.projectAddress\n      index = action.index\n      txObj = action.txObj\n      state = action.state\n      return from(rr.rewardTask(address, index, txObj))\n    }),\n    map(result =>\n      taskRewarded(address, index, result, txObj.from, state)\n    )\n  )\n}\n\nconst commitVoteEpic = action$ => {\n  let projectAddress, taskIndex, value, secretHash, txReceipt, txObj, vote, salt, pollID, type\n  return action$.ofType(COMMIT_VOTE).pipe(\n    mergeMap(action => {\n      projectAddress = action.projectAddress\n      taskIndex = action.taskIndex\n      value = parseInt(action.value)\n      secretHash = action.secretHash\n      pollID = action.pollID\n      txObj = action.txObj\n      vote = action.vote\n      salt = action.salt\n      type = action.collateralType\n      let query = gql`\n      query($account: String!, $amount: Int!) {\n        getPrevPollID(account: $account, amount: $amount)\n      }`\n      return client.query({query: query, variables: {account: txObj.from, amount: value}}\n      )\n    }),\n    mergeMap(result => {\n      return type === 'tokens'\n        ? from(tr.voteCommit(projectAddress, taskIndex, value, secretHash, result.data.getPrevPollID, txObj))\n        : from(rr.voteCommit(projectAddress, taskIndex, value, secretHash, result.data.getPrevPollID, txObj))\n    }),\n    mergeMap(result => {\n      txReceipt = result\n      let mutation = gql`\n        mutation addVote($type: String!, $projectAddress: String!, $taskIndex: Int!, $amount: Int!, $vote: String!, $salt: String!, $pollID: Int!, $voter: String!) {\n          addVote(type: $type, projectAddress: $projectAddress, taskIndex: $taskIndex, amount: $amount, vote: $vote, salt: $salt, pollID: $pollID, voter: $voter) {\n            id\n          }\n        }\n      `\n      return client.mutate({\n        mutation: mutation,\n        variables: {\n          projectAddress: projectAddress,\n          taskIndex: taskIndex,\n          amount: value,\n          vote: vote,\n          salt: salt,\n          pollID: parseInt(pollID),\n          voter: txObj.from,\n          type: type\n        }\n      })\n    }),\n    map(result =>\n      voteCommitted({projectAddress, taskIndex, type, value, salt, voter: txObj.from, txReceipt, vote, pollID})\n    )\n  )\n}\n\nconst revealVoteEpic = action$ => {\n  let projectAddress, taskIndex, vote, salt, txObj, txReceipt\n  return action$.ofType(REVEAL_VOTE).pipe(\n    mergeMap(action => {\n      projectAddress = action.projectAddress\n      taskIndex = action.taskIndex\n      vote = action.vote\n      salt = action.salt\n      txObj = action.txObj\n      return action.collateralType === 'tokens'\n        ? from(tr.voteReveal(projectAddress, taskIndex, vote, salt, action.txObj))\n        : from(rr.voteReveal(projectAddress, taskIndex, vote, salt, action.txObj))\n    }),\n    map(result =>\n      voteRevealed({projectAddress, taskIndex, voter: txObj.from, txReceipt, salt})\n    )\n  )\n}\n\nconst rescueVoteEpic = action$ => {\n  let projectAddress, taskIndex, txReceipt, txObj\n  return action$.ofType(RESCUE_VOTE).pipe(\n    map(action => {\n      projectAddress = action.projectAddress\n      taskIndex = action.taskIndex\n      txObj = action.txObj\n      return action.collateralType === 'tokens'\n        ? from(tr.rescueTokens(projectAddress, taskIndex, action.txObj))\n        : from(rr.rescueTokens(projectAddress, taskIndex, action.txObj))\n    }),\n    // mergeMap(result => {\n    //   txReceipt = result\n    //   let mutation = gql`\n    //     mutation rescueVote($address: String!, $taskIndex: String!, $vote: String!, $salt: String!, $voter: String!) {\n    //       rescueVote(address: $address, taskIndex: $taskIndex, voter: $voter) {\n    //         id\n    //       }\n    //     }\n    //   `\n    //   return client.mutate({\n    //     mutation: mutation,\n    //     variables: {\n    //       address: projectAddress,\n    //       taskIndex: taskIndex,\n    //       voter: txObj.from\n    //     }\n    //   })\n    // }),\n    map(result =>\n      voteRescued({projectAddress, taskIndex, voter: txObj.from, txReceipt})\n    )\n  )\n}\n\nexport default (action$, store) => merge(\n  submitFinalTaskListEpic(action$, store),\n  claimTaskEpic(action$, store),\n  submitTaskCompleteEpic(action$, store),\n  validateTaskEpic(action$, store),\n  getValidationsEpic(action$, store),\n  getUserValidationsEpic(action$, store),\n  rewardValidatorEpic(action$, store),\n  rewardTaskEpic(action$, store),\n  commitVoteEpic(action$, store),\n  revealVoteEpic(action$, store),\n  rescueVoteEpic(action$, store)\n)\n","import { VOTE_COMMITTED, VOTE_REVEALED, VOTE_RESCUED } from '../constants/PollActionTypes'\n\nexport function voteCommitted (voteDetails) {\n  return {\n    type: VOTE_COMMITTED,\n    voteDetails\n  }\n}\n\nexport function voteRevealed (voteDetails) {\n  return {\n    type: VOTE_REVEALED,\n    voteDetails\n  }\n}\n\nexport function voteRescued (voteDetails) {\n  return {\n    type: VOTE_RESCUED,\n    voteDetails\n  }\n}\n","import projectEpics from './project'\nimport { getNetworkStatusEpic } from './network'\nimport userEpics from './user'\nimport tokenEpics from './token'\nimport taskEpics from './task'\n\nimport { combineEpics } from 'redux-observable'\n\nexport default combineEpics(getNetworkStatusEpic, userEpics, tokenEpics, projectEpics, taskEpics)\n","import {\n  GET_PROJECTS,\n  PROPOSE_PROJECT,\n  STAKE_PROJECT,\n  UNSTAKE_PROJECT,\n  CHECK_STAKED_STATUS,\n  CHECK_ACTIVE_STATUS,\n  REWARD_PROPOSER,\n  SUBMIT_HASHED_TASK_LIST,\n  SET_TASK_LIST,\n  GET_VERIFIED_TASK_LISTS,\n  CHECK_VALIDATE_STATUS,\n  CHECK_VOTING_STATUS,\n  CHECK_FINAL_STATUS\n} from '../constants/ProjectActionTypes'\nimport {\n  projectsReceived,\n  projectStaked,\n  projectUnstaked,\n  hashedTaskListSubmitted,\n  // stakedStatusChecked,\n  proposerRewarded,\n  // activeStatusChecked,\n  taskListSet,\n  verifiedTaskListsReceived\n  // finalStatusChecked\n  // validateStatusChecked,\n  // votingStatusChecked\n} from '../actions/projectActions'\nimport { map, mergeMap, concatMap } from 'rxjs/operators'\nimport { merge, EMPTY, of, from, concat } from 'rxjs'\nimport { push } from 'react-router-redux'\nimport { client } from '../index'\nimport { rr, tr, pr, dt, P } from '../utilities/blockchain'\nimport gql from 'graphql-tag'\n\nconst getProjectsEpic = action$ => {\n  let state\n  return action$.ofType(GET_PROJECTS).pipe(\n    mergeMap(action => {\n      state = action.state\n      return client.query({query: action.query}\n      )\n    }),\n    map(result => projectsReceived(state, result.data.allProjectsinState))\n  )\n}\n\nconst proposeProject = action$ =>\n  action$.ofType(PROPOSE_PROJECT).pipe(\n    mergeMap(action =>\n      action.collateralType === 'tokens'\n        ? from(tr.proposeProject(action.projObj.cost, action.projObj.stakingEndDate, action.projObj.multiHash, action.txObj))\n        : from(rr.proposeProject(action.projObj.cost, action.projObj.stakingEndDate, action.projObj.multiHash, action.txObj))\n    ),\n    mergeMap(result => concat(\n      of(push('/stake'))\n    ))\n  )\n\nconst stakeProject = action$ => {\n  let collateralType, stakeResult\n  return action$.ofType(STAKE_PROJECT).pipe(\n    mergeMap(action => {\n      collateralType = action.collateralType\n      return action.collateralType === 'tokens'\n        ? from(tr.stakeTokens(action.projectAddress, parseInt(action.value, 10), action.txObj))\n        : from(rr.stakeReputation(action.projectAddress, parseInt(action.value, 10), action.txObj))\n    }),\n    mergeMap(result => {\n      stakeResult = result\n      return from(dt.currentPrice())\n    }),\n    mergeMap(result => {\n      if (stakeResult.logs[0].args.staked === true) {\n        return of(push('/add'))\n      } else {\n        return of(projectStaked(collateralType, stakeResult.logs[0].args, result))\n      }\n    })\n  )\n}\n\nconst unstakeProject = action$ => {\n  let collateralType\n  return action$.ofType(UNSTAKE_PROJECT).pipe(\n    mergeMap(action => {\n      collateralType = action.collateralType\n      return action.collateralType === 'tokens'\n        ? from(tr.unstakeTokens(action.projectAddress, parseInt(action.value, 10), action.txObj))\n        : from(rr.unstakeReputation(action.projectAddress, parseInt(action.value, 10), action.txObj))\n    }),\n    map(result => projectUnstaked(collateralType, result.logs[0].args))\n  )\n}\n\nconst checkStakedStatus = action$ => {\n  let projectAddress, firstResult\n  return action$.ofType(CHECK_STAKED_STATUS).pipe(\n    mergeMap(action => {\n      projectAddress = action.projectAddress\n      return from(pr.checkStaked(action.projectAddress, action.txObj))\n    }),\n    mergeMap(result => {\n      firstResult = result\n      return from(P.at(projectAddress).state())\n    }),\n    mergeMap(state => {\n      if (firstResult.logs[0].args.staked === true) {\n        return of(push('/add'))\n      } else if (state.toNumber() === 8) {\n        return of(push('/expired'))\n      } else {\n        return EMPTY\n      }\n    })\n  )\n}\n\n// set task list on the frontend\nconst setTaskList = action$ => {\n  let taskDetails\n  let address\n  return action$.ofType(SET_TASK_LIST).pipe(\n    mergeMap(action => {\n      address = action.projectAddress\n      taskDetails = JSON.stringify(action.taskDetails.taskList)\n      let mutation = gql`\n        mutation addTaskList($input: String!, $address: String!) {\n          addTaskList(input: $input, address: $address) {\n            id\n          }\n        }\n      `\n      return client.mutate({\n        mutation: mutation,\n        variables: {\n          input: taskDetails,\n          address: action.projectAddress\n        }\n      })\n    }),\n    map(result => taskListSet(taskDetails, address, result.data.addTaskList))\n  )\n}\n\nconst submitHashedTaskList = action$ => {\n  let tasks\n  let txObj\n  let projectAddress\n  let taskHash\n  return action$.ofType(SUBMIT_HASHED_TASK_LIST).pipe(\n    mergeMap(action => {\n      tasks = JSON.stringify(action.tasks)\n      txObj = action.txObj\n      projectAddress = action.projectAddress\n      taskHash = action.taskListHash\n      let mutation = gql`\n        mutation addPrelimTaskList($address: String!, $taskHash: String!, $submitter: String!) {\n          addPrelimTaskList(address: $address, taskHash: $taskHash, submitter: $submitter) {\n            id\n          }\n        }\n      `\n      return client.mutate({\n        mutation: mutation,\n        variables: {\n          address: projectAddress,\n          taskHash: taskHash,\n          submitter: txObj.from,\n          content: tasks\n        }\n      })\n    }),\n    mergeMap(action => {\n      return from(pr.addTaskHash(projectAddress, taskHash, txObj))\n    }),\n    map(result =>\n      hashedTaskListSubmitted(tasks, txObj.from, projectAddress, result.logs[1].args.weighting.toNumber() / (10 ** 15)))\n  )\n}\n\nconst getVerifiedTaskListsEpic = action$ => {\n  let address\n  return action$.ofType(GET_VERIFIED_TASK_LISTS).pipe(\n    concatMap(action => {\n      address = action.address\n      let query = gql`\n      query ($address: String!) {\n        verifiedPrelimTaskLists(address: $address){\n          submitter,\n          content,\n          weighting\n        }\n      }`\n      return client.query({query: query, variables: {address: address}})\n    }),\n    map(result => verifiedTaskListsReceived(address, result.data.verifiedPrelimTaskLists))\n  )\n}\n\nconst checkActiveStatus = action$ => {\n  return action$.ofType(CHECK_ACTIVE_STATUS).pipe(\n    mergeMap(action => {\n      return from(pr.checkActive(action.projectAddress, action.txObj))\n    }),\n    mergeMap(result => {\n      if (result.logs[0].args.active === true) {\n        return concat(\n          of(push('/claim'))\n        )\n      } else {\n        return EMPTY\n      }\n    })\n  )\n}\n\nconst rewardProposer = action$ => {\n  let projectAddress, txObj\n  return action$.ofType(REWARD_PROPOSER).pipe(\n    concatMap(action => {\n      projectAddress = action.projectAddress\n      txObj = action.txObj\n      let query = gql`\n      query ($address: String!) {\n        project(address: $address){\n          proposerType\n        }\n      }`\n      return client.query({query: query, variables: {address: projectAddress}})\n    }),\n    mergeMap(result => {\n      return result.data.project.proposerType === 1\n        ? from(tr.refundProposer(projectAddress, txObj))\n        : from(rr.refundProposer(projectAddress, txObj))\n    }),\n    map(result => proposerRewarded(projectAddress))\n  )\n}\n\nconst checkValidateStatus = action$ => {\n  return action$.ofType(CHECK_VALIDATE_STATUS).pipe(\n    mergeMap(action => {\n      return from(pr.checkValidate(action.projectAddress, action.txObj))\n    }),\n    mergeMap(result => concat(\n      of(push('/validate'))\n    ))\n  )\n}\n\nconst checkVotingStatus = action$ =>\n  action$.ofType(CHECK_VOTING_STATUS).pipe(\n    mergeMap(action => {\n      return from(pr.checkVoting(action.projectAddress, action.txObj))\n    }),\n    mergeMap(result => {\n      return concat(\n        of(push('/vote'))\n      )\n    })\n  )\n\nconst checkFinalStatus = action$ => {\n  return action$.ofType(CHECK_FINAL_STATUS).pipe(\n    mergeMap(action => {\n      return from(pr.checkEnd(action.projectAddress, action.txObj))\n    }),\n    mergeMap(result => {\n      if (result.logs[0].args.end.toNumber() === 1) {\n        return concat(\n          of(push('/complete'))\n        )\n      } else if (result.logs[0].args.end.toNumber() === 2) {\n        return concat(\n          of(push('/failed'))\n        )\n      } else {\n        return EMPTY\n      }\n    })\n  )\n}\n\nexport default (action$, store) => merge(\n  getProjectsEpic(action$, store),\n  proposeProject(action$, store),\n  stakeProject(action$, store),\n  unstakeProject(action$, store),\n  checkStakedStatus(action$, store),\n  checkActiveStatus(action$, store),\n  rewardProposer(action$, store),\n  submitHashedTaskList(action$, store),\n  setTaskList(action$, store),\n  getVerifiedTaskListsEpic(action$, store),\n  checkValidateStatus(action$, store),\n  checkVotingStatus(action$, store),\n  checkFinalStatus(action$, store)\n)\n","import { compose, createStore, applyMiddleware } from 'redux'\nimport createHistory from 'history/createBrowserHistory'\nimport { createEpicMiddleware } from 'redux-observable'\nimport { routerMiddleware } from 'react-router-redux'\n// import { autoRehydrate } from 'redux-persist'\n\nimport reducers from '../reducers'\nimport epics from '../epics'\n\n// Create a history of your choosing (we're using a browser history in this case)\nexport const history = createHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst routeMiddleware = routerMiddleware(history)\n\n// Add the reducer to your store on the `router` key\n// Also apply our middleware for navigating\nfunction configureStore () {\n  const epicMiddleware = createEpicMiddleware()\n\n  const store = createStore(\n    reducers,\n    compose(\n      applyMiddleware(routeMiddleware, epicMiddleware),\n      // autoRehydrate()\n    )\n  )\n  epicMiddleware.run(epics)\n  return store\n}\n\nconst store = configureStore()\n// let persistedStore = persistStore(store)\n// persistedStore.purge()\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport { Provider } from 'react-redux'\n\nimport store, { history } from './store/store'\nimport { ConnectedRouter } from 'react-router-redux'\n\nimport ApolloClient from 'apollo-boost'\nexport const client = new ApolloClient({\n  uri: 'http://165.227.184.116/graphql'\n})\n\nReactDOM.render(\n  (<Provider store={store}>\n    { /* ConnectedRouter will use the store from Provider automatically */ }\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>),\n  document.getElementById('root')\n)\nregisterServiceWorker()\n","export const PROPOSE_PROJECT = 'PROPOSE_PROJECT'\nexport const PROJECT_PROPOSED = 'PROJECT_PROPOSED'\nexport const STAKE_PROJECT = 'STAKE_PROJECT'\nexport const UNSTAKE_PROJECT = 'UNSTAKE_PROJECT'\nexport const PROJECT_STAKED = 'PROJECT_STAKED'\nexport const PROJECT_UNSTAKED = 'PROJECT_UNSTAKED'\nexport const CHECK_STAKED_STATUS = 'CHECK_STAKED_STATUS'\nexport const REWARD_PROPOSER = 'REWARD_PROPOSER'\nexport const PROPOSER_REWARDED = 'PROPOSER_REWARDED'\n\n// export const GET_PROJECT_STATE = 'GET_PROJECT_STATE'\n// export const PROJECT_STATE_RECEIVED = 'PROJECT_STATE_RECEIVED'\nexport const CHECK_ACTIVE_STATUS = 'CHECK_ACTIVE_STATUS'\nexport const ACTIVE_STATUS_CHECKED = 'ACTIVE_STATUS_CHECKED'\nexport const CHECK_VALIDATE_STATUS = 'CHECK_VALIDATE_STATUS'\nexport const VALIDATE_STATUS_CHECKED = 'VALIDATE_STATUS_CHECKED'\nexport const CHECK_VOTING_STATUS = 'CHECK_VOTING_STATUS'\nexport const VOTING_STATUS_CHECKED = 'VOTING_STATUS_CHECKED'\n\nexport const SET_TASK_LIST = 'SET_TASK_LIST'\nexport const SUBMIT_HASHED_TASK_LIST = 'SUBMIT_HASHED_TASK_LIST'\nexport const TASK_LIST_SET = 'TASK_LIST_SET'\nexport const STAKED_STATUS_CHECKED = 'STAKED_STATUS_CHECKED'\nexport const HASHED_TASK_LIST_SUBMITTED = 'HASHED_TASK_LIST_SUBMITTED'\nexport const GET_VERIFIED_TASK_LISTS = 'GET_VERIFIED_TASK_LISTS'\nexport const VERIFIED_TASK_LISTS_RECEIVED = 'VERIFIED_TASK_LISTS_RECEIVED'\n\n// export const UPDATE_PROJECT = 'UPDATE_PROJECT'\n\nexport const GET_PROJECTS = 'GET_PROJECTS'\nexport const PROJECTS_RECEIVED = 'PROJECTS_RECEIVED'\n\nexport const CHECK_FINAL_STATUS = 'CHECK_FINAL_STATUS'\nexport const FINAL_STATUS_CHECKED = 'FINAL_STATUS_CHECKED'\n","import {\n  PROPOSE_PROJECT,\n  PROJECT_PROPOSED,\n  STAKE_PROJECT,\n  PROJECT_STAKED,\n  UNSTAKE_PROJECT,\n  PROJECT_UNSTAKED,\n  CHECK_STAKED_STATUS,\n  REWARD_PROPOSER,\n  PROPOSER_REWARDED,\n  CHECK_ACTIVE_STATUS,\n  SET_TASK_LIST,\n  SUBMIT_HASHED_TASK_LIST,\n  TASK_LIST_SET,\n  GET_PROJECTS,\n  PROJECTS_RECEIVED,\n  STAKED_STATUS_CHECKED,\n  ACTIVE_STATUS_CHECKED,\n  HASHED_TASK_LIST_SUBMITTED,\n  GET_VERIFIED_TASK_LISTS,\n  VERIFIED_TASK_LISTS_RECEIVED,\n  CHECK_VALIDATE_STATUS,\n  VALIDATE_STATUS_CHECKED,\n  CHECK_VOTING_STATUS,\n  VOTING_STATUS_CHECKED,\n  CHECK_FINAL_STATUS,\n  FINAL_STATUS_CHECKED\n} from '../constants/ProjectActionTypes'\n\nexport function proposeProject (collateralType, projObj, txObj) {\n  return {\n    type: PROPOSE_PROJECT,\n    collateralType,\n    projObj,\n    txObj\n  }\n}\n\nexport function projectProposed (receipt) {\n  return {\n    type: PROJECT_PROPOSED,\n    receipt\n  }\n}\n\nexport function getProjects (state, query) {\n  return {\n    type: GET_PROJECTS,\n    state,\n    query\n  }\n}\n\nexport function projectsReceived (state, projects) {\n  return {\n    type: PROJECTS_RECEIVED,\n    state,\n    projects\n  }\n}\n\nexport function stakeProject (collateralType, projectAddress, value, txObj) {\n  return {\n    type: STAKE_PROJECT,\n    collateralType,\n    projectAddress,\n    value,\n    txObj\n  }\n}\n\nexport function projectStaked (collateralType, result, currentPrice) {\n  return {\n    type: PROJECT_STAKED,\n    collateralType,\n    result,\n    currentPrice\n  }\n}\n\nexport function unstakeProject (collateralType, projectAddress, value, txObj) {\n  return {\n    type: UNSTAKE_PROJECT,\n    collateralType,\n    projectAddress,\n    value,\n    txObj\n  }\n}\n\nexport function projectUnstaked (collateralType, result, currentPrice) {\n  return {\n    type: PROJECT_UNSTAKED,\n    collateralType,\n    result,\n    currentPrice\n  }\n}\n\nexport function checkStakedStatus (projectAddress, txObj) {\n  return {\n    type: CHECK_STAKED_STATUS,\n    projectAddress,\n    txObj\n  }\n}\n\nexport function stakedStatusChecked (firstReceipt, receipt) {\n  return {\n    type: STAKED_STATUS_CHECKED,\n    receipt\n  }\n}\n\nexport function rewardProposer (projectAddress, txObj) {\n  return {\n    type: REWARD_PROPOSER,\n    projectAddress,\n    txObj\n  }\n}\n\nexport function proposerRewarded (projectAddress) {\n  return {\n    type: PROPOSER_REWARDED,\n    projectAddress\n  }\n}\n\nexport function checkActiveStatus (projectAddress, txObj) {\n  return {\n    type: CHECK_ACTIVE_STATUS,\n    projectAddress,\n    txObj\n  }\n}\n\nexport function activeStatusChecked (receipt) {\n  return {\n    type: ACTIVE_STATUS_CHECKED,\n    receipt\n  }\n}\n\nexport function setTaskList (taskDetails, projectAddress, query) {\n  return {\n    type: SET_TASK_LIST,\n    taskDetails,\n    projectAddress\n  }\n}\n\nexport function submitHashedTaskList (tasks, taskListHash, projectAddress, txObj) {\n  return {\n    type: SUBMIT_HASHED_TASK_LIST,\n    tasks,\n    taskListHash,\n    projectAddress,\n    txObj\n  }\n}\n\nexport function taskListSet (taskDetails, projectAddress) {\n  return {\n    type: TASK_LIST_SET,\n    taskDetails,\n    projectAddress\n  }\n}\n\nexport function hashedTaskListSubmitted (tasks, submitterAddress, projectAddress, receipt) {\n  return {\n    type: HASHED_TASK_LIST_SUBMITTED,\n    tasks,\n    submitterAddress,\n    projectAddress,\n    receipt\n  }\n}\n\nexport function getVerifiedTaskLists (address) {\n  return {\n    type: GET_VERIFIED_TASK_LISTS,\n    address\n  }\n}\n\nexport function verifiedTaskListsReceived (address, result) {\n  return {\n    type: VERIFIED_TASK_LISTS_RECEIVED,\n    address,\n    result\n  }\n}\n\nexport function checkValidateStatus (projectAddress, txObj) {\n  return {\n    type: CHECK_VALIDATE_STATUS,\n    projectAddress,\n    txObj\n  }\n}\n\nexport function validateStatusChecked (receipt) {\n  return {\n    type: VALIDATE_STATUS_CHECKED,\n    receipt\n  }\n}\n\nexport function checkVotingStatus (projectAddress, txObj) {\n  return {\n    type: CHECK_VOTING_STATUS,\n    projectAddress,\n    txObj\n  }\n}\n\nexport function votingStatusChecked (receipt) {\n  return {\n    type: VOTING_STATUS_CHECKED,\n    receipt\n  }\n}\n\nexport function checkFinalStatus (projectAddress, txObj) {\n  return {\n    type: CHECK_FINAL_STATUS,\n    projectAddress,\n    txObj\n  }\n}\n\nexport function finalStatusChecked (receipt) {\n  return {\n    type: FINAL_STATUS_CHECKED,\n    receipt\n  }\n}\n","let obj = require('./build/TokenRegistry.json')\n\nconst TokenRegistryAddress = obj.networks['5777'].address\n\nconst TokenRegistryABI = JSON.stringify(obj.abi)\n\nconst TokenRegistryBytecode = obj.bytecode\n\nmodule.exports = {\n  TokenRegistryAddress,\n  TokenRegistryABI,\n  TokenRegistryBytecode\n}\n","let obj = require('./build/ReputationRegistry.json')\n\nconst ReputationRegistryAddress = obj.networks['5777'].address\n\nconst ReputationRegistryABI = JSON.stringify(obj.abi)\n\nconst ReputationRegistryBytecode = obj.bytecode\n\nmodule.exports = {\n  ReputationRegistryAddress,\n  ReputationRegistryABI,\n  ReputationRegistryBytecode\n}\n","// RINKEBY\n// export const ProjectRegistryAddress = '0xef1ac57f437de18c8e5ec168fbe855fc55e238f1'\nlet obj = require('./build/ProjectRegistry.json')\n\nconst ProjectRegistryAddress = obj.networks['5777'].address\n\nconst ProjectRegistryABI = JSON.stringify(obj.abi)\n\nconst ProjectRegistryBytecode = obj.bytecode\n\nmodule.exports = {\n  ProjectRegistryAddress,\n  ProjectRegistryABI,\n  ProjectRegistryBytecode\n}\n","let obj = require('./build/DistributeToken.json')\n\nconst DistributeTokenAddress = obj.networks['5777'].address\n\nconst DistributeTokenABI = JSON.stringify(obj.abi)\n\nconst DistributeTokenBytecode = obj.bytecode\n\nmodule.exports = {\n  DistributeTokenAddress,\n  DistributeTokenABI,\n  DistributeTokenBytecode\n}\n","let obj = require('./build/ProjectLibrary.json')\n\nconst ProjectLibraryAddress = obj.networks['5777'].address\n\nconst ProjectLibraryABI = JSON.stringify(obj.abi)\n\nconst ProjectLibraryBytecode = obj.deployedBytecode\n\nmodule.exports = {\n  ProjectLibraryAddress,\n  ProjectLibraryABI,\n  ProjectLibraryBytecode\n}\n","import ipfsAPI from 'ipfs-api'\nlet ipfs = ipfsAPI()\n\nexport default ipfs\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nlet titleStyle = {\n  color: '#FCFCFC',\n  marginTop: 10,\n  marginLeft: 10,\n  fontSize: 20,\n  fontFamily: 'helvetica'\n}\nlet titleBarStyle = {\n  color: '#000',\n  backgroundColor: '#FCFCFC',\n  marginTop: 10,\n  fontSize: 20,\n  fontFamily: 'helvetica',\n  fontWeight: 100,\n  padding: 10\n}\nclass Sidebar extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      actions: false,\n      projects: false\n    }\n    this.toggleShow = this.toggleShow.bind(this)\n  }\n  toggleShow (val) {\n    this.setState({[val]: !this.state[val]})\n  }\n  render () {\n    return (\n      <div style={{height: '100vh', width: 200, backgroundColor: '#111111', position: 'fixed', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n        <h1 className='App-title' style={{color: 'white', marginTop: 15}}>distribute</h1>\n        <div style={{width: 100, height: 100, borderRadius: 50, backgroundColor: '#fcfcfc', marginTop: 10}}>\n          <img style={{width: 100, height: 100, borderRadius: 50}} alt='profile' src={typeof this.props.user.avatar !== 'undefined' ? this.props.user.avatar.uri : 'https://podlodka.info/components/com_jcomments/images/no_avatar.png'} />\n        </div>\n        <h3 style={{color: '#FCFCFC', marginTop: 10}}>{this.props.user.name}</h3>\n        <div style={{alignItems: 'flex-start', marginTop: 20}}>\n          <a href='/status'><h3 className='ActionText' style={Object.assign({}, titleStyle, {textAlign: 'center'})}>Network Status</h3></a>\n          {/* <a href='/projects'><h3 className='ActionText' style={{color: '#FCFCFC', marginTop: 10, fontSize: 20, fontFamily: 'helvetica'}}>Current Projects</h3></a> */}\n          <h3 onClick={() => this.toggleShow('actions')} style={Object.assign({}, titleBarStyle, {textAlign: 'center'})}>Project Actions</h3>\n          { true\n            ? <div>\n              <a href='/propose'><h3 className='ActionText' style={titleStyle}>Propose</h3></a>\n              <a href='/stake'><h3 className='ActionText' style={titleStyle}>Stake</h3></a>\n              <a href='/add'><h3 className='ActionText' style={titleStyle}>Add Tasks</h3></a>\n              <a href='/claim'><h3 className='ActionText' style={titleStyle}>Claim Tasks</h3></a>\n              <a href='/validate'><h3 className='ActionText' style={titleStyle}>Validate</h3></a>\n              <a href='/vote'><h3 className='ActionText' style={titleStyle}>Vote</h3></a>\n            </div>\n            : null\n          }\n          <h3 onClick={() => this.toggleShow('projects')} style={Object.assign({}, titleBarStyle, {textAlign: 'center'})}>Finished Projects</h3>\n          { true\n            ? <div>\n              <a href='/complete'><h3 className='ActionText' style={titleStyle}>Complete</h3></a>\n              <a href='/failed'><h3 className='ActionText' style={titleStyle}>Failed</h3></a>\n              <a href='/expired'><h3 className='ActionText' style={titleStyle}>Expired</h3></a>\n            </div>\n            : null\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user || {}\n  }\n}\n\nexport default connect(mapStateToProps)(Sidebar)\n","let obj = require('./build/Project.json')\n\nconst ProjectABI = JSON.stringify(obj.abi)\n\nconst ProjectBytecode = obj.bytecode\n\nmodule.exports = {\n  ProjectABI,\n  ProjectBytecode\n}\n","let obj = require('./build/Task.json')\n\nconst TaskABI = JSON.stringify(obj.abi)\n\nconst TaskBytecode = obj.bytecode\n\nmodule.exports = {\n  TaskABI,\n  TaskBytecode\n}\n","/* global FileReader */\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport mapboxgl from 'mapbox-gl'\nimport { getNetworkStatus } from '../actions/networkActions'\nimport { proposeProject } from '../actions/projectActions'\nimport ProposeForm from '../components/Propose'\nimport Sidebar from '../components/shared/Sidebar'\nimport {eth, web3, dt} from '../utilities/blockchain'\nimport ipfs from '../utilities/ipfs'\nimport MapboxClient from 'mapbox/lib/services/geocoding'\nconst client = new MapboxClient('pk.eyJ1IjoiY29uc2Vuc3lzIiwiYSI6ImNqOHBmY2w0NjBmcmYyd3F1NHNmOXJwMWgifQ.8-GlTlTTUHLL8bJSnK2xIA')\nmapboxgl.accessToken = 'pk.eyJ1IjoiY29uc2Vuc3lzIiwiYSI6ImNqOHBmY2w0NjBmcmYyd3F1NHNmOXJwMWgifQ.8-GlTlTTUHLL8bJSnK2xIA'\n\nconst WAIT_INTERVAL = 1500\n\nclass Propose extends React.Component {\n  constructor () {\n    super()\n    this.state = {\n      tempProject: {},\n      currPrice: 0,\n      loading: false,\n      imageUrl: false,\n      location: [0, 0]\n    }\n    this.proposeProject = this.proposeProject.bind(this)\n    this.getContractValues = this.getContractValues.bind(this)\n    this.handlePhotoUpload = this.handlePhotoUpload.bind(this)\n    this.handlePriceChange = this.handlePriceChange.bind(this)\n    this.handleLocationChange = this.handleLocationChange.bind(this)\n    this.handlePhotoChange = this.handlePhotoChange.bind(this)\n    this.triggerMapChange = this.triggerMapChange.bind(this)\n  }\n\n  componentWillMount () {\n    this.getContractValues()\n    this.getNetworkStatus()\n    this.timer = null\n  }\n\n  componentDidMount () {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v10'\n    })\n    this.setState({map: map})\n    let coordHandler = (pos) => {\n      let ll = new mapboxgl.LngLat(pos.coords.longitude, pos.coords.latitude)\n      map.setCenter(ll)\n      map.setZoom(12)\n      map.addControl(new mapboxgl.NavigationControl())\n      map.on('click', (e) => {\n        map.setCenter(e.lngLat)\n        this.setState({coords: e.lngLat})\n      })\n    }\n    window.navigator.geolocation.getCurrentPosition(coordHandler)\n  }\n\n  componentWillUnmount () {\n    this.state.map.remove()\n  }\n\n  getNetworkStatus () {\n    this.props.getNetworkStatus()\n    this.getContractValues()\n  }\n\n  async getContractValues () {\n    let currPrice = (await dt.currentPrice()).toNumber()\n    let weiBal = (await dt.weiBal()).toNumber()\n    this.setState({\n      currPrice,\n      weiBal\n    })\n  }\n\n  async proposeProject (type, values) {\n    // stakingPeriod in Days changed to seconds -> blockchain understands seconds\n    // This is creating and storing an IPFS object\n    let projObj = {\n      cost: this.state.cost,\n      stakingEndDate: Math.floor(values.date.valueOf() / 1000),\n      photo: this.state.photo,\n      name: values.name,\n      location: this.state.coords,\n      summary: values.summary\n    }\n    let multiHash\n    const obj = {\n      Data: JSON.stringify(projObj),\n      Links: []\n    }\n    await ipfs.object.put(obj, {enc: 'json'}, (err, node) => {\n      if (err) {\n        console.log('errrrr')\n        throw err\n      }\n      multiHash = node.toJSON().multihash\n      eth.getAccounts(async (err, accounts) => {\n        if (!err) {\n          await this.props.proposeProject(type, {cost: projObj.cost, stakingEndDate: projObj.stakingEndDate, multiHash: multiHash}, {from: accounts[0]})\n        }\n      })\n    })\n  }\n\n  handlePhotoChange (info) {\n    this.handlePhotoUpload(info.file.originFileObj)\n    this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n      imageUrl,\n      loading: false\n    }))\n    this.setState({loading: true})\n  }\n\n  handlePhotoUpload (photoObj) {\n    const reader = new FileReader()\n    reader.onloadend = () => {\n      const buf = Buffer.from(reader.result) // Convert data into buffer\n      ipfs.files.add(buf, (err, result) => { // Upload buffer to IPFS\n        if (err) {\n          console.error(err)\n          return\n        }\n        let url = `https://ipfs.io/ipfs/${result[0].hash}`\n        this.setState({photo: url, loading: false})\n      })\n    }\n    reader.readAsArrayBuffer(photoObj) // Read Provided File\n  }\n\n  getBase64 (img, callback) {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => callback(reader.result))\n    reader.readAsDataURL(img)\n  }\n\n  handlePriceChange (val) {\n    this.setState({cost: web3.toWei(val.target.value, 'ether')})\n  }\n\n  handleLocationChange (val) {\n    clearTimeout(this.timer)\n    this.setState({location: val.target.value})\n    this.timer = setTimeout(this.triggerMapChange, WAIT_INTERVAL)\n  }\n\n  triggerMapChange () {\n    const { location } = this.state\n    client.geocodeForward(location, (err, data, res) => {\n      if (err) { console.error(err) }\n      this.state.map.setCenter(data.features[0].geometry.coordinates)\n      this.state.map.setZoom(18)\n      new mapboxgl.Marker()\n        .setLngLat(data.features[0].geometry.coordinates)\n        .addTo(this.state.map)\n      this.setState({coords: data.features[0].geometry.coordinates})\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <Sidebar />\n        <ProposeForm\n          handlePhotoChange={this.handlePhotoChange}\n          imageUrl={this.state.imageUrl}\n          loading={this.state.loading}\n          cost={typeof this.state.cost === 'undefined'\n            ? 0\n            : Math.ceil(this.state.cost / 20 / this.state.currPrice)}\n          reputationCost={typeof this.state.cost === 'undefined'\n            ? 0\n            : Math.ceil(this.state.cost / this.state.weiBal * this.props.network.totalReputation / 20)}\n          handlePriceChange={this.handlePriceChange}\n          handleLocationChange={this.handleLocationChange}\n          proposeProject={this.proposeProject}\n          map={<div id='map' style={{width: 400, height: 400}} ref={el => { this.mapContainer = el }} />}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    network: state.network,\n    user: state.user.user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    proposeProject: (type, projObj, txObj) => dispatch(proposeProject(type, projObj, txObj)),\n    getNetworkStatus: () => dispatch(getNetworkStatus())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Propose)\n","import React from 'react'\nimport { Button, Form, Input, DatePicker, Upload, Icon } from 'antd'\nconst { TextArea } = Input\nconst FormItem = Form.Item\n\nconst ProposeForm = (props) => {\n  let {\n    handlePhotoChange,\n    imageUrl,\n    cost,\n    reputationCost,\n    loading,\n    handlePriceChange,\n    handleLocationChange,\n    proposeProject,\n    map\n  } = props\n  let submitHandler = (type) => {\n    proposeProject(type, props.form.getFieldsValue())\n    props.form.resetFields()\n  }\n  const uploadButton = (\n    <div>\n      {loading\n        ? (<Icon type={'loading'} />)\n        : (<div>\n          <Icon type={'plus'} />\n          <div className='ant-upload-text'>Upload</div>\n        </div>)\n      }\n    </div>\n  )\n  const { getFieldDecorator } = props.form\n  return (\n    <div>\n      <div style={{marginLeft: 200, marginBottom: 100}}>\n        <header className='App-header'>\n          <h3 className='App-title2'>Propose Project</h3>\n        </header>\n        <div style={{display: 'flex', flexDirection: 'column', marginLeft: 100, marginRight: 200}}>\n          <Form layout='horizontal'>\n            <FormItem label='Name'>\n              {getFieldDecorator('name')(<Input placeholder='Project Name' />)}\n            </FormItem>\n            <FormItem label='Photo'>\n              <Upload\n                name='avatar'\n                listType='picture-card'\n                className='avatar-uploader'\n                showUploadList={false}\n                // action='//jsonplaceholder.typicode.com/posts/'\n                // beforeUpload={beforeUpload}\n                onChange={handlePhotoChange}\n              >\n                {imageUrl\n                  ? <img style={{width: 200, height: 200}} src={imageUrl} alt='' />\n                  : uploadButton}\n              </Upload>\n            </FormItem>\n            <FormItem label='Summary'>\n              {getFieldDecorator('summary')(<TextArea rows={4} type='textarea' placeholder='Project Summary' />)}\n            </FormItem>\n            <FormItem label='Location'>\n              {getFieldDecorator('location')(<Input placeholder='Project Location' onChange={handleLocationChange} />)}\n            </FormItem>\n            {map}\n            <FormItem label='Cost'>\n              {getFieldDecorator('cost')(<Input placeholder='ETH' type='number' onChange={handlePriceChange} />)}\n            </FormItem>\n            <FormItem label='Staking End Date'>\n              {getFieldDecorator('date')(<DatePicker />)}\n            </FormItem>\n            <div style={{marginTop: 20}}>\n              <h4>{`You have to deposit ${cost} tokens`}</h4>\n            </div>\n            <div style={{marginTop: 20}}>\n              <h4>{`You have to deposit ${reputationCost} reputation`}</h4>\n            </div>\n            <div style={{marginTop: 20}}>\n              <Button type='info' onClick={() => submitHandler('tokens')} style={{marginLeft: 10}}>\n                Propose Project (Tokens)\n              </Button>\n            </div>\n            <div style={{marginTop: 20}}>\n              <Button type='info' onClick={() => submitHandler('reputation')} style={{marginLeft: 10}}>\n                Propose Project (Reputation)\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Form.create()(ProposeForm)\n"],"sourceRoot":""}